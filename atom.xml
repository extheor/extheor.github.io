<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>MaXiaoYu&#39;s Blog</title>
  <icon>https://www.gravatar.com/avatar/7ff8334eb3ce169d5ef407706436ee76</icon>
  <subtitle>每天进步一点点！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://extheor.github.io/"/>
  <updated>2020-08-19T01:00:43.204Z</updated>
  <id>https://extheor.github.io/</id>
  
  <author>
    <name>Continue.Run</name>
    <email>2044580857@qq.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>怎么使用Nginx服务开启HTTPS</title>
    <link href="https://extheor.github.io/posts/1c5a0485/index.html"/>
    <id>https://extheor.github.io/posts/1c5a0485/index.html</id>
    <published>2020-08-19T01:00:35.000Z</published>
    <updated>2020-08-19T01:00:43.204Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@v0.1/Hexo/assets/css/APlayer.min.css"><script src="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@v0.1/Hexo/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@v0.1/Hexo/assets/js/Meting.min.js"></script><h1 id="怎么使用nginx服务开启https"><a class="markdownIt-Anchor" href="#怎么使用nginx服务开启https"></a> 怎么使用Nginx服务开启HTTPS</h1><p><img src= "https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@v3.3.1/butterfly/img/loading9.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/extheor/images/%E6%B1%82%E5%85%B3%E6%B3%A8.jpg" alt="" /></p><h2 id="https的工作流程"><a class="markdownIt-Anchor" href="#https的工作流程"></a> HTTPS的工作流程</h2><p><img src= "https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@v3.3.1/butterfly/img/loading9.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/extheor/images/HTTP%E5%9B%BE%E7%89%87/HTTPS.png" alt="" /></p><ol><li>首先在nginx目录下新建 <code>certs</code> 文件夹，右击用 <code>Git Bash Here</code> 打开，输入命令</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl req -x509 -newkey rsa:2048 -nodes -sha256 -keyout localhost-privkey.pem -out localhost-cert.pem</span><br></pre></td></tr></table></figure><ol start="2"><li>然后在配置一个文件就行了</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">proxy_cache_path cache levels&#x3D;1:2 keys_zone&#x3D;my_cache:10m;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen       80 default_server;</span><br><span class="line">    listen       [::]:80 default_server;</span><br><span class="line">    server_name  test.com;</span><br><span class="line">    return 302 https:&#x2F;&#x2F;$server_name$request_uri;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen       443;</span><br><span class="line">    server_name  test.com;</span><br><span class="line"></span><br><span class="line">    ssl on;</span><br><span class="line">    ssl_certificate_key ..&#x2F;certs&#x2F;localhost-privkey.pem;</span><br><span class="line">    ssl_certificate ..&#x2F;certs&#x2F;localhost-cert.pem;</span><br><span class="line"></span><br><span class="line">    location &#x2F; &#123;</span><br><span class="line">        proxy_cache my_cache;</span><br><span class="line">        proxy_pass http:&#x2F;&#x2F;127.0.0.1:8888;</span><br><span class="line">        proxy_set_header Host $host;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@v3.3.1/butterfly/img/loading9.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/extheor/images/HTTP%E5%9B%BE%E7%89%87/HTTPS.gif" alt="" /></p><blockquote><p>如果对你有帮助的话，一键三连吧~</p><p>您的三连就是对我最大的鼓励👍</p></blockquote>]]></content>
    
    <summary type="html">
    
      怎么使用Nginx服务开启HTTPS
    
    </summary>
    
    
      <category term="HTTP" scheme="https://extheor.github.io/categories/HTTP/"/>
    
    
      <category term="HTTP" scheme="https://extheor.github.io/tags/HTTP/"/>
    
  </entry>
  
  <entry>
    <title>HTTP消息</title>
    <link href="https://extheor.github.io/posts/d090b4d/index.html"/>
    <id>https://extheor.github.io/posts/d090b4d/index.html</id>
    <published>2020-08-19T00:52:24.000Z</published>
    <updated>2020-08-19T00:52:46.716Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@v0.1/Hexo/assets/css/APlayer.min.css"><script src="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@v0.1/Hexo/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@v0.1/Hexo/assets/js/Meting.min.js"></script><h1 id="http消息"><a class="markdownIt-Anchor" href="#http消息"></a> HTTP消息</h1><h2 id="请求头"><a class="markdownIt-Anchor" href="#请求头"></a> 请求头</h2><p><img src= "https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@v3.3.1/butterfly/img/loading9.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/extheor/images/HTTP%E5%9B%BE%E7%89%87/%E8%AF%B7%E6%B1%82%E5%A4%B4.png" alt="" /></p><h2 id="响应头"><a class="markdownIt-Anchor" href="#响应头"></a> 响应头</h2><p><img src= "https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@v3.3.1/butterfly/img/loading9.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/extheor/images/HTTP%E5%9B%BE%E7%89%87/%E5%93%8D%E5%BA%94%E5%A4%B4.png" alt="" /></p><h2 id="成功响应"><a class="markdownIt-Anchor" href="#成功响应"></a> 成功响应</h2><p><img src= "https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@v3.3.1/butterfly/img/loading9.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/extheor/images/HTTP%E5%9B%BE%E7%89%87/%E6%88%90%E5%8A%9F%E5%93%8D%E5%BA%94.png" alt="" /></p><h2 id="重定向"><a class="markdownIt-Anchor" href="#重定向"></a> 重定向</h2><p><img src= "https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@v3.3.1/butterfly/img/loading9.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/extheor/images/HTTP%E5%9B%BE%E7%89%87/%E9%87%8D%E5%AE%9A%E5%90%91.png" alt="" /></p><h2 id="客户端响应"><a class="markdownIt-Anchor" href="#客户端响应"></a> 客户端响应</h2><p><img src= "https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@v3.3.1/butterfly/img/loading9.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/extheor/images/HTTP%E5%9B%BE%E7%89%87/%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%93%8D%E5%BA%94.png" alt="" /></p><h2 id="服务端响应"><a class="markdownIt-Anchor" href="#服务端响应"></a> 服务端响应</h2><p><img src= "https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@v3.3.1/butterfly/img/loading9.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/extheor/images/HTTP%E5%9B%BE%E7%89%87/%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%93%8D%E5%BA%94.png" alt="" /></p>]]></content>
    
    <summary type="html">
    
      HTTP消息
    
    </summary>
    
    
      <category term="HTTP" scheme="https://extheor.github.io/categories/HTTP/"/>
    
    
      <category term="HTTP" scheme="https://extheor.github.io/tags/HTTP/"/>
    
  </entry>
  
  <entry>
    <title>HTTP缓存</title>
    <link href="https://extheor.github.io/posts/8837602f/index.html"/>
    <id>https://extheor.github.io/posts/8837602f/index.html</id>
    <published>2020-08-19T00:52:24.000Z</published>
    <updated>2020-08-19T00:52:24.880Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@v0.1/Hexo/assets/css/APlayer.min.css"><script src="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@v0.1/Hexo/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@v0.1/Hexo/assets/js/Meting.min.js"></script><h1 id="http缓存解释为何页面响应的数据和服务端的不一致"><a class="markdownIt-Anchor" href="#http缓存解释为何页面响应的数据和服务端的不一致"></a> HTTP缓存解释为何页面响应的数据和服务端的不一致</h1><p><img src= "https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@v3.3.1/butterfly/img/loading9.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/extheor/images/%E6%B1%82%E5%85%B3%E6%B3%A8.jpg" alt="" /></p><h3 id="用途"><a class="markdownIt-Anchor" href="#用途"></a> 用途</h3><p>HTTP缓存主要用在对一些实时性要求不高的静态文件进行的缓存，往往都是存在浏览器端，防止这些“多余”的请求重复的访问服务器，对服务器造成压力，从而提高网站的性能。</p><h3 id="原理"><a class="markdownIt-Anchor" href="#原理"></a> 原理</h3><p>现有两端，浏览器和服务器端。</p><p><img src= "https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@v3.3.1/butterfly/img/loading9.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/extheor/images/HTTP%E5%9B%BE%E7%89%87/HTTP%E7%BC%93%E5%AD%981.png" alt="" /></p><p>浏览器向服务器发送请求，获取一个文件f</p><p><img src= "https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@v3.3.1/butterfly/img/loading9.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/extheor/images/HTTP%E5%9B%BE%E7%89%87/HTTP%E7%BC%93%E5%AD%982.png" alt="" /></p><p>服务器就把f给返回浏览器</p><p><img src= "https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@v3.3.1/butterfly/img/loading9.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/extheor/images/HTTP%E5%9B%BE%E7%89%87/HTTP%E7%BC%93%E5%AD%983.png" alt="" /></p><p>假如这个文件的内容变化不是那么快，一两周更新一次，浏览器每次请求服务器都返回相同的文件，岂不是对服务器资源的一种浪费？</p><p>如何解决呢？</p><p>浏览器把请求后拿到的文件存到本地，等下次请求的时候，看看本地是否有缓存文件，如果有，直接拿本地的文件，岂不是就不用请求服务器了？这其实就是http缓存的最最根本的原理。</p><p>浏览器端把请求来的文件缓存到如图下f的小方格内<br /><img src= "https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@v3.3.1/butterfly/img/loading9.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/extheor/images/HTTP%E5%9B%BE%E7%89%87/HTTP%E7%BC%93%E5%AD%984.png" alt="" /></p><p>等到下次浏览器端再次请求此文件时，就直接从浏览器缓存的文件中拿，而不再向服务器端发起请求了</p><p><img src= "https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@v3.3.1/butterfly/img/loading9.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/extheor/images/HTTP%E5%9B%BE%E7%89%87/HTTP%E7%BC%93%E5%AD%985.png" alt="" /></p><p>以下浏览器截图中标红的部分，就是没有发起请求，直接从浏览器缓存中获取的数据</p><p><img src= "https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@v3.3.1/butterfly/img/loading9.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/extheor/images/HTTP%E5%9B%BE%E7%89%87/HTTP%E7%BC%93%E5%AD%986.png" alt="" /></p><h3 id="两种缓存方式"><a class="markdownIt-Anchor" href="#两种缓存方式"></a> 两种缓存方式</h3><p>浏览器端有了缓存之后，不能一直有效吧，如果文件更新了，我们还继续使用浏览器缓存中的数据，虽说时效性不强，但长期使用旧文件也不算合理吧。</p><p>http协议提供了两种维度来让缓存失效：时间和文件的修改。</p><h2 id="可缓存性"><a class="markdownIt-Anchor" href="#可缓存性"></a> 可缓存性</h2><ul><li><p>public</p><blockquote><p>客户端和代理服务器都可以缓存，大部分情况可以认为public和private是一样的</p></blockquote></li><li><p>private</p><blockquote><p>客户端可以缓存</p></blockquote></li><li><p>no-cache</p><blockquote><p>需要使用另外一种http缓存策略来验证缓存数据</p></blockquote></li></ul><h2 id="到期"><a class="markdownIt-Anchor" href="#到期"></a> 到期</h2><ul><li><p>max-age= <code>&lt;seconds&gt;</code></p><blockquote><p>缓存的内容将在 xxx 秒后失效（时间就是在这儿设置的）</p></blockquote></li><li><p>s-maxage= <code>&lt;seconds&gt;</code></p></li><li><p>max-stale= <code>&lt;seconds&gt;</code></p></li></ul><h2 id="重新验证"><a class="markdownIt-Anchor" href="#重新验证"></a> 重新验证</h2><ul><li><p>must-revalidate</p><blockquote><p>验证缓存是否到期了</p></blockquote></li><li><p>proxy-revalidate</p><blockquote><p>发送一个报头，告诉浏览器当前页面不进行缓存，每次访问的时间必须从服务器上读取最新的数据</p></blockquote></li></ul><h2 id="其他"><a class="markdownIt-Anchor" href="#其他"></a> 其他</h2><ul><li><p>no-store</p><blockquote><p>所有缓存策略都不会进行（这里指的是两种缓存策略都不会进行）</p></blockquote></li></ul><h2 id="cache-control-缓存原理"><a class="markdownIt-Anchor" href="#cache-control-缓存原理"></a> cache-control 缓存原理</h2><p>test.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"/script.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>server.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">"http"</span>);</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">"fs"</span>);</span><br><span class="line"></span><br><span class="line">http</span><br><span class="line">  .createServer(<span class="function"><span class="keyword">function</span> (<span class="params">request, response</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"request come"</span>, request.url);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (request.url === <span class="string">"/"</span>) &#123;</span><br><span class="line">      <span class="keyword">const</span> html = fs.readFileSync(<span class="string">"test.html"</span>, <span class="string">"utf8"</span>);</span><br><span class="line">      response.writeHead(<span class="number">200</span>, &#123;</span><br><span class="line">        <span class="string">"Content-Type"</span>: <span class="string">"text/html"</span>,</span><br><span class="line">      &#125;);</span><br><span class="line">      response.end(html);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (request.url === <span class="string">"/script.js"</span>) &#123;</span><br><span class="line">      response.writeHead(<span class="number">200</span>, &#123;</span><br><span class="line">        <span class="string">"Content-Type"</span>: <span class="string">"text/javascript"</span>,</span><br><span class="line">        <span class="string">"Cache-Control"</span>: <span class="string">"max-age=60"</span>,</span><br><span class="line">      &#125;);</span><br><span class="line">      response.end(<span class="string">"console.log('script loaded  twice')"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">  .listen(<span class="number">8888</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"服务器开启了 - 8888"</span>);</span><br></pre></td></tr></table></figure><p>第一次访问请求，客户端向服务端发起一个文件请求，服务器返回文件并在<code>response</code>中加了响应头&quot;Cache-Control:max-age=60&quot;，这样一来，这个f文件只能在浏览器端存60秒</p><p><img src= "https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@v3.3.1/butterfly/img/loading9.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/extheor/images/HTTP%E5%9B%BE%E7%89%87/HTTP%E7%BC%93%E5%AD%987.png" alt="" /></p><p>在这60秒钟，客户端请求服务器的f文件会直接从缓存中拿取</p><p><img src= "https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@v3.3.1/butterfly/img/loading9.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/extheor/images/HTTP%E5%9B%BE%E7%89%87/HTTP%E7%BC%93%E5%AD%985.png" alt="" /></p><p>60秒过后，缓存失效，浏览器再次请求文件需要重新向服务器发起请求。</p><p><img src= "https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@v3.3.1/butterfly/img/loading9.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/extheor/images/HTTP%E5%9B%BE%E7%89%87/HTTP%E7%BC%93%E5%AD%982.png" alt="" /></p><p>注意：假如说请求中包含“Cache-Control:max-age=0”或者“Cache-Control:no-store”无论响应中返回的&quot;max-age&quot;值是多少，都不会缓存到服务器。浏览器中对于地址栏中直接输入文件地址的请求做了优化处理，加上了“Cache-Control:max-age=0”，也就是说，如果这个css、js或者其他静态文件是通过你在浏览器上直接输入获得的，将会每时每刻都是获取最新的。</p><h3 id="通过查看文件的修改来让缓存失效"><a class="markdownIt-Anchor" href="#通过查看文件的修改来让缓存失效"></a> 通过查看文件的修改来让缓存失效</h3><p>这种维度比较的科学：浏览器先请求服务获得文件后，服务器会返回该文件的最后修改时间<code>Last-Modified</code>，作为文件的一个标识，下次浏览器请求的时候，会带着这个标识去请求(此时为<code>If-Modified-Since</code>)，然后服务器做校验，如果说时间标识<code>If-Modified-Since</code>等于服务器的文件修改时间，则说明没有修改，返回304状态码，浏览器从缓存中获取文件，但是如果浏览器保存的时间标识<code>If-Modified-Since</code>小于服务器端的文件修改时间，那么，说明文件发生了修改，浏览器就会重新获取新的文件。<br />（<code>If-Modified-Since</code>的时间如果大于服务器端文件的时间，会被认为是错误的请求）</p><p>如图，浏览器C向服务器发S起请求，服务器返回文件的同时还会返回文件的最后修改时间<code>Last-Modified</code>作为文件时间标识，浏览器会将文件和文件时间标识都缓存起来。</p><p><img src= "https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@v3.3.1/butterfly/img/loading9.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/extheor/images/HTTP%E5%9B%BE%E7%89%87/HTTP%E7%BC%93%E5%AD%988.png" alt="" /></p><p>假如服务器端的文件f并没有被修改，服务器通过判断请求头带的时间标识<code>If-Modified-Since</code>得出结论后，都会返回状态码<code>304</code>告诉浏览器文件没有被修改，让浏览器使用缓存。</p><p><img src= "https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@v3.3.1/butterfly/img/loading9.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/extheor/images/HTTP%E5%9B%BE%E7%89%87/HTTP%E7%BC%93%E5%AD%989.png" alt="" /></p><p>假如服务器端的文件f修改了，那么，浏览器将重新获取文件，并缓存到浏览器中。</p><p><img src= "https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@v3.3.1/butterfly/img/loading9.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/extheor/images/HTTP%E5%9B%BE%E7%89%87/HTTP%E7%BC%93%E5%AD%9810.png" alt="" /></p><p>虽然通过文件最后修改时间作为标识已经很完美了，但是，还是可能存在一个问题：就是有可能服务器端的文件修改后，又改回原来的样子，这样，虽然文件最后修改时间变了，但是，文件内容并没有改变。这样还是会有多余的请求到达服务器，该如何处理呢？<br />可以将文件内容作为一个唯一标识，例如可以对文件内容取MD5值作为字段(<code>etag</code>)也传给浏览器端，假如这个文件内容没变化，那么MD5值也不会改变。那么，处理流程就变成了这样：服务器端先判断文件修改时间是否发生了变化，如果发生了变化，那么再对比浏览器传来的<code>If-None-Match</code>即浏览器端保留的<code>E-tag</code>值，如果发生了变化，则证明文件修改了，需要浏览器重新下载文件，如果没有，则证明文件内容没变化，返回304状态码。</p><p>如图，浏览器要访问服务器的f文件，服务器S返回了文件最后修改时间<code>Last-Modified</code>和文件的内容标识<code>E-tag</code>，浏览器将这两个字段及其文件缓存了起来</p><p><img src= "https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@v3.3.1/butterfly/img/loading9.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/extheor/images/HTTP%E5%9B%BE%E7%89%87/HTTP%E7%BC%93%E5%AD%9811.png" alt="" /></p><p>当文件最后修改时间没变，文件内容也没变的时候，返回304，让浏览器从缓存中拿取文件。</p><p><img src= "https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@v3.3.1/butterfly/img/loading9.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/extheor/images/HTTP%E5%9B%BE%E7%89%87/HTTP%E7%BC%93%E5%AD%9812.png" alt="" /></p><p>当文件最后修改时间变了，文件内容没变的时候，返回304，让浏览器从缓存中拿取文件。</p><p><img src= "https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@v3.3.1/butterfly/img/loading9.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/extheor/images/HTTP%E5%9B%BE%E7%89%87/HTTP%E7%BC%93%E5%AD%9812.png" alt="" /></p><p>当文件修改时间变了，文件内容也变了的时候，服务器会重新下发新的文件给浏览器。</p><p><img src= "https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@v3.3.1/butterfly/img/loading9.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/extheor/images/HTTP%E5%9B%BE%E7%89%87/HTTP%E7%BC%93%E5%AD%9813.png" alt="" /></p><p>此维度让缓存失效牵扯的http字段有点多，我们最后整理一下：<br />文件最后修改时间字段：</p><ul><li>Response：<code>Last-Modified</code></li><li>Request：<code>If-Modified-Since</code></li></ul><p>文件内容标识字段：</p><ul><li>Response：<code>E-tag</code></li><li>Request：<code>If-None-Match</code></li></ul><blockquote><p>众里寻他千百度，慕然回首，点关注</p><p>写文章不易，求三连~/</p></blockquote>]]></content>
    
    <summary type="html">
    
      HTTP缓存解释为何页面响应的数据和服务端的不一致
    
    </summary>
    
    
      <category term="HTTP" scheme="https://extheor.github.io/categories/HTTP/"/>
    
    
      <category term="HTTP" scheme="https://extheor.github.io/tags/HTTP/"/>
    
  </entry>
  
  <entry>
    <title>如何使用Nginx服务开启HTTP2</title>
    <link href="https://extheor.github.io/posts/eac19412/index.html"/>
    <id>https://extheor.github.io/posts/eac19412/index.html</id>
    <published>2020-08-19T00:52:24.000Z</published>
    <updated>2020-08-19T00:59:58.188Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@v0.1/Hexo/assets/css/APlayer.min.css"><script src="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@v0.1/Hexo/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@v0.1/Hexo/assets/js/Meting.min.js"></script><h1 id="如何使用nginx服务开启http2"><a class="markdownIt-Anchor" href="#如何使用nginx服务开启http2"></a> 如何使用Nginx服务开启HTTP2</h1><ol><li>首先在Nginx配置文件中配置</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">proxy_cache_path cache levels&#x3D;1:2 keys_zone&#x3D;my_cache:10m;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen       80 default_server;</span><br><span class="line">    listen       [::]:80 default_server;</span><br><span class="line">    server_name  test.com;</span><br><span class="line">    return 302 https:&#x2F;&#x2F;$server_name$request_uri;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen       443 http2; # 配置HTTP2</span><br><span class="line">    server_name  test.com;</span><br><span class="line">    http2_push_preload on; # 配置HTTP2</span><br><span class="line"></span><br><span class="line">    ssl on;</span><br><span class="line">    ssl_certificate_key ..&#x2F;certs&#x2F;localhost-privkey.pem;</span><br><span class="line">    ssl_certificate ..&#x2F;certs&#x2F;localhost-cert.pem;</span><br><span class="line"></span><br><span class="line">    location &#x2F; &#123;</span><br><span class="line">        proxy_cache my_cache;</span><br><span class="line">        proxy_pass http:&#x2F;&#x2F;127.0.0.1:8888;</span><br><span class="line">        proxy_set_header Host $host;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在server.js中要加上Link，如下</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">response.writeHead(<span class="number">200</span>, &#123;</span><br><span class="line">    <span class="string">"Content-Type"</span>: <span class="string">"text/html"</span>,</span><br><span class="line">    Connection: <span class="string">"close"</span>,</span><br><span class="line">    Link: <span class="string">"&lt;/test.jpg&gt;; as=image; rel=preload"</span>,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      如何使用Nginx服务开启HTTP2
    
    </summary>
    
    
      <category term="HTTP" scheme="https://extheor.github.io/categories/HTTP/"/>
    
    
      <category term="HTTP" scheme="https://extheor.github.io/tags/HTTP/"/>
    
  </entry>
  
  <entry>
    <title>HTTP CSP详解</title>
    <link href="https://extheor.github.io/posts/149dde25/index.html"/>
    <id>https://extheor.github.io/posts/149dde25/index.html</id>
    <published>2020-08-19T00:51:16.000Z</published>
    <updated>2020-08-19T00:51:31.580Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@v0.1/Hexo/assets/css/APlayer.min.css"><script src="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@v0.1/Hexo/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@v0.1/Hexo/assets/js/Meting.min.js"></script><h1 id="http-csp详解"><a class="markdownIt-Anchor" href="#http-csp详解"></a> HTTP CSP详解</h1><p>跨域脚本攻击 <a href="http://baike.baidu.com/view/2161269.htm" target="_blank" rel="noopener">XSS</a> 是最常见、危害最大的网页安全漏洞。</p><p><img src= "https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@v3.3.1/butterfly/img/loading9.gif" data-lazy-src="http://www.ruanyifeng.com/blogimg/asset/2016/bg2016091301.png" alt="img" /></p><p>为了防止它们，要采取很多编程措施，非常麻烦。很多人提出，能不能根本上解决问题，浏览器自动禁止外部注入恶意脚本？</p><p>这就是&quot;网页安全政策&quot;（Content Security Policy，缩写 CSP）的来历。本文详细介绍如何使用 CSP 防止 XSS 攻击。</p><p><img src= "https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@v3.3.1/butterfly/img/loading9.gif" data-lazy-src="http://www.ruanyifeng.com/blogimg/asset/2016/bg2016091302.jpg" alt="img" /></p><h2 id="一-简介"><a class="markdownIt-Anchor" href="#一-简介"></a> 一、简介</h2><p>CSP 的实质就是白名单制度，开发者明确告诉客户端，哪些外部资源可以加载和执行，等同于提供白名单。它的实现和执行全部由浏览器完成，开发者只需提供配置。</p><p>CSP 大大增强了网页的安全性。攻击者即使发现了漏洞，也没法注入脚本，除非还控制了一台列入了白名单的可信主机。</p><p>两种方法可以启用 CSP。一种是通过 HTTP 头信息的<code>Content-Security-Policy</code>的字段。</p><p><img src= "https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@v3.3.1/butterfly/img/loading9.gif" data-lazy-src="http://www.ruanyifeng.com/blogimg/asset/2016/bg2016091305.jpg" alt="img" /></p><blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Content-Security-Policy</span>: script-src 'self'; object-src 'none';</span><br><span class="line">style-src cdn.example.org third-party.org; child-src https:</span><br></pre></td></tr></table></figure></blockquote><p>另一种是通过网页的``标签。</p><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta http-equiv&#x3D;&quot;Content-Security-Policy&quot; content&#x3D;&quot;script-src &#39;self&#39;; object-src &#39;none&#39;; style-src cdn.example.org third-party.org; child-src https:&quot;&gt;</span><br></pre></td></tr></table></figure></blockquote><p>上面代码中，CSP 做了如下配置。</p><blockquote><ul><li>脚本：只信任当前域名</li><li>``标签：不信任任何URL，即不加载任何资源</li><li>样式表：只信任<code>cdn.example.org</code>和<code>third-party.org</code></li><li>框架（frame）：必须使用HTTPS协议加载</li><li>其他资源：没有限制</li></ul></blockquote><p>启用后，不符合 CSP 的外部资源就会被阻止加载。</p><p>Chrome 的报错信息。</p><p><img src= "https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@v3.3.1/butterfly/img/loading9.gif" data-lazy-src="http://www.ruanyifeng.com/blogimg/asset/2016/bg2016091303.png" alt="img" /></p><p>Firefox 的报错信息。</p><p><img src= "https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@v3.3.1/butterfly/img/loading9.gif" data-lazy-src="http://www.ruanyifeng.com/blogimg/asset/2016/bg2016091306.png" alt="img" /></p><h2 id="二-限制选项"><a class="markdownIt-Anchor" href="#二-限制选项"></a> 二、限制选项</h2><p>CSP 提供了很多限制选项，涉及安全的各个方面。</p><h3 id="21-资源加载限制"><a class="markdownIt-Anchor" href="#21-资源加载限制"></a> 2.1 资源加载限制</h3><p>以下选项限制各类资源的加载。</p><blockquote><ul><li><strong><code>script-src</code></strong>：外部脚本</li><li><strong><code>style-src</code></strong>：样式表</li><li><strong><code>img-src</code></strong>：图像</li><li><strong><code>media-src</code></strong>：媒体文件（音频和视频）</li><li><strong><code>font-src</code></strong>：字体文件</li><li><strong><code>object-src</code></strong>：插件（比如 Flash）</li><li><strong><code>child-src</code></strong>：框架</li><li><strong><code>frame-ancestors</code></strong>：嵌入的外部资源（比如<frame>、<iframe>、<embed>和<applet>）</li><li><strong><code>connect-src</code></strong>：HTTP 连接（通过 XHR、WebSockets、EventSource等）</li><li><strong><code>worker-src</code></strong>：<code>worker</code>脚本</li><li><strong><code>manifest-src</code></strong>：manifest 文件</li></ul></blockquote><h3 id="22-default-src"><a class="markdownIt-Anchor" href="#22-default-src"></a> 2.2 default-src</h3><p><code>default-src</code>用来设置上面各个选项的默认值。</p><blockquote><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Content-Security-Policy</span>: default-src 'self'</span><br></pre></td></tr></table></figure></blockquote><p>上面代码限制<strong>所有的</strong>外部资源，都只能从当前域名加载。</p><p>如果同时设置某个单项限制（比如<code>font-src</code>）和<code>default-src</code>，前者会覆盖后者，即字体文件会采用<code>font-src</code>的值，其他资源依然采用<code>default-src</code>的值。</p><h3 id="23-url-限制"><a class="markdownIt-Anchor" href="#23-url-限制"></a> 2.3 URL 限制</h3><p>有时，网页会跟其他 URL 发生联系，这时也可以加以限制。</p><blockquote><ul><li><strong><code>frame-ancestors</code></strong>：限制嵌入框架的网页</li><li><strong><code>base-uri</code></strong>：限制``</li><li><strong><code>form-action</code></strong>：限制``</li></ul></blockquote><h3 id="24-其他限制"><a class="markdownIt-Anchor" href="#24-其他限制"></a> 2.4 其他限制</h3><p>其他一些安全相关的功能，也放在了 CSP 里面。</p><blockquote><ul><li><strong><code>block-all-mixed-content</code></strong>：HTTPS 网页不得加载 HTTP 资源（浏览器已经默认开启）</li><li><strong><code>upgrade-insecure-requests</code></strong>：自动将网页上所有加载外部资源的 HTTP 链接换成 HTTPS 协议</li><li><strong><code>plugin-types</code></strong>：限制可以使用的插件格式</li><li><strong><code>sandbox</code></strong>：浏览器行为的限制，比如不能有弹出窗口等。</li></ul></blockquote><h3 id="25-report-uri"><a class="markdownIt-Anchor" href="#25-report-uri"></a> 2.5 report-uri</h3><p>有时，我们不仅希望防止 XSS，还希望记录此类行为。<code>report-uri</code>就用来告诉浏览器，应该把注入行为报告给哪个网址。</p><blockquote><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Content-Security-Policy</span>: default-src 'self'; ...; report-uri /my_amazing_csp_report_parser;</span><br></pre></td></tr></table></figure></blockquote><p>上面代码指定，将注入行为报告给<code>/my_amazing_csp_report_parser</code>这个 URL。</p><p>浏览器会使用<code>POST</code>方法，发送一个JSON对象，下面是一个例子。</p><blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"csp-report"</span>: &#123;</span><br><span class="line">    <span class="string">"document-uri"</span>: <span class="string">"http://example.org/page.html"</span>,</span><br><span class="line">    <span class="string">"referrer"</span>: <span class="string">"http://evil.example.com/"</span>,</span><br><span class="line">    <span class="string">"blocked-uri"</span>: <span class="string">"http://evil.example.com/evil.js"</span>,</span><br><span class="line">    <span class="string">"violated-directive"</span>: <span class="string">"script-src 'self' https://apis.google.com"</span>,</span><br><span class="line">    <span class="string">"original-policy"</span>: <span class="string">"script-src 'self' https://apis.google.com; report-uri http://example.org/my_amazing_csp_report_parser"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></blockquote><p><img src= "https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@v3.3.1/butterfly/img/loading9.gif" data-lazy-src="http://www.ruanyifeng.com/blogimg/asset/2016/bg2016091304.png" alt="img" /></p><h2 id="三-content-security-policy-report-only"><a class="markdownIt-Anchor" href="#三-content-security-policy-report-only"></a> 三、Content-Security-Policy-Report-Only</h2><p>除了<code>Content-Security-Policy</code>，还有一个<code>Content-Security-Policy-Report-Only</code>字段，表示不执行限制选项，只是记录违反限制的行为。</p><p>它必须与<code>report-uri</code>选项配合使用。</p><blockquote><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Content-Security-Policy-Report-Only</span>: default-src 'self'; ...; report-uri /my_amazing_csp_report_parser;</span><br></pre></td></tr></table></figure></blockquote><h2 id="四-选项值"><a class="markdownIt-Anchor" href="#四-选项值"></a> 四、选项值</h2><p>每个限制选项可以设置以下几种值，这些值就构成了白名单。</p><blockquote><ul><li>主机名：<code>example.org</code>，<code>https://example.com:443</code></li><li>路径名：<code>example.org/resources/js/</code></li><li>通配符：<code>*.example.org</code>，<code>*://*.example.com:*</code>（表示任意协议、任意子域名、任意端口）</li><li>协议名：<code>https:</code>、<code>data:</code></li><li>关键字<code>'self'</code>：当前域名，需要加引号</li><li>关键字<code>'none'</code>：禁止加载任何外部资源，需要加引号</li></ul></blockquote><p>多个值也可以并列，用空格分隔。</p><blockquote><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Content-Security-Policy</span>: script-src 'self' https://apis.google.com</span><br></pre></td></tr></table></figure></blockquote><p>如果同一个限制选项使用多次，只有第一次会生效。</p><blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 错误的写法</span><br><span class="line">script-src https://host1.com; script-src https://host2.com</span><br><span class="line"></span><br><span class="line"># 正确的写法</span><br><span class="line">script-src https://host1.com https://host2.com</span><br></pre></td></tr></table></figure></blockquote><p>如果不设置某个限制选项，就是默认允许任何值。</p><h2 id="五-script-src-的特殊值"><a class="markdownIt-Anchor" href="#五-script-src-的特殊值"></a> 五、script-src 的特殊值</h2><p>除了常规值，<code>script-src</code>还可以设置一些特殊值。注意，下面这些值都必须放在单引号里面。</p><blockquote><ul><li><strong><code>'unsafe-inline'</code></strong>：允许执行页面内嵌的<code>&lt;script&gt;</code>标签和事件监听函数</li><li><strong><code>unsafe-eval</code></strong>：允许将字符串当作代码执行，比如使用<code>eval</code>、<code>setTimeout</code>、<code>setInterval</code>和<code>Function</code>等函数。</li><li><strong>nonce值</strong>：每次HTTP回应给出一个授权token，页面内嵌脚本必须有这个token，才会执行</li><li><strong>hash值</strong>：列出允许执行的脚本代码的Hash值，页面内嵌脚本的哈希值只有吻合的情况下，才能执行。</li></ul></blockquote><p>nonce值的例子如下，服务器发送网页的时候，告诉浏览器一个随机生成的token。</p><blockquote><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Content-Security-Policy</span>: script-src 'nonce-EDNnf03nceIOfn39fn3e9h3sdfa'</span><br></pre></td></tr></table></figure></blockquote><p>页面内嵌脚本，必须有这个token才能执行。</p><blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script nonce=EDNnf03nceIOfn39fn3e9h3sdfa&gt;</span><br><span class="line">  <span class="comment">// some code</span></span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure></blockquote><p>hash值的例子如下，服务器给出一个允许执行的代码的hash值。</p><blockquote><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Content-Security-Policy</span>: script-src 'sha256-qznLcsROx4GACP2dm0UCKCzCG-HiZ1guq6ZZDob_Tng='</span><br></pre></td></tr></table></figure></blockquote><p>下面的代码就会允许执行，因为hash值相符。</p><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;alert(&#39;Hello, world.&#39;);&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure></blockquote><p>注意，计算hash值的时候，<script>标签不算在内。</p><p>除了<code>script-src</code>选项，nonce值和hash值还可以用在<code>style-src</code>选项，控制页面内嵌的样式表。</p><h2 id="六-注意点"><a class="markdownIt-Anchor" href="#六-注意点"></a> 六、注意点</h2><p>（1）<code>script-src</code>和<code>object-src</code>是必设的，除非设置了<code>default-src</code>。</p><p>因为攻击者只要能注入脚本，其他限制都可以规避。而<code>object-src</code>必设是因为 Flash 里面可以执行外部脚本。</p><p>（2）<code>script-src</code>不能使用<code>unsafe-inline</code>关键字（除非伴随一个nonce值），也不能允许设置<code>data:</code>URL。</p><p>下面是两个恶意攻击的例子。</p><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src&#x3D;&quot;x&quot; onerror&#x3D;&quot;evil()&quot;&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;data:text&#x2F;javascript,evil()&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure></blockquote><p>（3）必须特别注意 JSONP 的回调函数。</p><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script</span><br><span class="line">src&#x3D;&quot;&#x2F;path&#x2F;jsonp?callback&#x3D;alert(document.domain)&#x2F;&#x2F;&quot;&gt;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure></blockquote><p>上面的代码中，虽然加载的脚本来自当前域名，但是通过改写回调函数，攻击者依然可以执行恶意代码。</p>]]></content>
    
    <summary type="html">
    
      HTTP CSP详解
    
    </summary>
    
    
      <category term="HTTP" scheme="https://extheor.github.io/categories/HTTP/"/>
    
    
      <category term="HTTP" scheme="https://extheor.github.io/tags/HTTP/"/>
    
  </entry>
  
  <entry>
    <title>HTTP Cookie详解</title>
    <link href="https://extheor.github.io/posts/fb684fb0/index.html"/>
    <id>https://extheor.github.io/posts/fb684fb0/index.html</id>
    <published>2020-08-19T00:50:24.000Z</published>
    <updated>2020-08-19T00:50:33.743Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@v0.1/Hexo/assets/css/APlayer.min.css"><script src="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@v0.1/Hexo/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@v0.1/Hexo/assets/js/Meting.min.js"></script><h1 id="http-cookie详解"><a class="markdownIt-Anchor" href="#http-cookie详解"></a> HTTP Cookie详解</h1><p>Cookie总是保存在客户端中，按在客户端中的存储位置，可分为内存Cookie和硬盘Cookie。内存Cookie由浏览器维护，保存在内存中，浏览器关闭后就消失了，其存在时间是短暂的。硬盘Cookie保存在硬盘里，有一个过期时间，除非用户手工清理或到了过期时间，硬盘Cookie不会被删除，其存在时间是长期的。所以，按存在时间，可分为非持久Cookie和持久Cookie。</p><h2 id="http请求cookie的交互流程"><a class="markdownIt-Anchor" href="#http请求cookie的交互流程"></a> HTTP请求+cookie的交互流程</h2><p><img src= "https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@v3.3.1/butterfly/img/loading9.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/extheor/images/HTTP%E5%9B%BE%E7%89%87/Cookie.png" alt="" /></p><p>如果步骤5携带的是过期的cookie或者是错误的cookie，那么将认证失败，返回至要求身份认证页面。</p><h4 id="cookie的属性"><a class="markdownIt-Anchor" href="#cookie的属性"></a> cookie的属性</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">"http"</span>);</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">"fs"</span>);</span><br><span class="line"></span><br><span class="line">http</span><br><span class="line">  .createServer(<span class="function"><span class="keyword">function</span> (<span class="params">request, response</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"request come"</span>, request.url);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> host = request.headers.host;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (request.url === <span class="string">"/"</span>) &#123;</span><br><span class="line">      <span class="keyword">const</span> html = fs.readFileSync(<span class="string">"test.html"</span>, <span class="string">"utf8"</span>);</span><br><span class="line">      <span class="keyword">if</span> (host === <span class="string">"test.com:8888"</span>) &#123;</span><br><span class="line">        response.writeHead(<span class="number">200</span>, &#123;</span><br><span class="line">          <span class="string">"Content-Type"</span>: <span class="string">"text/html"</span>,</span><br><span class="line">          <span class="string">"Set-Cookie"</span>: [<span class="string">"id=123; max-age=2"</span>, <span class="string">"abc=456; domain=test.com:8888"</span>],</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">      response.end(html);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">  .listen(<span class="number">8888</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"服务器开启了 - 8888"</span>);</span><br></pre></td></tr></table></figure><p>一般cookie所具有的属性，包括：</p><p>Domain：域，表示当前cookie所属于哪个域或子域下面。</p><p>对于服务器返回的Set-Cookie中，如果没有指定Domain的值，那么其Domain的值是默认为当前所提交的http的请求所对应的主域名的。比如访问 <code>test.com:8888</code> ，返回一个cookie，没有指名domain值，那么其为值为默认的 <code>test.com:8888</code> 。</p><p>通过以上代码设置了主域名 <code>test.com:8888</code> 后通过浏览器访问 <code>a.test.com:8888</code> 、<code>b.test.com:8888</code> 等都是一样的，都会在请求头设置Cookie。</p><p>Path：表示cookie的所属路径。</p><p>Expire time/Max-age：表示了cookie的有效期。expire的值，是一个时间，过了这个时间，该cookie就失效了。或者是用max-age指定当前cookie是在多长时间之后而失效。如果服务器返回的一个cookie，没有指定其expire time，那么表明此cookie有效期只是当前的session，即是session cookie，当前session会话结束后，就过期了。对应的，当关闭（浏览器中）该页面的时候，此cookie就应该被浏览器所删除了。</p><p>secure：表示该cookie只能用https传输。一般用于包含认证信息的cookie，要求传输此cookie的时候，必须用https传输。</p><p>httponly：表示此cookie必须用于http或https传输。这意味着，浏览器脚本，比如javascript中，是不允许访问操作此cookie的。</p><h4 id="服务器发送cookie给客户端"><a class="markdownIt-Anchor" href="#服务器发送cookie给客户端"></a> <strong>服务器发送cookie给客户端</strong></h4><p>从服务器端，发送cookie给客户端，是对应的Set-Cookie。包括了对应的cookie的名称，值，以及各个属性。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Set</span>-Cookie: lu=Rg3vHJZnehYLjVg7qi3bZjzg; Expires=Tue, <span class="number">15</span> Jan <span class="number">2013</span> <span class="number">21</span>:<span class="number">47</span>:<span class="number">38</span> GMT; Path=<span class="regexp">/; Domain=.169it.com; HttpOnly</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">Set-Cookie: made_write_conn=1295214458; Path=/</span>; Domain=<span class="number">.169</span>it.com</span><br><span class="line"></span><br><span class="line"><span class="built_in">Set</span>-Cookie: reg_fb_gate=deleted; Expires=Thu, <span class="number">01</span> Jan <span class="number">1970</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">01</span> GMT; Path=<span class="regexp">/; Domain=.169it.com; HttpOnly</span></span><br></pre></td></tr></table></figure><h4 id="从客户端把cookie发送到服务器"><a class="markdownIt-Anchor" href="#从客户端把cookie发送到服务器"></a> 从客户端把cookie发送到服务器</h4><p>从客户端发送cookie给服务器的时候，是不发送cookie的各个属性的，而只是发送对应的名称和值。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">GET /spec.html HTTP/<span class="number">1.1</span>  </span><br><span class="line"></span><br><span class="line">Host: www.example.org  </span><br><span class="line"></span><br><span class="line">Cookie: name=value; name2=value2  </span><br><span class="line"></span><br><span class="line">Accept: *<span class="comment">/*</span></span><br></pre></td></tr></table></figure><h4 id="关于修改设置cookie"><a class="markdownIt-Anchor" href="#关于修改设置cookie"></a> 关于修改，设置cookie</h4><p>除了服务器发送给客户端（浏览器）的时候，通过Set-Cookie，创建或更新对应的cookie之外，还可以通过浏览器内置的一些脚本，比如javascript，去设置对应的cookie，对应实现是操作js中的document.cookie。</p><h4 id="cookie的缺陷"><a class="markdownIt-Anchor" href="#cookie的缺陷"></a> Cookie的缺陷</h4><ul><li>cookie会被附加在每个HTTP请求中，所以无形中增加了流量。</li><li>由于在HTTP请求中的cookie是明文传递的，所以安全性成问题。（除非用HTTPS)</li><li>Cookie的大小限制在4KB左右。对于复杂的存储需求来说是不够用的。</li></ul>]]></content>
    
    <summary type="html">
    
      HTTP Cookie详解
    
    </summary>
    
    
      <category term="HTTP" scheme="https://extheor.github.io/categories/HTTP/"/>
    
    
      <category term="HTTP" scheme="https://extheor.github.io/tags/HTTP/"/>
    
  </entry>
  
  <entry>
    <title>HTTP Connection详解</title>
    <link href="https://extheor.github.io/posts/69d79f93/index.html"/>
    <id>https://extheor.github.io/posts/69d79f93/index.html</id>
    <published>2020-08-19T00:23:16.000Z</published>
    <updated>2020-08-19T00:47:53.092Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@v0.1/Hexo/assets/css/APlayer.min.css"><script src="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@v0.1/Hexo/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@v0.1/Hexo/assets/js/Meting.min.js"></script><h1 id="http-connection详解"><a class="markdownIt-Anchor" href="#http-connection详解"></a> HTTP Connection详解</h1><p><img src= "https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@v3.3.1/butterfly/img/loading9.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/extheor/images/%E6%B1%82%E5%85%B3%E6%B3%A8.jpg" alt="" /></p><p>HTTP请求发送之前，需要先建立TCP连接，只有TCP连接建立，才可以发送HTTP请求。<br />当HTTP请求发送并响应完成，有两种情况，</p><table><thead><tr><th>操作</th><th>Are</th></tr></thead><tbody><tr><td>关闭TCP连接</td><td>当HTTP发送下一个请求的时候，需要在此进行三次握手，建立TCP连接</td></tr><tr><td>不关闭TCP连接</td><td>长连接，HTTP发送下一个请求的时候可以直接发送，不需要再次建立TCP连接</td></tr></tbody></table><p>在浏览器中，ConnectionID 表示的就是TCP建立连接的ID<br />![](<a href="https://cdn.jsdelivr.net/gh/extheor/images/HTTP%E5%9B%BE%E7%89%87/HTTP" target="_blank" rel="noopener">https://cdn.jsdelivr.net/gh/extheor/images/HTTP图片/HTTP</a> Connection1.png)</p><p>以google浏览器为例子， 在常见网站中我们期望首页可以并发发送请求，以提高用户体验。<br />google可以提供最多6个TCP连接。<br />这也就意味着如果在一个首页中，需要同时发送7个请求，那么会同时创建6个TCP链接，并发送对应的6个请求，当这6个请求中有一个已经完成请求响应了，最后一个请求才可以接着发送请求。</p><hr /><p>在浏览器中不设置Connection，会默认是keep-alive（长连接）， 如下：<br />![](<a href="https://cdn.jsdelivr.net/gh/extheor/images/HTTP%E5%9B%BE%E7%89%87/HTTP" target="_blank" rel="noopener">https://cdn.jsdelivr.net/gh/extheor/images/HTTP图片/HTTP</a> Connection2.png)</p><p>设置关闭长连接，nodejs中代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">response.writeHead(<span class="number">200</span>, &#123;</span><br><span class="line">    <span class="string">"Content-Type"</span>: <span class="string">"image/jpg"</span>,</span><br><span class="line">    <span class="string">"Connection"</span> : <span class="string">"close"</span>   <span class="comment">// 每个请求都会重新建立TCP连接</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>浏览器中：（此时所有的ConnectionID的值都是不同的）<br />![](<a href="https://cdn.jsdelivr.net/gh/extheor/images/HTTP%E5%9B%BE%E7%89%87/HTTP" target="_blank" rel="noopener">https://cdn.jsdelivr.net/gh/extheor/images/HTTP图片/HTTP</a> Connection3.png)</p><hr /><p>在HTTP2中，会有信道复用，意味着在一个TCP连接上可以并发发送多个HTTP请求。例如在google.com域名下的所有请求都是只会创建一个TCP连接。</p><blockquote><p>写文章不易，求关注~</p></blockquote>]]></content>
    
    <summary type="html">
    
      HTTP Connection详解
    
    </summary>
    
    
      <category term="HTTP" scheme="https://extheor.github.io/categories/HTTP/"/>
    
    
      <category term="HTTP" scheme="https://extheor.github.io/tags/HTTP/"/>
    
  </entry>
  
  <entry>
    <title>curl命令大全</title>
    <link href="https://extheor.github.io/posts/98e67280/index.html"/>
    <id>https://extheor.github.io/posts/98e67280/index.html</id>
    <published>2020-08-19T00:21:15.000Z</published>
    <updated>2020-08-19T00:22:27.643Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@v0.1/Hexo/assets/css/APlayer.min.css"><script src="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@v0.1/Hexo/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@v0.1/Hexo/assets/js/Meting.min.js"></script><h2 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介</h2><p>curl 是常用的命令行工具，用来请求 Web 服务器。它的名字就是客户端（client）的 URL 工具的意思。</p><p>它的功能非常强大，命令行参数多达几十种。如果熟练的话，完全可以取代 Postman 这一类的图形界面工具。</p><p><img src= "https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@v3.3.1/butterfly/img/loading9.gif" data-lazy-src="https://www.wangbase.com/blogimg/asset/201909/bg2019090501.jpg" alt="img" /></p><p>不带有任何参数时，curl 就是发出 GET 请求。</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl https://www.example.com</span><br></pre></td></tr></table></figure></blockquote><p>上面命令向<code>www.example.com</code>发出 GET 请求，服务器返回的内容会在命令行输出。</p><h2 id="-a"><a class="markdownIt-Anchor" href="#-a"></a> <strong>-A</strong></h2><p><code>-A</code>参数指定客户端的用户代理标头，即<code>User-Agent</code>。curl 的默认用户代理字符串是<code>curl/[version]</code>。</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl -A <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.100 Safari/537.36'</span> https://google.com</span><br></pre></td></tr></table></figure></blockquote><p>上面命令将<code>User-Agent</code>改成 Chrome 浏览器。</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl -A <span class="string">''</span> https://google.com</span><br></pre></td></tr></table></figure></blockquote><p>上面命令会移除<code>User-Agent</code>标头。</p><p>也可以通过<code>-H</code>参数直接指定标头，更改<code>User-Agent</code>。</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl -H <span class="string">'User-Agent: php/1.0'</span> https://google.com</span><br></pre></td></tr></table></figure></blockquote><h2 id="-b"><a class="markdownIt-Anchor" href="#-b"></a> <strong>-b</strong></h2><p><code>-b</code>参数用来向服务器发送 Cookie。</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl -b <span class="string">'foo=bar'</span> https://google.com</span><br></pre></td></tr></table></figure></blockquote><p>上面命令会生成一个标头<code>Cookie: foo=bar</code>，向服务器发送一个名为<code>foo</code>、值为<code>bar</code>的 Cookie。</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl -b <span class="string">'foo1=bar;foo2=bar2'</span> https://google.com</span><br></pre></td></tr></table></figure></blockquote><p>上面命令发送两个 Cookie。</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl -b cookies.txt https://www.google.com</span><br></pre></td></tr></table></figure></blockquote><p>上面命令读取本地文件<code>cookies.txt</code>，里面是服务器设置的 Cookie（参见<code>-c</code>参数），将其发送到服务器。</p><h2 id="-c"><a class="markdownIt-Anchor" href="#-c"></a> <strong>-c</strong></h2><p><code>-c</code>参数将服务器设置的 Cookie 写入一个文件。</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl -c cookies.txt https://www.google.com</span><br></pre></td></tr></table></figure></blockquote><p>上面命令将服务器的 HTTP 回应所设置 Cookie 写入文本文件<code>cookies.txt</code>。</p><h2 id="-d"><a class="markdownIt-Anchor" href="#-d"></a> <strong>-d</strong></h2><p><code>-d</code>参数用于发送 POST 请求的数据体。</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ curl -d<span class="string">'login=emma＆password=123'</span>-X POST https://google.com/login</span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">$ curl -d <span class="string">'login=emma'</span> -d <span class="string">'password=123'</span> -X POST  https://google.com/login</span><br></pre></td></tr></table></figure></blockquote><p>使用<code>-d</code>参数以后，HTTP 请求会自动加上标头<code>Content-Type : application/x-www-form-urlencoded</code>。并且会自动将请求转为 POST 方法，因此可以省略<code>-X POST</code>。</p><p><code>-d</code>参数可以读取本地文本文件的数据，向服务器发送。</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl -d <span class="string">'@data.txt'</span> https://google.com/login</span><br></pre></td></tr></table></figure></blockquote><p>上面命令读取<code>data.txt</code>文件的内容，作为数据体向服务器发送。</p><h2 id="data-urlencode"><a class="markdownIt-Anchor" href="#data-urlencode"></a> <strong>–data-urlencode</strong></h2><p><code>--data-urlencode</code>参数等同于<code>-d</code>，发送 POST 请求的数据体，区别在于会自动将发送的数据进行 URL 编码。</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl --data-urlencode <span class="string">'comment=hello world'</span> https://google.com/login</span><br></pre></td></tr></table></figure></blockquote><p>上面代码中，发送的数据<code>hello world</code>之间有一个空格，需要进行 URL 编码。</p><h2 id="-e"><a class="markdownIt-Anchor" href="#-e"></a> <strong>-e</strong></h2><p><code>-e</code>参数用来设置 HTTP 的标头<code>Referer</code>，表示请求的来源。</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -e <span class="string">'https://google.com?q=example'</span> https://www.example.com</span><br></pre></td></tr></table></figure></blockquote><p>上面命令将<code>Referer</code>标头设为<code>https://google.com?q=example</code>。</p><p><code>-H</code>参数可以通过直接添加标头<code>Referer</code>，达到同样效果。</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -H <span class="string">'Referer: https://google.com?q=example'</span> https://www.example.com</span><br></pre></td></tr></table></figure></blockquote><h2 id="-f"><a class="markdownIt-Anchor" href="#-f"></a> <strong>-F</strong></h2><p><code>-F</code>参数用来向服务器上传二进制文件。</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl -F <span class="string">'file=@photo.png'</span> https://google.com/profile</span><br></pre></td></tr></table></figure></blockquote><p>上面命令会给 HTTP 请求加上标头<code>Content-Type: multipart/form-data</code>，然后将文件<code>photo.png</code>作为<code>file</code>字段上传。</p><p><code>-F</code>参数可以指定 MIME 类型。</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl -F <span class="string">'file=@photo.png;type=image/png'</span> https://google.com/profile</span><br></pre></td></tr></table></figure></blockquote><p>上面命令指定 MIME 类型为<code>image/png</code>，否则 curl 会把 MIME 类型设为<code>application/octet-stream</code>。</p><p><code>-F</code>参数也可以指定文件名。</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl -F <span class="string">'file=@photo.png;filename=me.png'</span> https://google.com/profile</span><br></pre></td></tr></table></figure></blockquote><p>上面命令中，原始文件名为<code>photo.png</code>，但是服务器接收到的文件名为<code>me.png</code>。</p><h2 id="-g"><a class="markdownIt-Anchor" href="#-g"></a> <strong>-G</strong></h2><p><code>-G</code>参数用来构造 URL 的查询字符串。</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl -G -d <span class="string">'q=kitties'</span> -d <span class="string">'count=20'</span> https://google.com/search</span><br></pre></td></tr></table></figure></blockquote><p>上面命令会发出一个 GET 请求，实际请求的 URL 为<code>https://google.com/search?q=kitties&amp;count=20</code>。如果省略<code>--G</code>，会发出一个 POST 请求。</p><p>如果数据需要 URL 编码，可以结合<code>--data--urlencode</code>参数。</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl -G --data-urlencode <span class="string">'comment=hello world'</span> https://www.example.com</span><br></pre></td></tr></table></figure></blockquote><h2 id="-h"><a class="markdownIt-Anchor" href="#-h"></a> <strong>-H</strong></h2><p><code>-H</code>参数添加 HTTP 请求的标头。</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl -H <span class="string">'Accept-Language: en-US'</span> https://google.com</span><br></pre></td></tr></table></figure></blockquote><p>上面命令添加 HTTP 标头<code>Accept-Language: en-US</code>。</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl -H <span class="string">'Accept-Language: en-US'</span> -H <span class="string">'Secret-Message: xyzzy'</span> https://google.com</span><br></pre></td></tr></table></figure></blockquote><p>上面命令添加两个 HTTP 标头。</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl -d <span class="string">'&#123;"login": "emma", "pass": "123"&#125;'</span> -H <span class="string">'Content-Type: application/json'</span> https://google.com/login</span><br></pre></td></tr></table></figure></blockquote><p>上面命令添加 HTTP 请求的标头是<code>Content-Type: application/json</code>，然后用<code>-d</code>参数发送 JSON 数据。</p><h2 id="-i"><a class="markdownIt-Anchor" href="#-i"></a> <strong>-i</strong></h2><p><code>-i</code>参数打印出服务器回应的 HTTP 标头。</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl -i https://www.example.com</span><br></pre></td></tr></table></figure></blockquote><p>上面命令收到服务器回应后，先输出服务器回应的标头，然后空一行，再输出网页的源码。</p><h2 id="-i-2"><a class="markdownIt-Anchor" href="#-i-2"></a> <strong>-I</strong></h2><p><code>-I</code>参数向服务器发出 HEAD 请求，然会将服务器返回的 HTTP 标头打印出来。</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl -I https://www.example.com</span><br></pre></td></tr></table></figure></blockquote><p>上面命令输出服务器对 HEAD 请求的回应。</p><p><code>--head</code>参数等同于<code>-I</code>。</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl --head https://www.example.com</span><br></pre></td></tr></table></figure></blockquote><h2 id="-k"><a class="markdownIt-Anchor" href="#-k"></a> <strong>-k</strong></h2><p><code>-k</code>参数指定跳过 SSL 检测。</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl -k https://www.example.com</span><br></pre></td></tr></table></figure></blockquote><p>上面命令不会检查服务器的 SSL 证书是否正确。</p><h2 id="-l"><a class="markdownIt-Anchor" href="#-l"></a> <strong>-L</strong></h2><p><code>-L</code>参数会让 HTTP 请求跟随服务器的重定向。curl 默认不跟随重定向。</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl -L -d <span class="string">'tweet=hi'</span> https://api.twitter.com/tweet</span><br></pre></td></tr></table></figure></blockquote><h2 id="limit-rate"><a class="markdownIt-Anchor" href="#limit-rate"></a> <strong>–limit-rate</strong></h2><p><code>--limit-rate</code>用来限制 HTTP 请求和回应的带宽，模拟慢网速的环境。</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl --<span class="built_in">limit</span>-rate 200k https://google.com</span><br></pre></td></tr></table></figure></blockquote><p>上面命令将带宽限制在每秒 200K 字节。</p><h2 id="-o"><a class="markdownIt-Anchor" href="#-o"></a> <strong>-o</strong></h2><p><code>-o</code>参数将服务器的回应保存成文件，等同于<code>wget</code>命令。</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl -o example.html https://www.example.com</span><br></pre></td></tr></table></figure></blockquote><p>上面命令将<code>www.example.com</code>保存成<code>example.html</code>。</p><h2 id="-o-2"><a class="markdownIt-Anchor" href="#-o-2"></a> <strong>-O</strong></h2><p><code>-O</code>参数将服务器回应保存成文件，并将 URL 的最后部分当作文件名。</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl -O https://www.example.com/foo/bar.html</span><br></pre></td></tr></table></figure></blockquote><p>上面命令将服务器回应保存成文件，文件名为<code>bar.html</code>。</p><h2 id="-s"><a class="markdownIt-Anchor" href="#-s"></a> <strong>-s</strong></h2><p><code>-s</code>参数将不输出错误和进度信息。</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl -s https://www.example.com</span><br></pre></td></tr></table></figure></blockquote><p>上面命令一旦发生错误，不会显示错误信息。不发生错误的话，会正常显示运行结果。</p><p>如果想让 curl 不产生任何输出，可以使用下面的命令。</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl -s -o /dev/null https://google.com</span><br></pre></td></tr></table></figure></blockquote><h2 id="-s-2"><a class="markdownIt-Anchor" href="#-s-2"></a> <strong>-S</strong></h2><p><code>-S</code>参数指定只输出错误信息，通常与<code>-s</code>一起使用。</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl -s -o /dev/null https://google.com</span><br></pre></td></tr></table></figure></blockquote><p>上面命令没有任何输出，除非发生错误。</p><h2 id="-u"><a class="markdownIt-Anchor" href="#-u"></a> <strong>-u</strong></h2><p><code>-u</code>参数用来设置服务器认证的用户名和密码。</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl -u <span class="string">'bob:12345'</span> https://google.com/login</span><br></pre></td></tr></table></figure></blockquote><p>上面命令设置用户名为<code>bob</code>，密码为<code>12345</code>，然后将其转为 HTTP 标头<code>Authorization: Basic Ym9iOjEyMzQ1</code>。</p><p>curl 能够识别 URL 里面的用户名和密码。</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl https://bob:12345@google.com/login</span><br></pre></td></tr></table></figure></blockquote><p>上面命令能够识别 URL 里面的用户名和密码，将其转为上个例子里面的 HTTP 标头。</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl -u <span class="string">'bob'</span> https://google.com/login</span><br></pre></td></tr></table></figure></blockquote><p>上面命令只设置了用户名，执行后，curl 会提示用户输入密码。</p><h2 id="-v"><a class="markdownIt-Anchor" href="#-v"></a> <strong>-v</strong></h2><p><code>-v</code>参数输出通信的整个过程，用于调试。</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl -v https://www.example.com</span><br></pre></td></tr></table></figure></blockquote><p><code>--trace</code>参数也可以用于调试，还会输出原始的二进制数据。</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl --trace - https://www.example.com</span><br></pre></td></tr></table></figure></blockquote><h2 id="-x"><a class="markdownIt-Anchor" href="#-x"></a> <strong>-x</strong></h2><p><code>-x</code>参数指定 HTTP 请求的代理。</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl -x socks5://james:cats@myproxy.com:8080 https://www.example.com</span><br></pre></td></tr></table></figure></blockquote><p>上面命令指定 HTTP 请求通过<code>myproxy.com:8080</code>的 socks5 代理发出。</p><p>如果没有指定代理协议，默认为 HTTP。</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl -x james:cats@myproxy.com:8080 https://www.example.com</span><br></pre></td></tr></table></figure></blockquote><p>上面命令中，请求的代理使用 HTTP 协议。</p><h2 id="-x-2"><a class="markdownIt-Anchor" href="#-x-2"></a> <strong>-X</strong></h2><p><code>-X</code>参数指定 HTTP 请求的方法。</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl -X POST https://www.example.com</span><br></pre></td></tr></table></figure></blockquote><p>上面命令对<code>https://www.example.com</code>发出 POST 请求。</p>]]></content>
    
    <summary type="html">
    
      curl命令大全
    
    </summary>
    
    
      <category term="HTTP" scheme="https://extheor.github.io/categories/HTTP/"/>
    
    
      <category term="curl" scheme="https://extheor.github.io/tags/curl/"/>
    
  </entry>
  
  <entry>
    <title>curl网站开发指南</title>
    <link href="https://extheor.github.io/posts/8bf9abeb/index.html"/>
    <id>https://extheor.github.io/posts/8bf9abeb/index.html</id>
    <published>2020-08-19T00:18:23.000Z</published>
    <updated>2020-08-19T00:21:43.492Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@v0.1/Hexo/assets/css/APlayer.min.css"><script src="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@v0.1/Hexo/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@v0.1/Hexo/assets/js/Meting.min.js"></script><h1 id="curl网站开发指南"><a class="markdownIt-Anchor" href="#curl网站开发指南"></a> curl网站开发指南</h1><p><strong>一、查看网页源码</strong></p><p>直接在curl命令后加上网址，就可以看到网页源码。我们以网址www.sina.com为例（选择该网址，主要因为它的网页代码较短）：</p><blockquote><p>$ curl <a href="http://www.sina.com" target="_blank" rel="noopener">www.sina.com</a></p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">HTML</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//IETF//DTD HTML 2.0//EN"</span>&gt;</span>　　<span class="tag">&lt;<span class="name">html</span>&gt;</span><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>301 Moved Permanently<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Moved Permanently<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>The document has moved <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.sina.com.cn/"</span>&gt;</span>here<span class="tag">&lt;/<span class="name">a</span>&gt;</span>.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如果要把这个网页保存下来，可以使用<code>-o</code>参数，这就相当于使用wget命令了。</p><blockquote><p>$ curl -o [文件名] <a href="http://www.sina.com" target="_blank" rel="noopener">www.sina.com</a></p></blockquote><p><strong>二、自动跳转</strong></p><p>有的网址是自动跳转的。使用<code>-L</code>参数，curl就会跳转到新的网址。</p><blockquote><p>$ curl -L <a href="http://www.sina.com" target="_blank" rel="noopener">www.sina.com</a></p></blockquote><p>键入上面的命令，<a href="http://xn--www-c88dn6rpsqu0sno6bq2flw7arnd.sina.com.cn" target="_blank" rel="noopener">结果就自动跳转为www.sina.com.cn</a>。</p><p><strong>三、显示头信息</strong></p><p><code>-i</code>参数可以显示http response的头信息，连同网页代码一起。</p><blockquote><p>$ curl -i <a href="http://www.sina.com" target="_blank" rel="noopener">www.sina.com</a></p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.0 301 Moved Permanently</span><br><span class="line">Date: Sat, 03 Sep 2011 23:44:10 GMT</span><br><span class="line">Server: Apache/2.0.54 (Unix)</span><br><span class="line">Location: http://www.sina.com.cn/</span><br><span class="line">Cache-Control: max-age=3600</span><br><span class="line">Expires: Sun, 04 Sep 2011 00:44:10 GMT</span><br><span class="line">Vary: Accept-Encoding</span><br><span class="line">Content-Length: 231</span><br><span class="line">Content-Type: text/html; charset=iso-8859-1</span><br><span class="line">Age: 3239</span><br><span class="line">X-Cache: HIT from sh201-9.sina.com.cn</span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">HTML</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//IETF//DTD HTML 2.0//EN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>301 Moved Permanently<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Moved Permanently<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>The document has moved <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.sina.com.cn/"</span>&gt;</span>here<span class="tag">&lt;/<span class="name">a</span>&gt;</span>.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>-I</code>参数则是只显示http response的头信息。</p><p><strong>四、显示通信过程</strong></p><p><code>-v</code>参数可以显示一次http通信的整个过程，包括端口连接和http request头信息。</p><blockquote><p>$ curl -v <a href="http://www.sina.com" target="_blank" rel="noopener">www.sina.com</a></p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">* About to connect() to www.sina.com port 80 (#0)</span><br><span class="line">* Trying 61.172.201.195... connected</span><br><span class="line">* Connected to www.sina.com (61.172.201.195) port 80 (#0)</span><br><span class="line">&gt; GET / HTTP/1.1</span><br><span class="line">&gt; User-Agent: curl/7.21.3 (i686-pc-linux-gnu) libcurl/7.21.3 OpenSSL/0.9.8o zlib/1.2.3.4 libidn/1.18</span><br><span class="line">&gt; Host: www.sina.com</span><br><span class="line">&gt; Accept: */*</span><br><span class="line">&gt;</span><br><span class="line">* HTTP 1.0, assume close after body　　</span><br><span class="line"><span class="tag">&lt; <span class="attr">HTTP</span>/<span class="attr">1.0</span> <span class="attr">301</span> <span class="attr">Moved</span> <span class="attr">Permanently</span></span></span><br><span class="line">&lt; Date: Sun, 04 Sep 2011 00:42:39 GMT</span><br><span class="line"><span class="tag">&lt; <span class="attr">Server:</span> <span class="attr">Apache</span>/<span class="attr">2.0.54</span> (<span class="attr">Unix</span>)</span></span><br><span class="line">&lt; Location: http://www.sina.com.cn/</span><br><span class="line"><span class="tag">&lt; <span class="attr">Cache-Control:</span> <span class="attr">max-age</span>=<span class="string">3600</span></span></span><br><span class="line">&lt; Expires: Sun, 04 Sep 2011 01:42:39 GMT</span><br><span class="line"><span class="tag">&lt; <span class="attr">Vary:</span> <span class="attr">Accept-Encoding</span></span></span><br><span class="line">&lt; Content-Length: 231</span><br><span class="line"><span class="tag">&lt; <span class="attr">Content-Type:</span> <span class="attr">text</span>/<span class="attr">html</span>; <span class="attr">charset</span>=<span class="string">iso-8859-1</span></span></span><br><span class="line">&lt; X-Cache: MISS from sh201-19.sina.com.cn</span><br><span class="line"><span class="tag">&lt; <span class="attr">Connection:</span> <span class="attr">close</span></span></span><br><span class="line">&lt;</span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">HTML</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//IETF//DTD HTML 2.0//EN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>301 Moved Permanently<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Moved Permanently<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>The document has moved <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.sina.com.cn/"</span>&gt;</span>here<span class="tag">&lt;/<span class="name">a</span>&gt;</span>.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">hml</span>&gt;</span></span><br><span class="line">* Closing connection #0</span><br></pre></td></tr></table></figure><p>如果你觉得上面的信息还不够，那么下面的命令可以查看更详细的通信过程。</p><blockquote><p>$ curl --trace output.txt <a href="http://www.sina.com" target="_blank" rel="noopener">www.sina.com</a></p></blockquote><p>或者</p><blockquote><p>$ curl --trace-ascii output.txt <a href="http://www.sina.com" target="_blank" rel="noopener">www.sina.com</a></p></blockquote><p>运行后，请打开output.txt文件查看。</p><p><strong>五、发送表单信息</strong></p><p>发送表单信息有GET和POST两种方法。GET方法相对简单，只要把数据附在网址后面就行。</p><blockquote><p>$ curl <a href="http://example.com/form.cgi?data=xxx" target="_blank" rel="noopener">example.com/form.cgi?data=xxx</a></p></blockquote><p>POST方法必须把数据和网址分开，curl就要用到–data参数。</p><blockquote><p>$ curl -X POST --data “data=xxx” <a href="http://example.com/form.cgi" target="_blank" rel="noopener">example.com/form.cgi</a></p></blockquote><p>如果你的数据没有经过表单编码，还可以让curl为你编码，参数是<code>--data-urlencode</code>。</p><blockquote><p>$ curl -X POST–data-urlencode “date=April 1” <a href="http://example.com/form.cgi" target="_blank" rel="noopener">example.com/form.cgi</a></p></blockquote><p><strong>六、HTTP动词</strong></p><p>curl默认的HTTP动词是GET，使用<code>-X</code>参数可以支持其他动词。</p><blockquote><p>$ curl -X POST <a href="http://www.example.com" target="_blank" rel="noopener">www.example.com</a></p></blockquote><blockquote><p>$ curl -X DELETE <a href="http://www.example.com" target="_blank" rel="noopener">www.example.com</a></p></blockquote><p><strong>七、文件上传</strong></p><p>假定文件上传的表单是下面这样：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">"POST"</span> <span class="attr">enctype</span>=<span class="string">'multipart/form-data'</span> <span class="attr">action</span>=<span class="string">"upload.cgi"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">file</span> <span class="attr">name</span>=<span class="string">upload</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">submit</span> <span class="attr">name</span>=<span class="string">press</span> <span class="attr">value</span>=<span class="string">"OK"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p>你可以用curl这样上传文件：</p><blockquote><p>$ curl --form upload=@localfilename --form press=OK [URL]</p></blockquote><p><strong>八、Referer字段</strong></p><p>有时你需要在http request头信息中，提供一个referer字段，表示你是从哪里跳转过来的。</p><blockquote><p>$ curl --referer <a href="http://www.example.com" target="_blank" rel="noopener">http://www.example.com</a> <a href="http://www.example.com" target="_blank" rel="noopener">http://www.example.com</a></p></blockquote><p><strong>九、User Agent字段</strong></p><p>这个字段是用来表示客户端的设备信息。服务器有时会根据这个字段，针对不同设备，返回不同格式的网页，比如手机版和桌面版。</p><p>iPhone4的User Agent是</p><blockquote><p>Mozilla/5.0 (iPhone; U; CPU iPhone OS 4_0 like Mac OS X; en-us) AppleWebKit/532.9 (KHTML, like Gecko) Version/4.0.5 Mobile/8A293 Safari/6531.22.7</p></blockquote><p>curl可以这样模拟：</p><blockquote><p>$ curl --user-agent “[User Agent]” [URL]</p></blockquote><p><strong>十、cookie</strong></p><p>使用<code>--cookie</code>参数，可以让curl发送cookie。</p><blockquote><p>$ curl --cookie “name=xxx” <a href="http://www.example.com" target="_blank" rel="noopener">www.example.com</a></p></blockquote><p>至于具体的cookie的值，可以从http response头信息的<code>Set-Cookie</code>字段中得到。</p><p><code>-c cookie-file</code>可以保存服务器返回的cookie到文件，<code>-b cookie-file</code>可以使用这个文件作为cookie信息，进行后续的请求。</p><blockquote><p>$ curl -c cookies <a href="http://example.com" target="_blank" rel="noopener">http://example.com</a><br />　　$ curl -b cookies <a href="http://example.com" target="_blank" rel="noopener">http://example.com</a></p></blockquote><p><strong>十一、增加头信息</strong></p><p>有时需要在http request之中，自行增加一个头信息。<code>--header</code>参数就可以起到这个作用。</p><blockquote><p>$ curl --header “Content-Type:application/json” <a href="http://example.com" target="_blank" rel="noopener">http://example.com</a></p></blockquote><p><strong>十二、HTTP认证</strong></p><p>有些网域需要HTTP认证，这时curl需要用到<code>--user</code>参数。</p><blockquote><p>$ curl --user name:password <a href="http://example.com" target="_blank" rel="noopener">example.com</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      curl网站开发指南
    
    </summary>
    
    
      <category term="HTTP" scheme="https://extheor.github.io/categories/HTTP/"/>
    
    
      <category term="curl" scheme="https://extheor.github.io/tags/curl/"/>
    
  </entry>
  
  <entry>
    <title>Nodejs项目实战开发-博客系统</title>
    <link href="https://extheor.github.io/posts/a7dc32c9/index.html"/>
    <id>https://extheor.github.io/posts/a7dc32c9/index.html</id>
    <published>2020-08-09T17:20:35.000Z</published>
    <updated>2020-08-19T00:02:20.791Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@v0.1/Hexo/assets/css/APlayer.min.css"><script src="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@v0.1/Hexo/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@v0.1/Hexo/assets/js/Meting.min.js"></script><h1 id="nodejs项目实战开发-博客系统已完结"><a class="markdownIt-Anchor" href="#nodejs项目实战开发-博客系统已完结"></a> Nodejs项目实战开发-博客系统（已完结）</h1><blockquote><p>个人博客系统</p></blockquote><h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言：</h2><h3 id="开发技术"><a class="markdownIt-Anchor" href="#开发技术"></a> 开发技术</h3><table><thead><tr><th>技术</th><th>版本</th></tr></thead><tbody><tr><td>Node</td><td>^14.3.0</td></tr><tr><td>ejs</td><td>^3.1.3</td></tr><tr><td>express</td><td>^4.17.1</td></tr><tr><td>cookie-session</td><td>^1.4.0</td></tr><tr><td>mysql</td><td>^2.18.1</td></tr></tbody></table><h3 id="开发工具"><a class="markdownIt-Anchor" href="#开发工具"></a> 开发工具</h3><table><thead><tr><th>技术</th><th>版本</th></tr></thead><tbody><tr><td>VSCode</td><td>^1.47.3.0</td></tr><tr><td>MySql</td><td>^8.0.12</td></tr><tr><td>PhpStudy</td><td>^8.1.0.7</td></tr></tbody></table><h3 id="第一阶段-博客前台"><a class="markdownIt-Anchor" href="#第一阶段-博客前台"></a> 第一阶段 博客前台</h3><h3 id="第二阶段-博客后台"><a class="markdownIt-Anchor" href="#第二阶段-博客后台"></a> 第二阶段 博客后台</h3><h2 id="博客前台-项目环境搭建"><a class="markdownIt-Anchor" href="#博客前台-项目环境搭建"></a> 博客前台 项目环境搭建</h2><h3 id="首先初始化项目"><a class="markdownIt-Anchor" href="#首先初始化项目"></a> 首先初始化项目</h3><p>在终端输入命令</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm init</span><br></pre></td></tr></table></figure><p>会生成一个 <code>package.json</code> 文件</p><h3 id="安装一系列第三方npm模块"><a class="markdownIt-Anchor" href="#安装一系列第三方npm模块"></a> 安装一系列第三方npm模块</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm i express</span><br><span class="line">npm i ejs</span><br><span class="line">npm i mysql</span><br></pre></td></tr></table></figure><p>会生成一个 <code>package-lock.json</code> 文件</p><h3 id="创建一系列文件"><a class="markdownIt-Anchor" href="#创建一系列文件"></a> 创建一系列文件</h3><h4 id="新建indexjs文件"><a class="markdownIt-Anchor" href="#新建indexjs文件"></a> 新建index.js文件</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 入口函数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">"express"</span>);</span><br><span class="line"><span class="comment">// 创建主应用</span></span><br><span class="line"><span class="keyword">const</span> app = express();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 模板引擎的设置</span></span><br><span class="line">app.set(<span class="string">"view engine"</span>, <span class="string">"html"</span>);</span><br><span class="line">app.set(<span class="string">"views"</span>, <span class="string">`<span class="subst">$&#123;__dirname&#125;</span>/views`</span>);</span><br><span class="line">app.engine(<span class="string">"html"</span>, <span class="built_in">require</span>(<span class="string">"ejs"</span>).renderFile); <span class="comment">// 用ejs模板渲染html</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 静态资源配置</span></span><br><span class="line">app.use(express.static(<span class="string">"static"</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 监听服务器</span></span><br><span class="line">app.listen(<span class="number">3000</span>);</span><br></pre></td></tr></table></figure><p>修改 <code>package.json</code> 文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"scripts"</span>: &#123;</span><br><span class="line">  <span class="string">"test"</span>: <span class="string">"echo \"Error: no test specified\" &amp;&amp; exit 1"</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>自定义启动命令</p><p>把上面的代码改成以下代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"scripts"</span>: &#123;</span><br><span class="line">  <span class="string">"start"</span>: <span class="string">"node index.js"</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h4 id="新建static目录"><a class="markdownIt-Anchor" href="#新建static目录"></a> 新建static目录</h4><blockquote><p>静态资源目录</p></blockquote><p>里面存放 css js img 等等的静态资源</p><h4 id="新建views目录"><a class="markdownIt-Anchor" href="#新建views目录"></a> 新建views目录</h4><blockquote><p>模板目录</p></blockquote><p>里面存放模板文件</p><h4 id="新建router目录"><a class="markdownIt-Anchor" href="#新建router目录"></a> 新建router目录</h4><blockquote><p>子应用目录</p></blockquote><p>将我们的程序进行模块化管理，每一个模块都将视为一个子应用</p><h4 id="新建middleware目录"><a class="markdownIt-Anchor" href="#新建middleware目录"></a> 新建middleware目录</h4><blockquote><p>中间件目录</p></blockquote><p>与路由器配套的一些操作方法，在路由加载页面之前获取所需要的一些数据</p><h4 id="新建model目录"><a class="markdownIt-Anchor" href="#新建model目录"></a> 新建model目录</h4><blockquote><p>数据模型目录</p></blockquote><p>操作数据库的一些文件</p><h4 id="这些文件之间的一些关系"><a class="markdownIt-Anchor" href="#这些文件之间的一些关系"></a> 这些文件之间的一些关系</h4><p>从数据库中进行增删改查，把得到的一些数据返回给中间件，由中间件返回给路由，由路由进行页面的渲染和加载，最后返回给客户端</p><h2 id="博客前台-模板文件导入"><a class="markdownIt-Anchor" href="#博客前台-模板文件导入"></a> 博客前台 模板文件导入</h2><p>在views目录和static目录下导入文件</p><p>导入完成之后可以把重复的代码提取出来，进行简化处理</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%-</span> <span class="attr">include</span>('<span class="attr">header.html</span>') <span class="attr">-</span>%&gt;</span></span><br><span class="line">html代码不重复的部分</span><br><span class="line"><span class="tag">&lt;<span class="name">%-</span> <span class="attr">include</span>('<span class="attr">footer.html</span>') <span class="attr">-</span>%&gt;</span></span><br></pre></td></tr></table></figure><h3 id="在router目录下新建indexjs文件"><a class="markdownIt-Anchor" href="#在router目录下新建indexjs文件"></a> 在router目录下新建index.js文件</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 首页子应用（首页路由）</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">"express"</span>);</span><br><span class="line"><span class="comment">// 首页子应用</span></span><br><span class="line"><span class="keyword">const</span> indexApp = express();</span><br><span class="line"></span><br><span class="line">indexApp.get(<span class="string">"/"</span>, (req, res) =&gt; &#123;</span><br><span class="line">  res.render(<span class="string">"index"</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 把这个子应用导出去</span></span><br><span class="line"><span class="built_in">module</span>.exports = indexApp;</span><br></pre></td></tr></table></figure><p>然后在myblog下的 <code>index.js</code> 中调用首页子应用</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 调用首页子应用</span></span><br><span class="line">app.use(<span class="regexp">/\/(index)?/</span>, <span class="built_in">require</span>(<span class="string">"./router/index"</span>));</span><br></pre></td></tr></table></figure><p>启动服务</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node index.js</span><br></pre></td></tr></table></figure><p>浏览器输入127.0.0.1:3000 出现以下页面说明搭建成功</p><p><img src= "https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@v3.3.1/butterfly/img/loading9.gif" data-lazy-src="https://s1.ax1x.com/2020/08/05/a6aqIg.png" alt="a6aqIg.png" /></p><h2 id="博客前台-封装数据库操作"><a class="markdownIt-Anchor" href="#博客前台-封装数据库操作"></a> 博客前台 封装数据库操作</h2><p>在model目录下新建 <code>model.js</code> 文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> mysql = <span class="built_in">require</span>(<span class="string">"mysql"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 数据模型的基类</span></span><br><span class="line"><span class="comment"> * 封装了数据库操作</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="built_in">module</span>.exports = <span class="class"><span class="keyword">class</span> <span class="title">Model</span> </span>&#123;</span><br><span class="line">  <span class="comment">// 连接对象</span></span><br><span class="line">  <span class="keyword">static</span> conn = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 数据库连接方法</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">static</span> connection() &#123;</span><br><span class="line">    Model.conn = mysql.createConnection(&#123;</span><br><span class="line">      host: <span class="string">"127.0.0.1"</span>,</span><br><span class="line">      user: <span class="string">"root"</span>,</span><br><span class="line">      password: <span class="string">"lijiazhao123"</span>,</span><br><span class="line">      database: <span class="string">"blog"</span>,</span><br><span class="line">    &#125;);</span><br><span class="line">    Model.conn.connect(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (err) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">`数据库连接失败：<span class="subst">$&#123;err.message&#125;</span>`</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 关闭数据库连接</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">static</span> end() &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="literal">null</span> != Model.conn) &#123;</span><br><span class="line">      Model.conn.end();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 通用查询方法</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param <span class="type">&#123;string&#125;</span> </span>sql 要执行的SQL语句</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param <span class="type">&#123;Array&#125;</span> </span>params 给SQL语句的占位符进行赋值的参数数组</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">static</span> query(sql, params = []) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">this</span>.connection();</span><br><span class="line"></span><br><span class="line">      Model.conn.query(sql, params, (err, results) =&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span> (err) &#123;</span><br><span class="line">          reject(err);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          resolve(results);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">this</span>.end();</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>在model目录下新建 <code>article.js</code> 文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 文章数据模型</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">module.exports = class Article extends require("./model") &#123;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param <span class="type">&#123;integer&#125;</span> </span>num 条目数</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">static</span> getHot(num) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">let</span> sql =</span><br><span class="line">        <span class="string">"SELECT id,title,content,`time` FROM article WHERE hot = 1 LIMIT ?"</span>;</span><br><span class="line">      <span class="keyword">this</span>.query(sql, num)</span><br><span class="line">        .then(<span class="function">(<span class="params">results</span>) =&gt;</span> &#123;</span><br><span class="line">          resolve(results);</span><br><span class="line">        &#125;)</span><br><span class="line">        .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="built_in">console</span>.log(<span class="string">`获取热门文章失败：<span class="subst">$&#123;err.message&#125;</span>`</span>);</span><br><span class="line">          reject(err);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>在middleware目录下新建 <code>article.js</code> 文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> Article = <span class="built_in">require</span>(<span class="string">"../model/article"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 文章中间件</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 获取热门文章</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  getHot: <span class="function">(<span class="params">req, res, next</span>) =&gt;</span> &#123;</span><br><span class="line">    Article.getHot(<span class="number">3</span>)</span><br><span class="line">      .then(<span class="function">(<span class="params">results</span>) =&gt;</span> &#123;</span><br><span class="line">        req.hots = results;</span><br><span class="line">        next();</span><br><span class="line">      &#125;)</span><br><span class="line">      .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">        next(err);</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>再由中间件返回给路由</p><p>将router目录下的 <code>index.js</code> 进行修改</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 首页子应用（首页路由）</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">"express"</span>);</span><br><span class="line"><span class="keyword">const</span> article = <span class="built_in">require</span>(<span class="string">"../middleware/article"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 首页子应用</span></span><br><span class="line"><span class="keyword">const</span> indexApp = express();</span><br><span class="line"></span><br><span class="line">indexApp.get(<span class="string">"/"</span>, [article.getHot], (req, res) =&gt; &#123;</span><br><span class="line">  res.render(<span class="string">"index"</span>, &#123; <span class="attr">hots</span>: req.hots &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 把这个子应用导出去</span></span><br><span class="line"><span class="built_in">module</span>.exports = indexApp;</span><br></pre></td></tr></table></figure><p>启动服务显示以下页面</p><p><img src= "https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@v3.3.1/butterfly/img/loading9.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/extheor/images/myblog/1.png" alt="acXJzD.png" /></p><p>发现这个时间的格式有点别扭，修改为本地时间</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%=</span> <span class="attr">hot.time.toLocaleString</span>() %&gt;</span></span><br></pre></td></tr></table></figure><p>发现这个内容有点别扭</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%= hot.content.replace(/&lt;[^&gt;]+&gt;/g,"").substring(0,100) %&gt;</span><br></pre></td></tr></table></figure><p>修改后如下图：</p><p><img src= "https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@v3.3.1/butterfly/img/loading9.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/extheor/images/myblog/2.png" alt="agNIp9.png" /></p><h2 id="博客前台-首页最新博文"><a class="markdownIt-Anchor" href="#博客前台-首页最新博文"></a> 博客前台 首页最新博文</h2><p>数据库查询</p><p>在model目录下的 <code>article.js</code> 文件中新增以下方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 获取文章列表</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">  <span class="keyword">static</span> getList() &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">let</span> sql =</span><br><span class="line">        <span class="string">"SELECT id,title,content,`time` FROM article ORDER BY time DESC"</span>;</span><br><span class="line">      <span class="keyword">this</span>.query(sql)</span><br><span class="line">        .then(<span class="function">(<span class="params">results</span>) =&gt;</span> &#123;</span><br><span class="line">          resolve(results);</span><br><span class="line">        &#125;)</span><br><span class="line">        .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="built_in">console</span>.log(<span class="string">`获取文章列表失败：<span class="subst">$&#123;err.message&#125;</span>`</span>);</span><br><span class="line">          reject(err);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>把查询到的数据交给中间件</p><p>在middleware目录下的 <code>article.js</code> 文件中新增以下方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 获取最新文章</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">  getList: <span class="function">(<span class="params">req, res, next</span>) =&gt;</span> &#123;</span><br><span class="line">    Article.getList()</span><br><span class="line">      .then(<span class="function">(<span class="params">results</span>) =&gt;</span> &#123;</span><br><span class="line">        req.articles = results;</span><br><span class="line">        next();</span><br><span class="line">      &#125;)</span><br><span class="line">      .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">        next(err);</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><p>在由中间件交给路由渲染到页面中</p><p>在router目录下的 <code>index.js</code> 文件中修改以下代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">indexApp.get(<span class="string">"/"</span>, [article.getHot, article.getList], (req, res) =&gt; &#123;</span><br><span class="line">  <span class="keyword">let</span> &#123; hots, articles &#125; = req;</span><br><span class="line">  res.render(<span class="string">"index"</span>, &#123; hots, articles &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>开启服务，出现以下页面</p><p><img src= "https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@v3.3.1/butterfly/img/loading9.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/extheor/images/myblog/3.png" alt="a2sUVs.png" /></p><h2 id="博客前台-导航条"><a class="markdownIt-Anchor" href="#博客前台-导航条"></a> 博客前台 导航条</h2><p>数据库查询</p><p>在model目录下新建 <code>category.js</code> 文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 文章类目数据模型</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">module.exports = class Category extends require("./model") &#123;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 获取文章类目列表</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">static</span> getList() &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">let</span> sql = <span class="string">"SELECT id,`name` FROM category ORDER BY `index` DESC"</span>;</span><br><span class="line">      <span class="keyword">this</span>.query(sql)</span><br><span class="line">        .then(<span class="function">(<span class="params">results</span>) =&gt;</span> &#123;</span><br><span class="line">          resolve(results);</span><br><span class="line">        &#125;)</span><br><span class="line">        .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="built_in">console</span>.log(<span class="string">`获取文章类目列表失败：<span class="subst">$&#123;err.message&#125;</span>`</span>);</span><br><span class="line">          reject(err);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>把查询到的数据交给中间件</p><p>在middlewar目录下新建 <code>category.js</code> 文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> Category = <span class="built_in">require</span>(<span class="string">"../model/category"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 文章类目中间件</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 获取文章类目列表</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  getList: <span class="function">(<span class="params">req, res, next</span>) =&gt;</span> &#123;</span><br><span class="line">    Category.getList()</span><br><span class="line">      .then(<span class="function">(<span class="params">results</span>) =&gt;</span> &#123;</span><br><span class="line">        req.categories = results;</span><br><span class="line">        next();</span><br><span class="line">      &#125;)</span><br><span class="line">      .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">        next(err);</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>在由中间件交给路由渲染到页面中</p><p>修改router目录下的 <code>index.js</code> 文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 首页子应用（首页路由）</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">"express"</span>);</span><br><span class="line"><span class="keyword">const</span> article = <span class="built_in">require</span>(<span class="string">"../middleware/article"</span>);</span><br><span class="line"><span class="keyword">const</span> category = <span class="built_in">require</span>(<span class="string">"../middleware/category"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 首页子应用</span></span><br><span class="line"><span class="keyword">const</span> indexApp = express();</span><br><span class="line"></span><br><span class="line">indexApp.get(</span><br><span class="line">  <span class="string">"/"</span>,</span><br><span class="line">  [article.getHot, article.getList, category.getList],</span><br><span class="line">  (req, res) =&gt; &#123;</span><br><span class="line">    <span class="keyword">let</span> &#123; hots, articles, categories &#125; = req;</span><br><span class="line">    res.render(<span class="string">"index"</span>, &#123; hots, articles, categories &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 把这个子应用导出去</span></span><br><span class="line"><span class="built_in">module</span>.exports = indexApp;</span><br></pre></td></tr></table></figure><p>修改views下的 <code>header.html</code> 文件</p><p>用ejs模板来显示路由渲染过来的数据</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%</span> <span class="attr">categories.forEach</span>(<span class="attr">category</span> =&gt;</span> &#123; %&gt;</span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"nav-item"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"nav-link"</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">category.name</span> %&gt;</span> <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span> &#125;) %&gt;</span></span><br></pre></td></tr></table></figure><p>启动服务。显示页面如下</p><p><img src= "https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@v3.3.1/butterfly/img/loading9.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/extheor/images/myblog/4.png" alt="a2XRwd.png" /></p><h2 id="博客前台-文章列表"><a class="markdownIt-Anchor" href="#博客前台-文章列表"></a> 博客前台 文章列表</h2><p>在model目录下的 <code>article.js</code> 文件中新增方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 获取指定类目下的文章列表</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param <span class="type">&#123;integer&#125;</span> </span>id 类目编号</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">static</span> getListByCategoryId(id) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">let</span> sql =</span><br><span class="line">        <span class="string">"SELECT id,title,content,`time` FROM article WHERE category_id = ? ORDER BY time DESC"</span>;</span><br><span class="line">      <span class="keyword">this</span>.query(sql, id)</span><br><span class="line">        .then(<span class="function">(<span class="params">results</span>) =&gt;</span> &#123;</span><br><span class="line">          resolve(results);</span><br><span class="line">        &#125;)</span><br><span class="line">        .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="built_in">console</span>.log(<span class="string">`获取指定类目下的文章列表失败：<span class="subst">$&#123;err.message&#125;</span>`</span>);</span><br><span class="line">          reject(err);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>在middleware目录下的 <code>article.js</code> 文件新增属性</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 获取指定类目下的文章</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  getListByCategoryId: <span class="function">(<span class="params">req, res, next</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * http://127.0.0.1:3000/article/list/1</span></span><br><span class="line"><span class="comment">     * 获取路由下的id - 此时id为1</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">let</span> id = req.params.id;</span><br><span class="line">    Article.getListByCategoryId(id)</span><br><span class="line">      .then(<span class="function">(<span class="params">results</span>) =&gt;</span> &#123;</span><br><span class="line">        req.articles = results;</span><br><span class="line">        next();</span><br><span class="line">      &#125;)</span><br><span class="line">      .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">        next(err);</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><p>在router目录下新建 <code>article.js</code> 文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 文章子应用</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">"express"</span>);</span><br><span class="line"><span class="keyword">const</span> article = <span class="built_in">require</span>(<span class="string">"../middleware/article"</span>);</span><br><span class="line"><span class="keyword">const</span> category = <span class="built_in">require</span>(<span class="string">"../middleware/category"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 文章子应用</span></span><br><span class="line"><span class="keyword">const</span> articleApp = express();</span><br><span class="line"></span><br><span class="line">articleApp.get(</span><br><span class="line">  <span class="string">"/list/:id"</span>,</span><br><span class="line">  [article.getListByCategoryId, category.getList],</span><br><span class="line">  (req, res) =&gt; &#123;</span><br><span class="line">    <span class="keyword">let</span> &#123; articles, categories &#125; = req;</span><br><span class="line">    res.render(<span class="string">"list"</span>, &#123; articles, categories &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = articleApp;</span><br></pre></td></tr></table></figure><p>修改views目录下的 <code>list.html</code> 文件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%</span> <span class="attr">articles.forEach</span>(<span class="attr">article</span> =&gt;</span> &#123; %&gt;</span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col my-3"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"card h-100"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"holder.js/100px150"</span> <span class="attr">class</span>=<span class="string">"card-img-top"</span> <span class="attr">alt</span>=<span class="string">"..."</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"card-body"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">h5</span> <span class="attr">class</span>=<span class="string">"card-title"</span>&gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">article.title</span> %&gt;</span><span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"card-text"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">small</span> <span class="attr">class</span>=<span class="string">"text-muted"</span></span></span><br><span class="line"><span class="tag">              &gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">article.time.toLocaleString</span>() %&gt;</span><span class="tag">&lt;/<span class="name">small</span></span></span><br><span class="line"><span class="tag">            &gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"card-text"</span>&gt;</span></span><br><span class="line">            &lt;%= article.content.replace(/&lt;[^&gt;]+&gt;/g,"").substring(0,100) %&gt;...</span><br><span class="line">          <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"stretched-link"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span> &#125;) %&gt;</span></span><br></pre></td></tr></table></figure><p>最后在myblog目录下的 <code>index.js</code> 入口函数中新增</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app.use(<span class="string">"/article"</span>, <span class="built_in">require</span>(<span class="string">"./router/article"</span>));</span><br></pre></td></tr></table></figure><p>启动服务，浏览器访问 <a href="http://127.0.0.1:3000/article/list/1" target="_blank" rel="noopener">http://127.0.0.1:3000/article/list/1</a> ，出现以下页面</p><p><img src= "https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@v3.3.1/butterfly/img/loading9.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/extheor/images/myblog/5.png" alt="aRnmCV.png" /></p><p>虽然现在输入url网址能够访问到指定类目列表，但是点击类目列表却不能访问</p><p>这时候应该去 <code>header.html</code> 模板文件中修改 href 路由</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%</span> <span class="attr">categories.forEach</span>(<span class="attr">category</span> =&gt;</span> &#123; %&gt;</span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"nav-item"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"nav-link"</span> <span class="attr">href</span>=<span class="string">"/article/list/&lt;%= category.id %&gt; "</span></span></span><br><span class="line"><span class="tag">           &gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">category.name</span> %&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span> &#125;) %&gt;</span></span><br></pre></td></tr></table></figure><p>然后就是修改当前栏目后面显示的数据</p><p>通过id查找数据库中的name，然后进行数据显示</p><p>在model目录下的 <code>category.js</code> 文件中新增方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 获取指定编号的类目详情</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param <span class="type">&#123;integer&#125;</span> </span>id 类目编号</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">static</span> getCategoryById(id) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">let</span> sql = <span class="string">"SELECT id,`name`,`index` FROM category WHERE id = ?"</span>;</span><br><span class="line">      <span class="keyword">this</span>.query(sql, id)</span><br><span class="line">        .then(<span class="function">(<span class="params">results</span>) =&gt;</span> &#123;</span><br><span class="line">          resolve(results[<span class="number">0</span>]);</span><br><span class="line">        &#125;)</span><br><span class="line">        .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="built_in">console</span>.log(<span class="string">`获取指定编号的类目详情失败：<span class="subst">$&#123;err.message&#125;</span>`</span>);</span><br><span class="line">          reject(err);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>在middleware目录下新增属性</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 获取指定的类目详情</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  getCategoryById: <span class="function">(<span class="params">req, res, next</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> id = req.params.id;</span><br><span class="line">    Category.getCategoryById(id)</span><br><span class="line">      .then(<span class="function">(<span class="params">results</span>) =&gt;</span> &#123;</span><br><span class="line">        req.category = results;</span><br><span class="line">        next();</span><br><span class="line">      &#125;)</span><br><span class="line">      .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">        next(err);</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><p>修改router目录下的 <code>article.js</code> 文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">articleApp.get(</span><br><span class="line">  <span class="string">"/list/:id"</span>,</span><br><span class="line">  [article.getListByCategoryId, category.getList, category.getCategoryById],</span><br><span class="line">  (req, res) =&gt; &#123;</span><br><span class="line">    <span class="keyword">let</span> &#123; articles, categories, category &#125; = req;</span><br><span class="line">    res.render(<span class="string">"list"</span>, &#123; articles, categories, category &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>修改views目录下的 <code>list.html</code> 模板文件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">"mb-4"</span>&gt;</span>当前栏目：<span class="tag">&lt;<span class="name">%=</span> <span class="attr">category.name</span> %&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br></pre></td></tr></table></figure><p>启动服务，出现以下页面</p><p><img src= "https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@v3.3.1/butterfly/img/loading9.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/extheor/images/myblog/6.png" alt="aR3ffA.png" /></p><h2 id="博客前台-文章搜索"><a class="markdownIt-Anchor" href="#博客前台-文章搜索"></a> 博客前台 文章搜索</h2><p>在model目录下的 <code>article.js</code> 文件下新增方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 获取指定关键词的文章列表</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param <span class="type">&#123;integer&#125;</span> </span>keyword 搜索内容</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">static</span> getListByKeyword(keyword) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">let</span> sql =</span><br><span class="line">        <span class="string">"SELECT id,title,content,`time` FROM article WHERE title LIKE ? ORDER BY time DESC"</span>;</span><br><span class="line">      <span class="keyword">this</span>.query(sql, <span class="string">`%<span class="subst">$&#123;keyword&#125;</span>%`</span>)</span><br><span class="line">        .then(<span class="function">(<span class="params">results</span>) =&gt;</span> &#123;</span><br><span class="line">          resolve(results);</span><br><span class="line">        &#125;)</span><br><span class="line">        .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="built_in">console</span>.log(<span class="string">`获取指定关键词的文章列表失败：<span class="subst">$&#123;err.message&#125;</span>`</span>);</span><br><span class="line">          reject(err);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>在middleware目录下的 <code>article.js</code> 文件中新增属性</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 获取指定类目下的文章</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  getListByKeyword: <span class="function">(<span class="params">req, res, next</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 要获取表单的keyword</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">let</span> keyword = req.query.keyword;</span><br><span class="line">    Article.getListByKeyword(keyword)</span><br><span class="line">      .then(<span class="function">(<span class="params">results</span>) =&gt;</span> &#123;</span><br><span class="line">        req.articles = results;</span><br><span class="line">        next();</span><br><span class="line">      &#125;)</span><br><span class="line">      .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">        next(err);</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><p>在router目录下新建文件 <code>search.js</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 搜索子应用</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">"express"</span>);</span><br><span class="line"><span class="keyword">const</span> article = <span class="built_in">require</span>(<span class="string">"../middleware/article"</span>);</span><br><span class="line"><span class="keyword">const</span> category = <span class="built_in">require</span>(<span class="string">"../middleware/category"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 文章子应用</span></span><br><span class="line"><span class="keyword">const</span> searchApp = express();</span><br><span class="line"></span><br><span class="line">searchApp.get(<span class="string">"/"</span>, [article.getListByKeyword, category.getList], (req, res) =&gt; &#123;</span><br><span class="line">  <span class="keyword">let</span> &#123; articles, categories &#125; = req;</span><br><span class="line">  res.render(<span class="string">"search"</span>, &#123; articles, categories, <span class="attr">keyword</span>: req.query.keyword &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = searchApp;</span><br></pre></td></tr></table></figure><p>修改views目录下的 <code>search.html</code> 模板文件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%-</span> <span class="attr">include</span>("<span class="attr">header.html</span>") <span class="attr">-</span>%&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container mt-5"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">"mb-4"</span>&gt;</span>搜索结果（搜索词：<span class="tag">&lt;<span class="name">%=</span> <span class="attr">keyword</span> %&gt;</span> ）<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row row-cols-4"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">%</span> <span class="attr">articles.forEach</span>(<span class="attr">article</span> =&gt;</span> &#123; %&gt;</span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col my-3"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"card h-100"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"holder.js/100px150"</span> <span class="attr">class</span>=<span class="string">"card-img-top"</span> <span class="attr">alt</span>=<span class="string">"..."</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"card-body"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">h5</span> <span class="attr">class</span>=<span class="string">"card-title"</span>&gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">article.title</span> %&gt;</span><span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"card-text"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">small</span> <span class="attr">class</span>=<span class="string">"text-muted"</span></span></span><br><span class="line"><span class="tag">              &gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">article.time.toLocaleString</span>() %&gt;</span><span class="tag">&lt;/<span class="name">small</span></span></span><br><span class="line"><span class="tag">            &gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"card-text"</span>&gt;</span></span><br><span class="line">            &lt;%= article.content.replace(/&lt;[^&gt;]+&gt;/g,"").substring(0,100) %&gt;...</span><br><span class="line">          <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"stretched-link"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">%</span> &#125;) %&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">%-</span> <span class="attr">include</span>('<span class="attr">footer.html</span>') <span class="attr">-</span>%&gt;</span></span><br></pre></td></tr></table></figure><p>修改views目录下的 <code>header.html</code> 文件的form表单</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;form</span><br><span class="line">class&#x3D;&quot;form-inline my-2 my-lg-0 ml-5&quot;</span><br><span class="line">method&#x3D;&quot;get&quot;</span><br><span class="line">action&#x3D;&quot;&#x2F;search&quot;</span><br><span class="line">&gt;</span><br><span class="line">&lt;input</span><br><span class="line">class&#x3D;&quot;form-control mr-sm-2&quot;</span><br><span class="line">name&#x3D;&quot;keyword&quot;</span><br><span class="line">type&#x3D;&quot;search&quot;</span><br><span class="line">placeholder&#x3D;&quot;请输入关键词...&quot;</span><br><span class="line">&#x2F;&gt;</span><br><span class="line">&lt;button class&#x3D;&quot;btn btn-outline-success my-2 my-sm-0&quot; type&#x3D;&quot;submit&quot;&gt;</span><br><span class="line">搜索</span><br><span class="line">&lt;&#x2F;button&gt;</span><br><span class="line">&lt;&#x2F;form&gt;</span><br></pre></td></tr></table></figure><p>启动服务，搜索css出现以下页面</p><p><img src= "https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@v3.3.1/butterfly/img/loading9.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/extheor/images/myblog/7.png" alt="aRwkNV.png" /></p><h2 id="博客前台-文章详情"><a class="markdownIt-Anchor" href="#博客前台-文章详情"></a> 博客前台 文章详情</h2><p>在router目录下新建 <code>article.js</code> 文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 文章详情页</span></span><br><span class="line">articleApp.get(<span class="string">"/:id"</span>, (req, res) =&gt; &#123;</span><br><span class="line">  <span class="keyword">let</span> &#123; categories &#125; = req;</span><br><span class="line">  res.render(<span class="string">"article"</span>, &#123; categories &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>启动服务，在浏览器输入url网址 <a href="http://127.0.0.1:3000/article/1" target="_blank" rel="noopener">http://127.0.0.1:3000/article/1</a> 会出现以下页面</p><p><img src= "https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@v3.3.1/butterfly/img/loading9.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/extheor/images/myblog/8.png" alt="af4OZq.png" /></p><p>在model目录下的 <code>article.js</code> 文件中新增方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 获取指定文章的详情</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param <span class="type">&#123;integer&#125;</span> </span>id 文章编号</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">static</span> getArticleById(id) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">let</span> sql =</span><br><span class="line">        <span class="string">"SELECT a.id,a.title,a.content,a.`time`,a.hits,a.category_id,c.`name` FROM article a,category c WHERE a.id = ? AND a.category_id = c.id"</span>;</span><br><span class="line">      <span class="keyword">this</span>.query(sql, id)</span><br><span class="line">        .then(<span class="function">(<span class="params">results</span>) =&gt;</span> &#123;</span><br><span class="line">          resolve(results[<span class="number">0</span>]);</span><br><span class="line">        &#125;)</span><br><span class="line">        .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="built_in">console</span>.log(<span class="string">`获取指定文章的详情失败：<span class="subst">$&#123;err.message&#125;</span>`</span>);</span><br><span class="line">          reject(err);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>在middleware目录下的 <code>article.js</code> 文件中新增属性</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 获取指定文章的详情</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  getArticleById: <span class="function">(<span class="params">req, res, next</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> id = req.params.id;</span><br><span class="line">    Article.getArticleById(id)</span><br><span class="line">      .then(<span class="function">(<span class="params">results</span>) =&gt;</span> &#123;</span><br><span class="line">        req.article = results;</span><br><span class="line">        next();</span><br><span class="line">      &#125;)</span><br><span class="line">      .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">        next(err);</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><p>修改router目录下的 <code>article.js</code> 文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 文章详情页</span></span><br><span class="line">articleApp.get(<span class="string">"/:id"</span>, [article.getArticleById], (req, res) =&gt; &#123;</span><br><span class="line">  <span class="keyword">let</span> &#123; categories, article &#125; = req;</span><br><span class="line">  res.render(<span class="string">"article"</span>, &#123; categories, article &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>修改views目录下的 <code>article.html</code> 文件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%-</span> <span class="attr">include</span>("<span class="attr">header.html</span>") <span class="attr">-</span>%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container mt-4"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">nav</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ol</span> <span class="attr">class</span>=<span class="string">"breadcrumb bg-white"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"breadcrumb-item"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/"</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"breadcrumb-item"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/article/list/&lt;%= article.category_id %&gt;"</span></span></span><br><span class="line"><span class="tag">          &gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">article.name</span> %&gt;</span><span class="tag">&lt;/<span class="name">a</span></span></span><br><span class="line"><span class="tag">        &gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"breadcrumb-item active"</span>&gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">article.title</span> %&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"card"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"card-header bg-white"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">"card-title m-0"</span>&gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">article.title</span> %&gt;</span><span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"text-muted small mt-2 m-0"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"mr-3"</span>&gt;</span>发表时间：<span class="tag">&lt;<span class="name">%=</span> <span class="attr">article.time.toLocaleString</span>() %&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"mr-1"</span>&gt;</span>点击：<span class="tag">&lt;<span class="name">%=</span> <span class="attr">article.hits</span> %&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 注意：下面用的是 '-' 而不是'=' '-'可以解析HTML代码  --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"card-body"</span>&gt;</span><span class="tag">&lt;<span class="name">%-</span> <span class="attr">article.content</span> %&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"card-footer bg-white border-0"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"badge badge-pill"</span>&gt;</span>标签1<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"badge badge-pill"</span>&gt;</span>标签2<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"badge badge-pill"</span>&gt;</span>标签3<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"badge badge-pill"</span>&gt;</span>标签4<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"badge badge-pill"</span>&gt;</span>标签5<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">nav</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"pagination mt-3"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"page-item"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"page-link"</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>上一篇：文章标题<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"page-item ml-auto"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"page-link"</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>下一篇：文章标题<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">%-</span> <span class="attr">include</span>('<span class="attr">footer.html</span>') <span class="attr">-</span>%&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>注意：&lt;%- article.content %&gt; 用 ‘-’ 可以解析HTML代码</p></blockquote><p>然后更改各文件路由</p><p>按需求来更改路由即可</p><p>参考路由</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">href="/article/<span class="tag">&lt;<span class="name">%=</span> <span class="attr">article.id</span> %&gt;</span>"</span><br></pre></td></tr></table></figure><p>启动服务，基本完成文章跳转功能</p><h2 id="博客前台-文章标签显示"><a class="markdownIt-Anchor" href="#博客前台-文章标签显示"></a> 博客前台 文章标签显示</h2><p>在model目录下新建 <code>tab.js</code> 文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 标签数据模型</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">module.exports = class Tab extends require("./model") &#123;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 获取指定文章的标签列表</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param <span class="type">&#123;integer&#125;</span> </span>id 文章编号</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">static</span> getListByArticleId(id) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">let</span> sql = <span class="string">"SELECT id,`name` FROM tabs WHERE article_id = ?"</span>;</span><br><span class="line">      <span class="keyword">this</span>.query(sql, id)</span><br><span class="line">        .then(<span class="function">(<span class="params">results</span>) =&gt;</span> &#123;</span><br><span class="line">          resolve(results);</span><br><span class="line">        &#125;)</span><br><span class="line">        .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="built_in">console</span>.log(<span class="string">`获取指定文章的标签列表失败：<span class="subst">$&#123;err.message&#125;</span>`</span>);</span><br><span class="line">          reject(err);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>在middleware目录下的 <code>article.js</code> 文件下新增属性</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 获取指定文章的标签列表</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  getListByArticleId: <span class="function">(<span class="params">req, res, next</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> id = req.params.id;</span><br><span class="line">    Tab.getListByArticleId(id)</span><br><span class="line">      .then(<span class="function">(<span class="params">results</span>) =&gt;</span> &#123;</span><br><span class="line">        req.tabs = results;</span><br><span class="line">        next();</span><br><span class="line">      &#125;)</span><br><span class="line">      .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">        next(err);</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><p>修改router目录下的 <code>article.js</code> 文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 文章详情页</span></span><br><span class="line">articleApp.get(</span><br><span class="line">  <span class="string">"/:id"</span>,</span><br><span class="line">  [article.getArticleById, article.getListByArticleId],</span><br><span class="line">  (req, res) =&gt; &#123;</span><br><span class="line">    <span class="keyword">let</span> &#123; categories, article, tabs &#125; = req;</span><br><span class="line">    res.render(<span class="string">"article"</span>, &#123; categories, article, tabs &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>修改views目录下的 <code>article.js</code> 文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"card-footer bg-white border-0"</span>&gt;</span><br><span class="line">    &lt;% tabs.forEach(<span class="function"><span class="params">tab</span> =&gt;</span> &#123; %&gt;</span><br><span class="line">    &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"badge badge-pill"</span>&gt;&lt;%= tab.name %&gt; &lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">    &lt;% &#125;) %&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>div&gt;</span><br></pre></td></tr></table></figure><p>开启服务，出现以下页面</p><p><img src= "https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@v3.3.1/butterfly/img/loading9.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/extheor/images/myblog/9.png" alt="ahm6LF.png" /></p><h2 id="博客前台-上一篇下一篇"><a class="markdownIt-Anchor" href="#博客前台-上一篇下一篇"></a> 博客前台 上一篇下一篇</h2><p>在model目录下的 <code>article.js</code> 文件中新建两个方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 获取上一篇文章</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param <span class="type">&#123;integer&#125;</span> </span>id 当前文章编号</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">static</span> getPrevArticle(id) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">let</span> sql =</span><br><span class="line">        <span class="string">"SELECT id,title FROM article WHERE id &lt; ? ORDER BY id DESC LIMIT 1"</span>;</span><br><span class="line">      <span class="keyword">this</span>.query(sql, id)</span><br><span class="line">        .then(<span class="function">(<span class="params">results</span>) =&gt;</span> &#123;</span><br><span class="line">          resolve(results[<span class="number">0</span>]);</span><br><span class="line">        &#125;)</span><br><span class="line">        .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="built_in">console</span>.log(<span class="string">`获取上一篇文章失败：<span class="subst">$&#123;err.message&#125;</span>`</span>);</span><br><span class="line">          reject(err);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 获取下一篇文章</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param <span class="type">&#123;integer&#125;</span> </span>id 当前文章编号</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">static</span> getNextArticle(id) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">let</span> sql =</span><br><span class="line">        <span class="string">"SELECT id,title FROM article WHERE id &gt; ? ORDER BY id ASC LIMIT 1"</span>;</span><br><span class="line">      <span class="keyword">this</span>.query(sql, id)</span><br><span class="line">        .then(<span class="function">(<span class="params">results</span>) =&gt;</span> &#123;</span><br><span class="line">          resolve(results[<span class="number">0</span>]);</span><br><span class="line">        &#125;)</span><br><span class="line">        .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="built_in">console</span>.log(<span class="string">`获取下一篇文章失败：<span class="subst">$&#123;err.message&#125;</span>`</span>);</span><br><span class="line">          reject(err);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>在middleware目录下的 <code>article.js</code> 文件中新增两个属性</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 获取上一篇文章</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  getPrevArticle: <span class="function">(<span class="params">req, res, next</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> id = req.params.id;</span><br><span class="line">    Article.getPrevArticle(id)</span><br><span class="line">      .then(<span class="function">(<span class="params">results</span>) =&gt;</span> &#123;</span><br><span class="line">        req.prev = results;</span><br><span class="line">        next();</span><br><span class="line">      &#125;)</span><br><span class="line">      .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">        next(err);</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 获取下一篇文章</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  getNextArticle: <span class="function">(<span class="params">req, res, next</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> id = req.params.id;</span><br><span class="line">    Article.getNextArticle(id)</span><br><span class="line">      .then(<span class="function">(<span class="params">results</span>) =&gt;</span> &#123;</span><br><span class="line">        req.next = results;</span><br><span class="line">        next();</span><br><span class="line">      &#125;)</span><br><span class="line">      .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">        next(err);</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><p>修改router目录下的 <code>article.js</code> 文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 文章详情页</span></span><br><span class="line">articleApp.get(</span><br><span class="line">  <span class="string">"/:id"</span>,</span><br><span class="line">  [</span><br><span class="line">    article.getArticleById,</span><br><span class="line">    article.getListByArticleId,</span><br><span class="line">    article.getPrevArticle,</span><br><span class="line">    article.getNextArticle,</span><br><span class="line">  ],</span><br><span class="line">  (req, res) =&gt; &#123;</span><br><span class="line">    <span class="keyword">let</span> &#123; categories, article, tabs, prev, next &#125; = req;</span><br><span class="line">    res.render(<span class="string">"article"</span>, &#123; categories, article, tabs, prev, next &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>修改views目录下的 <code>article.html</code> 文件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">nav</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"pagination mt-3"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span> (<span class="attr">prev</span>) &#123; %&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 如果上一篇文章存在才显示上一篇文章 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"page-item"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"page-link"</span> <span class="attr">href</span>=<span class="string">"/article/&lt;%= prev.id %&gt;"</span></span></span><br><span class="line"><span class="tag">          &gt;</span>上一篇：<span class="tag">&lt;<span class="name">%=</span> <span class="attr">prev.title</span> %&gt;</span><span class="tag">&lt;/<span class="name">a</span></span></span><br><span class="line"><span class="tag">        &gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 如果下一篇文章存在才显示下一篇文章 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span> (<span class="attr">next</span>) &#123; %&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"page-item ml-auto"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"page-link"</span> <span class="attr">href</span>=<span class="string">"/article/&lt;%= next.id %&gt;"</span></span></span><br><span class="line"><span class="tag">          &gt;</span>下一篇：<span class="tag">&lt;<span class="name">%=</span> <span class="attr">next.title</span> %&gt;</span><span class="tag">&lt;/<span class="name">a</span></span></span><br><span class="line"><span class="tag">        &gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br></pre></td></tr></table></figure><p>开启服务，页面完成以下效果</p><p><img src= "https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@v3.3.1/butterfly/img/loading9.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/extheor/images/myblog/%E4%B8%8A%E4%B8%80%E7%AF%87%E4%B8%8B%E4%B8%80%E7%AF%87.gif" alt="ah8kRJ.gif" /></p><h2 id="博客前台-用户登录"><a class="markdownIt-Anchor" href="#博客前台-用户登录"></a> 博客前台 用户登录</h2><p>首先在router目录下新建 <code>login.js</code> 文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 登录子应用（首页路由）</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">"express"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 登录子应用</span></span><br><span class="line"><span class="keyword">const</span> loginApp = express();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 加载登录页面</span></span><br><span class="line">loginApp.get(<span class="string">"/"</span>, (req, res) =&gt; &#123;</span><br><span class="line">  res.render(<span class="string">"login"</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 把这个子应用导出去</span></span><br><span class="line"><span class="built_in">module</span>.exports = loginApp;</span><br></pre></td></tr></table></figure><p>在myblog目录下的 <code>index.js</code> 文件中调用登录子应用</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 调用登录子应用</span></span><br><span class="line">app.use(<span class="string">"/login"</span>, <span class="built_in">require</span>(<span class="string">"./router/login"</span>));</span><br></pre></td></tr></table></figure><p>在model目录下新建 <code>user.js</code> 文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 用户数据模型</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">module.exports = class User extends require("./model") &#123;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 用户登录</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param <span class="type">&#123;string&#125;</span> </span>username 登录账号</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param <span class="type">&#123;string&#125;</span> </span>password 登录密码</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">static</span> login(username, password) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">let</span> sql =</span><br><span class="line">        <span class="string">"SELECT id,username FROM `user` WHERE username=? AND `password`=?"</span>;</span><br><span class="line">      <span class="keyword">this</span>.query(sql, [username, password])</span><br><span class="line">        .then(<span class="function">(<span class="params">results</span>) =&gt;</span> &#123;</span><br><span class="line">          resolve(results[<span class="number">0</span>]);</span><br><span class="line">        &#125;)</span><br><span class="line">        .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="built_in">console</span>.log(<span class="string">`登录失败：<span class="subst">$&#123;err.message&#125;</span>`</span>);</span><br><span class="line">          reject(err);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>因为用户登录不用中间件，所以直接在router目录下的 <code>login.js</code> 文件中实现登录操作</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 实现登录操作</span></span><br><span class="line">loginApp.post(<span class="string">"/"</span>, (req, res, next) =&gt; &#123;</span><br><span class="line">  <span class="keyword">let</span> &#123; username, password &#125; = req.body;</span><br><span class="line">  User.login(username, password)</span><br><span class="line">    .then(<span class="function">(<span class="params">results</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (results) &#123;</span><br><span class="line">        res.redirect(<span class="string">"/"</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        res.render(<span class="string">"login"</span>, &#123; <span class="attr">msg</span>: <span class="string">"登录失败！用户名或密码错误"</span> &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">      next(err);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>把登录失败的数据映射到页面上</p><p>修改在views目录下的 <code>login.html</code> 文件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"text-danger col offset-2"</span>&gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">msg</span> %&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在myblog下的 <code>index.js</code> 文件中进行post请求处理</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// POST请求处理</span></span><br><span class="line">app.use(express.urlencoded(&#123; <span class="attr">extended</span>: <span class="literal">true</span> &#125;));</span><br></pre></td></tr></table></figure><p>开启服务，出现以下效果</p><p>[<img src= "https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@v3.3.1/butterfly/img/loading9.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/extheor/images/myblog/%E7%99%BB%E5%BD%95.gif" alt="ahcP2R.gif" /></p><h2 id="博客前台-session与退出"><a class="markdownIt-Anchor" href="#博客前台-session与退出"></a> 博客前台 Session与退出</h2><p>安装cookie-session模块</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i cookie-session</span><br></pre></td></tr></table></figure><p>在myblog下的 <code>index.js</code> 文件中引入cookie-session</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> session = <span class="built_in">require</span>(<span class="string">"cookie-session"</span>);</span><br></pre></td></tr></table></figure><p>配置session</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// SESSION配置</span></span><br><span class="line">app.use(</span><br><span class="line">  session(&#123;</span><br><span class="line">    keys: [<span class="string">"secret"</span>],</span><br><span class="line">    maxAge: <span class="number">1000</span> * <span class="number">60</span> * <span class="number">30</span>, <span class="comment">// cookie的生命周期</span></span><br><span class="line">  &#125;)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>修改router目录下的 <code>login.js</code> 文件的登录操作功能</p><p>用户登录后会把从数据库查询到的结果results保存到session的user中</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 实现登录操作</span></span><br><span class="line">loginApp.post(<span class="string">"/"</span>, (req, res, next) =&gt; &#123;</span><br><span class="line">  <span class="keyword">let</span> &#123; username, password &#125; = req.body;</span><br><span class="line">  User.login(username, password)</span><br><span class="line">    .then(<span class="function">(<span class="params">results</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (results) &#123;</span><br><span class="line">        <span class="comment">// session存储（key=value）</span></span><br><span class="line">        req.session.user = results;</span><br><span class="line">        res.redirect(<span class="string">"/"</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        res.render(<span class="string">"login"</span>, &#123; <span class="attr">msg</span>: <span class="string">"登录失败！用户名或密码错误"</span> &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">      next(err);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>在middleware目录下新建 <code>auth.js</code> 文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 权限中间件</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 从session中读取用户</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  getUser: <span class="function">(<span class="params">req, res, next</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 从session中读取数据</span></span><br><span class="line">    req.user = req.session.user;</span><br><span class="line">    next();</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>在 <code>article.js</code> 、 <code>index.js</code> 、 <code>search.js</code> 文件中都加入user，目的是为了使未登录的用户不能访问这些页面。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> auth = <span class="built_in">require</span>(<span class="string">"../middleware/auth"</span>);</span><br><span class="line"></span><br><span class="line">articleApp.use(category.getList, auth.getUser);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 文章列表页</span></span><br><span class="line">articleApp.get(</span><br><span class="line">  <span class="string">"/list/:id"</span>,</span><br><span class="line">  [article.getListByCategoryId, category.getCategoryById],</span><br><span class="line">  (req, res) =&gt; &#123;</span><br><span class="line">    <span class="keyword">let</span> &#123; articles, categories, category, user &#125; = req;</span><br><span class="line">    res.render(<span class="string">"list"</span>, &#123; articles, categories, category, user &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 文章详情页</span></span><br><span class="line">articleApp.get(</span><br><span class="line">  <span class="string">"/:id"</span>,</span><br><span class="line">  [</span><br><span class="line">    article.getArticleById,</span><br><span class="line">    article.getListByArticleId,</span><br><span class="line">    article.getPrevArticle,</span><br><span class="line">    article.getNextArticle,</span><br><span class="line">  ],</span><br><span class="line">  (req, res) =&gt; &#123;</span><br><span class="line">    <span class="keyword">let</span> &#123; categories, article, tabs, prev, next, user &#125; = req;</span><br><span class="line">    res.render(<span class="string">"article"</span>, &#123; categories, article, tabs, prev, next, user &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> auth = <span class="built_in">require</span>(<span class="string">"../middleware/auth"</span>);</span><br><span class="line"></span><br><span class="line">indexApp.use(auth.getUser);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 加载首页页面</span></span><br><span class="line">indexApp.get(</span><br><span class="line">  <span class="string">"/"</span>,</span><br><span class="line">  [article.getHot, article.getList, category.getList],</span><br><span class="line">  (req, res) =&gt; &#123;</span><br><span class="line">    <span class="keyword">let</span> &#123; hots, articles, categories, user &#125; = req;</span><br><span class="line">    res.render(<span class="string">"index"</span>, &#123; hots, articles, categories, user &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> auth = <span class="built_in">require</span>(<span class="string">"../middleware/auth"</span>);</span><br><span class="line"></span><br><span class="line">searchApp.use(auth.getUser);</span><br><span class="line"></span><br><span class="line">searchApp.get(<span class="string">"/"</span>, [article.getListByKeyword, category.getList], (req, res) =&gt; &#123;</span><br><span class="line">  <span class="keyword">let</span> &#123; articles, categories, user &#125; = req;</span><br><span class="line">  res.render(<span class="string">"search"</span>, &#123;</span><br><span class="line">    articles,</span><br><span class="line">    categories,</span><br><span class="line">    keyword: req.query.keyword,</span><br><span class="line">    user,</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>修改views目录下的 <code>header.html</code> 文件，加入判断</p><p>如果user存在，说明已登录，则显示用户数据</p><p>如果user不存在，说明未登录，则显示登录</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"navbar-nav ml-auto"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span> (<span class="attr">user</span>) &#123; %&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"nav-item dropdown"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span></span></span><br><span class="line"><span class="tag">               <span class="attr">class</span>=<span class="string">"nav-link dropdown-toggle"</span></span></span><br><span class="line"><span class="tag">               <span class="attr">href</span>=<span class="string">"#"</span></span></span><br><span class="line"><span class="tag">               <span class="attr">id</span>=<span class="string">"navbarDropdown"</span></span></span><br><span class="line"><span class="tag">               <span class="attr">data-toggle</span>=<span class="string">"dropdown"</span></span></span><br><span class="line"><span class="tag">               &gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">%=</span> <span class="attr">user.username</span> %&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"dropdown-menu"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"dropdown-item"</span> <span class="attr">href</span>=<span class="string">"/user/logout"</span>&gt;</span>退出<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">%</span> &#125; <span class="attr">else</span> &#123; %&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"nav-item"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/login"</span> <span class="attr">class</span>=<span class="string">"nav-link"</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><p>启动服务，用户未登录显示以下效果</p><p><img src= "https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@v3.3.1/butterfly/img/loading9.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/extheor/images/myblog/10.png" alt="aho8pT.png" /></p><p>用户已登录显示以下效果</p><p><img src= "https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@v3.3.1/butterfly/img/loading9.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/extheor/images/myblog/11.png" alt="ahowA1.png" /></p><p>在myblog目录下的 <code>index.js</code> 文件中实现退出登录</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 退出登录</span></span><br><span class="line">app.get(<span class="string">"/user/logout"</span>, (req, res) =&gt; &#123;</span><br><span class="line">  req.session.user = <span class="literal">null</span>;</span><br><span class="line">  res.render(<span class="string">"login"</span>, &#123; <span class="attr">msg</span>: <span class="string">"退出成功"</span> &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>启动服务，实现以下效果</p><p><img src= "https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@v3.3.1/butterfly/img/loading9.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/extheor/images/myblog/%E9%80%80%E5%87%BA%E7%99%BB%E5%BD%95.gif" alt="ah7SII.gif" /></p><h2 id="博客后台-功能介绍与模板整合"><a class="markdownIt-Anchor" href="#博客后台-功能介绍与模板整合"></a> 博客后台 功能介绍与模板整合</h2><p>在views目录下新建admin后台管理目录</p><p>把需要的资源复制进来</p><p>同样，在static目录下新建admin目录</p><p>把需要的资源复制进来</p><p>把 <code>pv.json</code> 文件复制到myblog目录下</p><h2 id="博客后台-模板管理"><a class="markdownIt-Anchor" href="#博客后台-模板管理"></a> 博客后台 模板管理</h2><p>为了方便，把代码重复的部分提取到 <code>header.html</code> 模板中</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">"navbar navbar-expand-sm navbar-dark bg-dark"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"navbar-brand"</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./static/img/logo.png"</span> <span class="attr">width</span>=<span class="string">"30"</span> <span class="attr">height</span>=<span class="string">"30"</span> <span class="attr">alt</span>=<span class="string">""</span> /&gt;</span></span><br><span class="line">    个人中心</span><br><span class="line">  <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"navbar-nav"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"../index.html"</span> <span class="attr">class</span>=<span class="string">"nav-link"</span>&gt;</span>博客首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"navbar-nav ml-auto"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"nav-item dropdown"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span></span></span><br><span class="line"><span class="tag">        <span class="attr">class</span>=<span class="string">"nav-link dropdown-toggle"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">href</span>=<span class="string">"#"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">id</span>=<span class="string">"navbarDropdown"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">data-toggle</span>=<span class="string">"dropdown"</span></span></span><br><span class="line"><span class="tag">      &gt;</span></span><br><span class="line">        admin</span><br><span class="line">      <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"dropdown-menu dropdown-menu-right"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"dropdown-item"</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>个人中心<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"dropdown-item"</span> <span class="attr">href</span>=<span class="string">"/user/logout"</span>&gt;</span>退出<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后用ejs模板引入即可</p><p>在router目录下新建admin目录，在router/admin目录下新建 <code>index.js</code> 文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 后台首页</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">"express"</span>);</span><br><span class="line"><span class="keyword">const</span> indexApp = express();</span><br><span class="line"></span><br><span class="line">indexApp.get(<span class="string">"/"</span>, (req, res) =&gt; &#123;</span><br><span class="line">  res.render(<span class="string">"admin/index"</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = indexApp;</span><br></pre></td></tr></table></figure><p>在myblog目录下的 <code>index.js</code> 文件中调用后台首页</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 调用后台首页</span></span><br><span class="line">app.use(<span class="regexp">/\/admin\/(index)?/</span>, <span class="built_in">require</span>(<span class="string">"./router/admin/index"</span>));</span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@v3.3.1/butterfly/img/loading9.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/extheor/images/myblog/12.png" alt="" /></p><p>在middleware目录下的 <code>auth.js</code> 文件中新增属性</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 是否允许用户进入后台管理页</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  allowToAdmin: <span class="function">(<span class="params">req, res, next</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> user = req.session.user;</span><br><span class="line">    <span class="keyword">if</span> (user) &#123;</span><br><span class="line">      req.user = user;</span><br><span class="line">      next();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      res.redirect(<span class="string">"/login"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><p>在 <code>myblog/index.js</code> 中加上进入后台的权限验证</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 进入后台的权限验证</span></span><br><span class="line">app.use(<span class="string">"/admin/?*"</span>, <span class="built_in">require</span>(<span class="string">"./middleware/auth"</span>).allowToAdmin);</span><br></pre></td></tr></table></figure><p>这样写就可以使所有的后台页面都需要登录之后才能访问</p><p>修改 <code>views/admin/header.html</code> 文件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">"navbar navbar-expand-sm navbar-dark bg-dark"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"navbar-brand"</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"/admin/img/logo.png"</span> <span class="attr">width</span>=<span class="string">"30"</span> <span class="attr">height</span>=<span class="string">"30"</span> <span class="attr">alt</span>=<span class="string">""</span> /&gt;</span></span><br><span class="line">    个人中心</span><br><span class="line">  <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"navbar-nav"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/"</span> <span class="attr">class</span>=<span class="string">"nav-link"</span>&gt;</span>博客首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"navbar-nav ml-auto"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"nav-item dropdown"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span></span></span><br><span class="line"><span class="tag">        <span class="attr">class</span>=<span class="string">"nav-link dropdown-toggle"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">href</span>=<span class="string">"#"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">id</span>=<span class="string">"navbarDropdown"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">data-toggle</span>=<span class="string">"dropdown"</span></span></span><br><span class="line"><span class="tag">      &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">%=</span> <span class="attr">user.username</span> %&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"dropdown-menu dropdown-menu-right"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"dropdown-item"</span> <span class="attr">href</span>=<span class="string">"/admin"</span>&gt;</span>个人中心<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"dropdown-item"</span> <span class="attr">href</span>=<span class="string">"/user/logout"</span>&gt;</span>退出<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@v3.3.1/butterfly/img/loading9.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/extheor/images/myblog/13.png" alt="" /></p><p>在 <code>views/header.html</code> 中新增个人中心</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"dropdown-menu"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"dropdown-item"</span> <span class="attr">href</span>=<span class="string">"/admin"</span>&gt;</span>个人中心<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"dropdown-item"</span> <span class="attr">href</span>=<span class="string">"/user/logout"</span>&gt;</span>退出<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="博客后台-获取最后登录时间"><a class="markdownIt-Anchor" href="#博客后台-获取最后登录时间"></a> 博客后台 获取最后登录时间</h2><p>在 <code>model/user.js</code> 文件中新增方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 最后一次登陆的时间</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">static</span> lastLoginTime() &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">let</span> sql =</span><br><span class="line">        <span class="string">"SELECT time FROM log WHERE handle = '登录' ORDER BY time DESC LIMIT 1"</span>;</span><br><span class="line">      <span class="keyword">this</span>.query(sql)</span><br><span class="line">        .then(<span class="function">(<span class="params">results</span>) =&gt;</span> &#123;</span><br><span class="line">          resolve(results[<span class="number">0</span>]);</span><br><span class="line">        &#125;)</span><br><span class="line">        .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="built_in">console</span>.log(<span class="string">`登录失败：<span class="subst">$&#123;err.message&#125;</span>`</span>);</span><br><span class="line">          reject(err);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>在middleware目录下新建 <code>user.js</code> 文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 用户中间件</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> User = <span class="built_in">require</span>(<span class="string">"../model/user"</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 最后一次登录时间</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  lastLoginTime: <span class="function">(<span class="params">req, res, next</span>) =&gt;</span> &#123;</span><br><span class="line">    User.lastLoginTime()</span><br><span class="line">      .then(<span class="function">(<span class="params">results</span>) =&gt;</span> &#123;</span><br><span class="line">        req.lastLoginTime = results;</span><br><span class="line">        next();</span><br><span class="line">      &#125;)</span><br><span class="line">      .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">        next(err);</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>修改 <code>router/admin/index.js</code> 文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 后台首页</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">"express"</span>);</span><br><span class="line"><span class="keyword">const</span> user = <span class="built_in">require</span>(<span class="string">"../../middleware/user"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> indexApp = express();</span><br><span class="line"></span><br><span class="line">indexApp.get(<span class="string">"/"</span>, [user.lastLoginTime], (req, res) =&gt; &#123;</span><br><span class="line">  <span class="keyword">let</span> &#123; user, lastLoginTime &#125; = req;</span><br><span class="line">  res.render(<span class="string">"admin/index"</span>, &#123; user, lastLoginTime &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = indexApp;</span><br></pre></td></tr></table></figure><p>修改 <code>views/admin/index.html</code> 文件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>上次登录时间：<span class="tag">&lt;<span class="name">%=</span> <span class="attr">lastLoginTime.time.toLocaleString</span>() %&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@v3.3.1/butterfly/img/loading9.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/extheor/images/myblog/14.png" alt="" /></p><h2 id="博客后台-访问量-博文和类目的统计"><a class="markdownIt-Anchor" href="#博客后台-访问量-博文和类目的统计"></a> 博客后台 访问量、博文和类目的统计</h2><p>在model目录下新建 <code>pv.js</code> 文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 访问量数据模型</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">module.exports = class PV extends require("./model") &#123;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 获取总访问量</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">static</span> getTotal() &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">let</span> sql = <span class="string">"SELECT SUM(hits) AS total FROM pv"</span>;</span><br><span class="line">      <span class="keyword">this</span>.query(sql)</span><br><span class="line">        .then(<span class="function">(<span class="params">results</span>) =&gt;</span> &#123;</span><br><span class="line">          resolve(results[<span class="number">0</span>].total);</span><br><span class="line">        &#125;)</span><br><span class="line">        .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="built_in">console</span>.log(<span class="string">`获取总访问量失败：<span class="subst">$&#123;err.message&#125;</span>`</span>);</span><br><span class="line">          reject(err);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>在 <code>model/article.js</code> 文件中新增方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 总博文数</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">static</span> getCount() &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">let</span> sql = <span class="string">"SELECT COUNT(1) AS count FROM article"</span>;</span><br><span class="line">      <span class="keyword">this</span>.query(sql)</span><br><span class="line">        .then(<span class="function">(<span class="params">results</span>) =&gt;</span> &#123;</span><br><span class="line">          resolve(results[<span class="number">0</span>].count);</span><br><span class="line">        &#125;)</span><br><span class="line">        .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="built_in">console</span>.log(<span class="string">`获取总博文数失败：<span class="subst">$&#123;err.message&#125;</span>`</span>);</span><br><span class="line">          reject(err);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>在 <code>model/category.js</code> 文件中新增方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 总类目数</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">static</span> getCount() &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">let</span> sql = <span class="string">"SELECT COUNT(1) AS count FROM category"</span>;</span><br><span class="line">      <span class="keyword">this</span>.query(sql)</span><br><span class="line">        .then(<span class="function">(<span class="params">results</span>) =&gt;</span> &#123;</span><br><span class="line">          resolve(results[<span class="number">0</span>].count);</span><br><span class="line">        &#125;)</span><br><span class="line">        .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="built_in">console</span>.log(<span class="string">`获取总类目数失败：<span class="subst">$&#123;err.message&#125;</span>`</span>);</span><br><span class="line">          reject(err);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>在middleware目录下新建 <code>pv.js</code> 文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 访问量中间件</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> Pv = <span class="built_in">require</span>(<span class="string">"../model/pv"</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 获取总访问量</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  getTotal: <span class="function">(<span class="params">req, res, next</span>) =&gt;</span> &#123;</span><br><span class="line">    Pv.getTotal()</span><br><span class="line">      .then(<span class="function">(<span class="params">results</span>) =&gt;</span> &#123;</span><br><span class="line">        req.pvTotal = results;</span><br><span class="line">        next();</span><br><span class="line">      &#125;)</span><br><span class="line">      .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">        next(err);</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>在 <code>middleware/article.js</code> 文件中新建属性</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 获取总博文数</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  getCount: <span class="function">(<span class="params">req, res, next</span>) =&gt;</span> &#123;</span><br><span class="line">    Article.getCount()</span><br><span class="line">      .then(<span class="function">(<span class="params">results</span>) =&gt;</span> &#123;</span><br><span class="line">        req.articleCount = results;</span><br><span class="line">        next();</span><br><span class="line">      &#125;)</span><br><span class="line">      .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">        next(err);</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><p>在 <code>middleware/category.js</code> 文件中新建属性</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 获取总类目数</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  getCount: <span class="function">(<span class="params">req, res, next</span>) =&gt;</span> &#123;</span><br><span class="line">    Category.getCount()</span><br><span class="line">      .then(<span class="function">(<span class="params">results</span>) =&gt;</span> &#123;</span><br><span class="line">        req.categoryCount = results;</span><br><span class="line">        next();</span><br><span class="line">      &#125;)</span><br><span class="line">      .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">        next(err);</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><p>修改 <code>router/admin/index.js</code> 文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 后台首页</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">"express"</span>);</span><br><span class="line"><span class="keyword">const</span> user = <span class="built_in">require</span>(<span class="string">"../../middleware/user"</span>);</span><br><span class="line"><span class="keyword">const</span> pv = <span class="built_in">require</span>(<span class="string">"../../middleware/pv"</span>);</span><br><span class="line"><span class="keyword">const</span> category = <span class="built_in">require</span>(<span class="string">"../../middleware/category"</span>);</span><br><span class="line"><span class="keyword">const</span> article = <span class="built_in">require</span>(<span class="string">"../../middleware/article"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> indexApp = express();</span><br><span class="line"></span><br><span class="line">indexApp.get(</span><br><span class="line">  <span class="string">"/"</span>,</span><br><span class="line">  [user.lastLoginTime, pv.getTotal, category.getCount, article.getCount],</span><br><span class="line">  (req, res) =&gt; &#123;</span><br><span class="line">    <span class="keyword">let</span> &#123; user, lastLoginTime, pvTotal, categoryCount, articleCount &#125; = req;</span><br><span class="line">    res.render(<span class="string">"admin/index"</span>, &#123;</span><br><span class="line">      user,</span><br><span class="line">      lastLoginTime,</span><br><span class="line">      pvTotal,</span><br><span class="line">      categoryCount,</span><br><span class="line">      articleCount,</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = indexApp;</span><br></pre></td></tr></table></figure><p>修改 <code>views/admin/index.html</code> 文件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"card-deck"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"card text-center"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"card-header bg-success text-white"</span>&gt;</span>总访问量<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"card-body"</span>&gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">pvTotal</span> %&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"card text-center"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"card-header bg-info text-white"</span>&gt;</span>总博文数<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"card-body"</span>&gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">articleCount</span> %&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"card text-center"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"card-header bg-warning text-white"</span>&gt;</span>总类目数<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"card-body"</span>&gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">categoryCount</span> %&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@v3.3.1/butterfly/img/loading9.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/extheor/images/myblog/15.png" alt="" /></p><h2 id="博客后台-获取访问量趋势图数据"><a class="markdownIt-Anchor" href="#博客后台-获取访问量趋势图数据"></a> 博客后台 获取访问量趋势图数据</h2><p>在 <code>model/pv.js</code> 文件中新建获取全部记录的方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 获取全部记录</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">static</span> getAll() &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">let</span> sql = <span class="string">"SELECT time,hits FROM pv ORDER BY time ASC"</span>;</span><br><span class="line">      <span class="keyword">this</span>.query(sql)</span><br><span class="line">        .then(<span class="function">(<span class="params">results</span>) =&gt;</span> &#123;</span><br><span class="line">          resolve(results);</span><br><span class="line">        &#125;)</span><br><span class="line">        .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="built_in">console</span>.log(<span class="string">`获取全部记录失败：<span class="subst">$&#123;err.message&#125;</span>`</span>);</span><br><span class="line">          reject(err);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>在 <code>middleware/pv.js</code> 文件中新建获取全部记录的属性</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 获取全部记录</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  getAll: <span class="function">(<span class="params">req, res, next</span>) =&gt;</span> &#123;</span><br><span class="line">    Pv.getAll()</span><br><span class="line">      .then(<span class="function">(<span class="params">results</span>) =&gt;</span> &#123;</span><br><span class="line">        req.pvs = results;</span><br><span class="line">        next();</span><br><span class="line">      &#125;)</span><br><span class="line">      .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">        next(err);</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><p>在 <code>router/admin/index.js</code> 文件中新建访问量接口</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 访问量接口</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">indexApp.get(<span class="string">"/pvs"</span>, [pv.getAll], (req, res) =&gt; &#123;</span><br><span class="line">  <span class="keyword">let</span> &#123; pvs &#125; = req;</span><br><span class="line">  <span class="keyword">let</span> data = &#123;&#125;;</span><br><span class="line">  data.data = pvs;</span><br><span class="line">  data.start = pvs[<span class="number">0</span>].time;</span><br><span class="line">  data.end = pvs[pvs.length - <span class="number">1</span>].time;</span><br><span class="line">  res.json(data);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>把 <code>static/admin/js/public.js</code> 文件中的url改为 <code>/admin/index/pvs</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> url = <span class="string">"/admin/index/pvs"</span>;</span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@v3.3.1/butterfly/img/loading9.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/extheor/images/myblog/16.png" alt="" /></p><h2 id="博客后台-管理导航处理"><a class="markdownIt-Anchor" href="#博客后台-管理导航处理"></a> 博客后台 管理导航处理</h2><p>在 <code>views/admin</code> 目录下新建 <code>navs.html</code> 文件，是重复代码通用模板</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-2 bg-white border-right nav-left p-0"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row text-center mt-3 px-5"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"./article/add.html"</span> <span class="attr">class</span>=<span class="string">"btn btn-primary rounded-0 col"</span></span></span><br><span class="line"><span class="tag">      &gt;</span>发表博文<span class="tag">&lt;/<span class="name">a</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span></span></span><br><span class="line"><span class="tag">    <span class="attr">class</span>=<span class="string">"list-group list-group-flush border-top border-bottom mt-3 text-center"</span></span></span><br><span class="line"><span class="tag">  &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"list-group-item list-group-item-action active"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"./index.html"</span> <span class="attr">class</span>=<span class="string">"text-decoration-none text-secondary"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"iconfont icon-home pr-1"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>个人中心</span><br><span class="line">      <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"list-group-item list-group-item-action"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span></span></span><br><span class="line"><span class="tag">        <span class="attr">href</span>=<span class="string">"./article/index.html"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">class</span>=<span class="string">"text-decoration-none text-secondary"</span></span></span><br><span class="line"><span class="tag">      &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"iconfont icon-neirongguanli pr-1"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>文章管理</span><br><span class="line">      <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"list-group-item list-group-item-action"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span></span></span><br><span class="line"><span class="tag">        <span class="attr">href</span>=<span class="string">"./category/index.html"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">class</span>=<span class="string">"text-decoration-none text-secondary"</span></span></span><br><span class="line"><span class="tag">      &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"iconfont icon-leimuguanli pr-1"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>类目管理</span><br><span class="line">      <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"list-group-item list-group-item-action"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"./log/index.html"</span> <span class="attr">class</span>=<span class="string">"text-decoration-none text-secondary"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"iconfont icon-log pr-1"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>查看日志</span><br><span class="line">      <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"list-group-item list-group-item-action"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span></span></span><br><span class="line"><span class="tag">        <span class="attr">href</span>=<span class="string">"./account/index.html"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">class</span>=<span class="string">"text-decoration-none text-secondary"</span></span></span><br><span class="line"><span class="tag">      &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"iconfont icon-zhanghuguanli pr-1"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>账户管理</span><br><span class="line">      <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后按需替换即可</p><p>替换语法：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%-</span> <span class="attr">include</span>("<span class="attr">navs.html</span>") <span class="attr">-</span>%&gt;</span></span><br></pre></td></tr></table></figure><p>在 <code>router/admin</code> 目录下新建文件</p><p>category.js - 后台类目管理</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 后台类目管理</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">"express"</span>);</span><br><span class="line"><span class="keyword">const</span> categoryApp = express();</span><br><span class="line"></span><br><span class="line">categoryApp.get(<span class="string">"/"</span>, (req, res) =&gt; &#123;</span><br><span class="line">  res.render(<span class="string">"admin/category/index"</span>, &#123; <span class="attr">user</span>: req.user &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = categoryApp;</span><br></pre></td></tr></table></figure><p>article.js - 后台文章管理</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 后台文章管理</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">"express"</span>);</span><br><span class="line"><span class="keyword">const</span> articleApp = express();</span><br><span class="line"></span><br><span class="line">articleApp.get(<span class="string">"/"</span>, (req, res) =&gt; &#123;</span><br><span class="line">  res.render(<span class="string">"admin/article/index"</span>, &#123; <span class="attr">user</span>: req.user &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = articleApp;</span><br></pre></td></tr></table></figure><p>log.js - 后台日志管理</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 后台日志管理</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">"express"</span>);</span><br><span class="line"><span class="keyword">const</span> logApp = express();</span><br><span class="line"></span><br><span class="line">logApp.get(<span class="string">"/"</span>, (req, res) =&gt; &#123;</span><br><span class="line">  res.render(<span class="string">"admin/log/index"</span>, &#123; <span class="attr">user</span>: req.user &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = logApp;</span><br></pre></td></tr></table></figure><p>account.js - 后台账户管理</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 后台账户管理</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">"express"</span>);</span><br><span class="line"><span class="keyword">const</span> accountApp = express();</span><br><span class="line"></span><br><span class="line">accountApp.get(<span class="string">"/"</span>, (req, res) =&gt; &#123;</span><br><span class="line">  res.render(<span class="string">"admin/account/index"</span>, &#123; <span class="attr">user</span>: req.user &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = accountApp;</span><br></pre></td></tr></table></figure><p>在 <code>myblog/index.js</code>  中调用路由</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 调用后台文章管理</span></span><br><span class="line">app.use(<span class="string">"/admin/article"</span>, <span class="built_in">require</span>(<span class="string">"./router/admin/article"</span>));</span><br><span class="line"><span class="comment">// 调用后台类目管理</span></span><br><span class="line">app.use(<span class="string">"/admin/category"</span>, <span class="built_in">require</span>(<span class="string">"./router/admin/category"</span>));</span><br><span class="line"><span class="comment">// 调用后台日志管理</span></span><br><span class="line">app.use(<span class="string">"/admin/log"</span>, <span class="built_in">require</span>(<span class="string">"./router/admin/log"</span>));</span><br><span class="line"><span class="comment">// 调用后台账户管理</span></span><br><span class="line">app.use(<span class="string">"/admin/account"</span>, <span class="built_in">require</span>(<span class="string">"./router/admin/account"</span>));</span><br></pre></td></tr></table></figure><p>修改 <code>views/admin</code> 目录下的 <code>navs.html</code> 文件中的路由</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-2 bg-white border-right nav-left p-0"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row text-center mt-3 px-5"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"./article/add.html"</span> <span class="attr">class</span>=<span class="string">"btn btn-primary rounded-0 col"</span></span></span><br><span class="line"><span class="tag">      &gt;</span>发表博文<span class="tag">&lt;/<span class="name">a</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span></span></span><br><span class="line"><span class="tag">    <span class="attr">class</span>=<span class="string">"list-group list-group-flush border-top border-bottom mt-3 text-center"</span></span></span><br><span class="line"><span class="tag">  &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"list-group-item list-group-item-action"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/admin/"</span> <span class="attr">class</span>=<span class="string">"text-decoration-none text-secondary"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"iconfont icon-home pr-1"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>个人中心</span><br><span class="line">      <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"list-group-item list-group-item-action"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/admin/article/"</span> <span class="attr">class</span>=<span class="string">"text-decoration-none text-secondary"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"iconfont icon-neirongguanli pr-1"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>文章管理</span><br><span class="line">      <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"list-group-item list-group-item-action"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/admin/category/"</span> <span class="attr">class</span>=<span class="string">"text-decoration-none text-secondary"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"iconfont icon-leimuguanli pr-1"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>类目管理</span><br><span class="line">      <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"list-group-item list-group-item-action"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/admin/log/"</span> <span class="attr">class</span>=<span class="string">"text-decoration-none text-secondary"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"iconfont icon-log pr-1"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>查看日志</span><br><span class="line">      <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"list-group-item list-group-item-action"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/admin/account/"</span> <span class="attr">class</span>=<span class="string">"text-decoration-none text-secondary"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"iconfont icon-zhanghuguanli pr-1"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>账户管理</span><br><span class="line">      <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>最后在 <code>static/js/public.js</code> 中写个判断</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ($(<span class="string">".list-group-item"</span>).length) &#123;</span><br><span class="line">  <span class="keyword">let</span> href = location.pathname;</span><br><span class="line">  <span class="built_in">console</span>.log(href);</span><br><span class="line">  $(<span class="string">`.list-group-item a[href='<span class="subst">$&#123;href&#125;</span>']`</span>).parent().addClass(<span class="string">"active"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>开启服务，页面出现以下效果</p><p><img src= "https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@v3.3.1/butterfly/img/loading9.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/extheor/images/myblog/%E5%AF%BC%E8%88%AA%E5%8F%98%E8%89%B2.gif" alt="" /></p><h2 id="博客后台-文章列表显示"><a class="markdownIt-Anchor" href="#博客后台-文章列表显示"></a> 博客后台 文章列表显示</h2><p>在 <code>model/article.js</code> 文件中新建获取指定页文章列表的方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 获取指定页文章列表</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">static</span> getPage() &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">let</span> sql = <span class="string">"SELECT id,title,thumbnail,hot FROM article ORDER BY time DESC"</span>;</span><br><span class="line">      <span class="keyword">this</span>.query(sql)</span><br><span class="line">        .then(<span class="function">(<span class="params">results</span>) =&gt;</span> &#123;</span><br><span class="line">          resolve(results);</span><br><span class="line">        &#125;)</span><br><span class="line">        .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="built_in">console</span>.log(<span class="string">`获取指定页文章列表失败：<span class="subst">$&#123;err.message&#125;</span>`</span>);</span><br><span class="line">          reject(err);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>在 <code>middleware/article.js</code> 文件中新建获取指定页文章列表的属性</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 获取指定页的文章列表</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  getPage: <span class="function">(<span class="params">req, res, next</span>) =&gt;</span> &#123;</span><br><span class="line">    Article.getPage()</span><br><span class="line">      .then(<span class="function">(<span class="params">results</span>) =&gt;</span> &#123;</span><br><span class="line">        req.pageList = results;</span><br><span class="line">        next();</span><br><span class="line">      &#125;)</span><br><span class="line">      .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">        next(err);</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>在 <code>router/admin/article.js</code>  文件对pageList进行封装处理，为后面的分页操作打基础</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 后台文章管理</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">"express"</span>);</span><br><span class="line"><span class="keyword">const</span> article = <span class="built_in">require</span>(<span class="string">"../../middleware/article"</span>);</span><br><span class="line"><span class="keyword">const</span> articleApp = express();</span><br><span class="line"></span><br><span class="line">articleApp.get(<span class="string">"/"</span>, [article.getPage], (req, res) =&gt; &#123;</span><br><span class="line">  <span class="keyword">let</span> &#123; user, pageList &#125; = req;</span><br><span class="line">  <span class="keyword">let</span> page = &#123;&#125;;</span><br><span class="line">  page.list = pageList;</span><br><span class="line">  res.render(<span class="string">"admin/article/index"</span>, &#123; user, page &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = articleApp;</span><br></pre></td></tr></table></figure><p>对 <code>views/admin/article/index.html</code> 中的文件进行修改，用取得的数据库的数据重新渲染页面</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">%</span> <span class="attr">page.list.forEach</span>(<span class="attr">article</span> =&gt;</span> &#123; %&gt;</span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">article.id</span> %&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">article.title</span> %&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span> (<span class="attr">article.thumbnail</span>) &#123; %&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">i</span></span></span><br><span class="line"><span class="tag">                       <span class="attr">class</span>=<span class="string">"iconfont icon-photo"</span></span></span><br><span class="line"><span class="tag">                       <span class="attr">data-toggle</span>=<span class="string">"popover"</span></span></span><br><span class="line"><span class="tag">                       <span class="attr">data-content</span>=<span class="string">"&lt;img src='&lt;%= article.thumbnail %&gt;'&gt;"</span></span></span><br><span class="line"><span class="tag">                       &gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"custom-control custom-switch"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">class</span>=<span class="string">"custom-control-input"</span></span></span><br><span class="line">                                   id="hot1" &lt;%= article.hot?'checked':'' %&gt; /&gt;</span><br><span class="line">                            <span class="tag">&lt;<span class="name">label</span></span></span><br><span class="line"><span class="tag">                                   <span class="attr">class</span>=<span class="string">"custom-control-label"</span></span></span><br><span class="line"><span class="tag">                                   <span class="attr">for</span>=<span class="string">"hot1"</span></span></span><br><span class="line"><span class="tag">                                   &gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span></span></span><br><span class="line"><span class="tag">                           <span class="attr">href</span>=<span class="string">"./edit.html"</span></span></span><br><span class="line"><span class="tag">                           <span class="attr">class</span>=<span class="string">"text-primary"</span></span></span><br><span class="line"><span class="tag">                           <span class="attr">title</span>=<span class="string">"编辑"</span></span></span><br><span class="line"><span class="tag">                           &gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"iconfont icon-bianji"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>编辑<span class="tag">&lt;/<span class="name">a</span></span></span><br><span class="line"><span class="tag">                            &gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span></span></span><br><span class="line"><span class="tag">                           <span class="attr">href</span>=<span class="string">"#"</span></span></span><br><span class="line"><span class="tag">                           <span class="attr">onclick</span>=<span class="string">"return confirm('确定删除？')"</span></span></span><br><span class="line"><span class="tag">                           <span class="attr">class</span>=<span class="string">"text-danger"</span></span></span><br><span class="line"><span class="tag">                           <span class="attr">title</span>=<span class="string">"删除"</span></span></span><br><span class="line"><span class="tag">                           &gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"iconfont icon-delete"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span></span></span><br><span class="line"><span class="tag">                            &gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">%</span> &#125;) %&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br></pre></td></tr></table></figure><p>启动服务，呈现以下效果</p><p><img src= "https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@v3.3.1/butterfly/img/loading9.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/extheor/images/myblog/17.png" alt="" /></p><h2 id="博客后台-文章列表分页"><a class="markdownIt-Anchor" href="#博客后台-文章列表分页"></a> 博客后台 文章列表分页</h2><p>在 <code>router/admin/article.js</code> 文件中对articleCount等的封装</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 后台文章管理</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">"express"</span>);</span><br><span class="line"><span class="keyword">const</span> article = <span class="built_in">require</span>(<span class="string">"../../middleware/article"</span>);</span><br><span class="line"><span class="keyword">const</span> articleApp = express();</span><br><span class="line"></span><br><span class="line">articleApp.get(<span class="string">"/"</span>, [article.getPage, article.getCount], (req, res) =&gt; &#123;</span><br><span class="line">  <span class="keyword">let</span> &#123; user, pageList, articleCount &#125; = req;</span><br><span class="line">  <span class="keyword">let</span> size = <span class="number">5</span>; <span class="comment">// 每页显示5条</span></span><br><span class="line">  <span class="keyword">let</span> page = &#123;&#125;;</span><br><span class="line">  page.count = articleCount; <span class="comment">// 总页数</span></span><br><span class="line">  page.total = <span class="built_in">Math</span>.ceil(page.count / size); <span class="comment">// 最大页数</span></span><br><span class="line">  page.list = pageList;</span><br><span class="line">  page.p = req.query.p ? req.query.p : <span class="number">1</span>; <span class="comment">// 页数</span></span><br><span class="line">  page.p = page.p &gt; page.total ? page.total : page.p;</span><br><span class="line">  page.p = page.p &lt; <span class="number">1</span> ? <span class="number">1</span> : page.p;</span><br><span class="line">  res.render(<span class="string">"admin/article/index"</span>, &#123; user, page &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = articleApp;</span><br></pre></td></tr></table></figure><p>修改 <code>views/admin/index.html</code> 文件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"align-self-center"</span>&gt;</span></span><br><span class="line">  共 <span class="tag">&lt;<span class="name">%=</span> <span class="attr">page.count</span> %&gt;</span> 条 / 共 <span class="tag">&lt;<span class="name">%=</span> <span class="attr">page.total</span> %&gt;</span> 页 / 第 <span class="tag">&lt;<span class="name">%=page.p</span> %&gt;</span> 页</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>开启服务，浏览器访问http://127.0.0.1:3000/admin/article?p=7，页面显示以下效果</p><p><img src= "https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@v3.3.1/butterfly/img/loading9.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/extheor/images/myblog/18.png" alt="" /></p><p>在 <code>model/article.js</code> 文件中新建获取指定页文章列表的方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 获取指定页文章列表</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param <span class="type">&#123;integer&#125;</span> </span>start 起始索引</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param <span class="type">&#123;integer&#125;</span> </span>size 查询条目数</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">static</span> getPage(start, size) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">let</span> sql =</span><br><span class="line">        <span class="string">"SELECT id,title,thumbnail,hot FROM article ORDER BY time DESC LIMIT ?,?"</span>;</span><br><span class="line">      <span class="keyword">this</span>.query(sql, [start, size])</span><br><span class="line">        .then(<span class="function">(<span class="params">results</span>) =&gt;</span> &#123;</span><br><span class="line">          resolve(results);</span><br><span class="line">        &#125;)</span><br><span class="line">        .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="built_in">console</span>.log(<span class="string">`获取指定页文章列表失败：<span class="subst">$&#123;err.message&#125;</span>`</span>);</span><br><span class="line">          reject(err);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>给 <code>middleware/article.js</code> 文件中的getPage属性传上刚加上的参数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 获取指定页的文章列表</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  getPage: <span class="function">(<span class="params">req, res, next</span>) =&gt;</span> &#123;</span><br><span class="line">    Article.getPage(res.start, res.size)</span><br><span class="line">      .then(<span class="function">(<span class="params">results</span>) =&gt;</span> &#123;</span><br><span class="line">        req.pageList = results;</span><br><span class="line">        next();</span><br><span class="line">      &#125;)</span><br><span class="line">      .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">        next(err);</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><p>对 <code>router/admin/article.js</code> 文件进行修改 - 异步操作</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 后台文章管理</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">"express"</span>);</span><br><span class="line"><span class="keyword">const</span> article = <span class="built_in">require</span>(<span class="string">"../../middleware/article"</span>);</span><br><span class="line"><span class="keyword">const</span> articleApp = express();</span><br><span class="line"></span><br><span class="line">articleApp.get(</span><br><span class="line">  <span class="string">"/"</span>,</span><br><span class="line">  [article.getCount],</span><br><span class="line">  (req, res, next) =&gt; &#123;</span><br><span class="line">    <span class="keyword">let</span> &#123; articleCount &#125; = req;</span><br><span class="line">    <span class="keyword">let</span> size = <span class="number">5</span>; <span class="comment">// 每页显示5条</span></span><br><span class="line">    req.page = &#123;&#125;;</span><br><span class="line">    req.page.count = articleCount; <span class="comment">// 总页数</span></span><br><span class="line">    req.page.total = <span class="built_in">Math</span>.ceil(req.page.count / size); <span class="comment">// 最大页数</span></span><br><span class="line">    req.page.p = req.query.p ? req.query.p : <span class="number">1</span>; <span class="comment">// 页数</span></span><br><span class="line">    req.page.p = req.page.p &gt; req.page.total ? req.page.total : req.page.p;</span><br><span class="line">    req.page.p = req.page.p &lt; <span class="number">1</span> ? <span class="number">1</span> : req.page.p;</span><br><span class="line"></span><br><span class="line">    res.start = (req.page.p - <span class="number">1</span>) * size;</span><br><span class="line">    res.size = size;</span><br><span class="line"></span><br><span class="line">    next();</span><br><span class="line">  &#125;,</span><br><span class="line">  [article.getPage],</span><br><span class="line">  (req, res) =&gt; &#123;</span><br><span class="line">    <span class="keyword">let</span> &#123; user, pageList, page &#125; = req;</span><br><span class="line">    page.list = pageList;</span><br><span class="line">    res.render(<span class="string">"admin/article/index"</span>, &#123; user, page &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = articleApp;</span><br></pre></td></tr></table></figure><p>修改 <code>views/admin/article/index.html</code> 文件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">nav</span></span></span><br><span class="line"><span class="tag">     <span class="attr">class</span>=<span class="string">"d-flex justify-content-between border-top pt-3 px-3"</span></span></span><br><span class="line"><span class="tag">     &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"align-self-center"</span>&gt;</span></span><br><span class="line">        共 <span class="tag">&lt;<span class="name">%=</span> <span class="attr">page.count</span> %&gt;</span> 条 / 共 <span class="tag">&lt;<span class="name">%=</span> <span class="attr">page.total</span> %&gt;</span> 页 / 第 <span class="tag">&lt;<span class="name">%=</span></span></span><br><span class="line"><span class="tag">                                                             <span class="attr">page.p</span> %&gt;</span> 页</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"pagination mb-0"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span> (<span class="attr">page.p</span>!=<span class="string">1)</span> &#123; %&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"page-item"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span></span></span><br><span class="line"><span class="tag">                       <span class="attr">class</span>=<span class="string">"page-link"</span></span></span><br><span class="line"><span class="tag">                       <span class="attr">href</span>=<span class="string">"/admin/article?p=&lt;%= page.p-1 %&gt;"</span></span></span><br><span class="line"><span class="tag">                       &gt;</span>上一页<span class="tag">&lt;/<span class="name">a</span></span></span><br><span class="line"><span class="tag">                        &gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                &lt;% &#125; %&gt; &lt;% for( let index = 1; index &lt;= page.total;</span><br><span class="line">                    index++ ) &#123; %&gt;</span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"page-item"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span></span></span><br><span class="line"><span class="tag">                           <span class="attr">class</span>=<span class="string">"page-link"</span></span></span><br><span class="line"><span class="tag">                           <span class="attr">href</span>=<span class="string">"/admin/article?p=&lt;%= index %&gt;"</span></span></span><br><span class="line"><span class="tag">                           &gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">index</span> %&gt;</span><span class="tag">&lt;/<span class="name">a</span></span></span><br><span class="line"><span class="tag">                            &gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span> <span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span> (<span class="attr">page.p</span>!=<span class="string">page.total)</span> &#123; %&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"page-item"</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">a</span></span></span><br><span class="line"><span class="tag">                                   <span class="attr">class</span>=<span class="string">"page-link"</span></span></span><br><span class="line"><span class="tag">                                   <span class="attr">href</span>=<span class="string">"/admin/article?p=&lt;%= page.p+1 %&gt;"</span></span></span><br><span class="line"><span class="tag">                                   &gt;</span>下一页<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br></pre></td></tr></table></figure><p>启动服务，如下效果</p><p><img src= "https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@v3.3.1/butterfly/img/loading9.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/extheor/images/myblog/%E5%88%86%E9%A1%B5.gif" alt="" /></p><h2 id="博客后台-文章列表分页查询"><a class="markdownIt-Anchor" href="#博客后台-文章列表分页查询"></a> 博客后台 文章列表分页查询</h2><p>在 <code>router/admin/article.js</code> 文件中新增类目列表数据</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 后台文章管理</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">"express"</span>);</span><br><span class="line"><span class="keyword">const</span> article = <span class="built_in">require</span>(<span class="string">"../../middleware/article"</span>);</span><br><span class="line"><span class="keyword">const</span> category = <span class="built_in">require</span>(<span class="string">"../../middleware/category"</span>);</span><br><span class="line"><span class="keyword">const</span> articleApp = express();</span><br><span class="line"></span><br><span class="line">articleApp.get(</span><br><span class="line">  <span class="string">"/"</span>,</span><br><span class="line">  [article.getCount],</span><br><span class="line">  (req, res, next) =&gt; &#123;</span><br><span class="line">    <span class="keyword">let</span> &#123; articleCount &#125; = req;</span><br><span class="line">    <span class="keyword">let</span> size = <span class="number">5</span>; <span class="comment">// 每页显示5条</span></span><br><span class="line">    req.page = &#123;&#125;;</span><br><span class="line">    req.page.count = articleCount; <span class="comment">// 总页数</span></span><br><span class="line">    req.page.total = <span class="built_in">Math</span>.ceil(req.page.count / size); <span class="comment">// 最大页数</span></span><br><span class="line">    req.page.p = req.query.p ? req.query.p : <span class="number">1</span>; <span class="comment">// 页数</span></span><br><span class="line">    req.page.p = req.page.p &gt; req.page.total ? req.page.total : req.page.p;</span><br><span class="line">    req.page.p = req.page.p &lt; <span class="number">1</span> ? <span class="number">1</span> : req.page.p;</span><br><span class="line"></span><br><span class="line">    res.start = (req.page.p - <span class="number">1</span>) * size;</span><br><span class="line">    res.size = size;</span><br><span class="line"></span><br><span class="line">    next();</span><br><span class="line">  &#125;,</span><br><span class="line">  [article.getPage, category.getList],</span><br><span class="line">  (req, res) =&gt; &#123;</span><br><span class="line">    <span class="keyword">let</span> &#123; user, pageList, page, categories &#125; = req;</span><br><span class="line">    page.list = pageList;</span><br><span class="line">    res.render(<span class="string">"admin/article/index"</span>, &#123; user, page, categories &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = articleApp;</span><br></pre></td></tr></table></figure><p>修改 <code>views/admin/article/index.html</code> 文件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span></span></span><br><span class="line"><span class="tag">      <span class="attr">action</span>=<span class="string">"/admin/article"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">class</span>=<span class="string">"form-inline mb-3"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">method</span>=<span class="string">"get"</span></span></span><br><span class="line"><span class="tag">      &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"p"</span> <span class="attr">value</span>=<span class="string">"&lt;%= page.p %&gt;"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"category"</span>&gt;</span>类目：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">select</span></span></span><br><span class="line"><span class="tag">                <span class="attr">name</span>=<span class="string">"category"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">id</span>=<span class="string">"category"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">class</span>=<span class="string">"form-control-sm"</span></span></span><br><span class="line"><span class="tag">                &gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"-1"</span>&gt;</span>全部<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">%</span> <span class="attr">categories.forEach</span>(<span class="attr">category</span> =&gt;</span> &#123; %&gt;</span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"&lt;%= category.id %&gt;"</span></span></span><br><span class="line"><span class="tag">                        &gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">category.name</span> %&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">%</span> &#125;) %&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group ml-3"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"hot"</span>&gt;</span>热门：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"hot"</span> <span class="attr">id</span>=<span class="string">"hot"</span> <span class="attr">class</span>=<span class="string">"form-control-sm"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"-1"</span>&gt;</span>全部<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"1"</span>&gt;</span>热门<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"0"</span>&gt;</span>非热门<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"from-group ml-3"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span></span></span><br><span class="line"><span class="tag">                       <span class="attr">type</span>=<span class="string">"submit"</span></span></span><br><span class="line"><span class="tag">                       <span class="attr">value</span>=<span class="string">"筛选"</span></span></span><br><span class="line"><span class="tag">                       <span class="attr">class</span>=<span class="string">"btn btn-primary btn-sm"</span></span></span><br><span class="line"><span class="tag">                       /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group ml-auto"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"./add.html"</span> <span class="attr">class</span>=<span class="string">"btn btn-danger btn-sm"</span></span></span><br><span class="line"><span class="tag">                   &gt;</span>发表博文<span class="tag">&lt;/<span class="name">a</span></span></span><br><span class="line"><span class="tag">                    &gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p>修改 <code>model/article.js</code> 文件，附带两个参数category_id, hot</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 总博文数</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">static</span> getCount(category_id, hot) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">let</span> sql = <span class="string">"SELECT COUNT(1) AS count FROM article WHERE 1=1"</span>;</span><br><span class="line">      sql +=</span><br><span class="line">        category_id != <span class="number">-1</span> &amp;&amp; category_id</span><br><span class="line">          ? <span class="string">` AND category_id=<span class="subst">$&#123;category_id&#125;</span>`</span></span><br><span class="line">          : <span class="string">""</span>;</span><br><span class="line">      sql += hot != <span class="number">-1</span> &amp;&amp; hot ? <span class="string">` AND hot=<span class="subst">$&#123;hot&#125;</span>`</span> : <span class="string">""</span>;</span><br><span class="line">      <span class="keyword">this</span>.query(sql)</span><br><span class="line">        .then(<span class="function">(<span class="params">results</span>) =&gt;</span> &#123;</span><br><span class="line">          resolve(results[<span class="number">0</span>].count);</span><br><span class="line">        &#125;)</span><br><span class="line">        .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="built_in">console</span>.log(<span class="string">`获取总博文数失败：<span class="subst">$&#123;err.message&#125;</span>`</span>);</span><br><span class="line">          reject(err);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 获取指定页文章列表</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param <span class="type">&#123;integer&#125;</span> </span>start 起始索引</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param <span class="type">&#123;integer&#125;</span> </span>size 查询条目数</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">static</span> getPage(start, size, category_id, hot) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">let</span> sql = <span class="string">"SELECT id,title,thumbnail,hot FROM article WHERE 1=1"</span>;</span><br><span class="line"></span><br><span class="line">      sql +=</span><br><span class="line">        category_id != <span class="number">-1</span> &amp;&amp; category_id</span><br><span class="line">          ? <span class="string">` AND category_id=<span class="subst">$&#123;category_id&#125;</span>`</span></span><br><span class="line">          : <span class="string">""</span>;</span><br><span class="line">      sql += hot != <span class="number">-1</span> &amp;&amp; hot ? <span class="string">` AND hot=<span class="subst">$&#123;hot&#125;</span>`</span> : <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">      sql += <span class="string">" ORDER BY time DESC LIMIT ?,?"</span>;</span><br><span class="line">      <span class="keyword">this</span>.query(sql, [start, size])</span><br><span class="line">        .then(<span class="function">(<span class="params">results</span>) =&gt;</span> &#123;</span><br><span class="line">          resolve(results);</span><br><span class="line">        &#125;)</span><br><span class="line">        .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="built_in">console</span>.log(<span class="string">`获取指定页文章列表失败：<span class="subst">$&#123;err.message&#125;</span>`</span>);</span><br><span class="line">          reject(err);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>再修改 <code>middleware/article.js</code> 文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 获取总博文数</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  getCount: <span class="function">(<span class="params">req, res, next</span>) =&gt;</span> &#123;</span><br><span class="line">    Article.getCount(req.query.category_id, req.query.hot)</span><br><span class="line">      .then(<span class="function">(<span class="params">results</span>) =&gt;</span> &#123;</span><br><span class="line">        req.articleCount = results;</span><br><span class="line">        next();</span><br><span class="line">      &#125;)</span><br><span class="line">      .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">        next(err);</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 获取指定页的文章列表</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  getPage: <span class="function">(<span class="params">req, res, next</span>) =&gt;</span> &#123;</span><br><span class="line">    Article.getPage(res.start, res.size, req.query.category_id, req.query.hot)</span><br><span class="line">      .then(<span class="function">(<span class="params">results</span>) =&gt;</span> &#123;</span><br><span class="line">        req.pageList = results;</span><br><span class="line">        next();</span><br><span class="line">      &#125;)</span><br><span class="line">      .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">        next(err);</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><p>再到路由中进行修改 <code>router/admin/article.js</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 后台文章管理</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">"express"</span>);</span><br><span class="line"><span class="keyword">const</span> article = <span class="built_in">require</span>(<span class="string">"../../middleware/article"</span>);</span><br><span class="line"><span class="keyword">const</span> category = <span class="built_in">require</span>(<span class="string">"../../middleware/category"</span>);</span><br><span class="line"><span class="keyword">const</span> articleApp = express();</span><br><span class="line"></span><br><span class="line">articleApp.get(</span><br><span class="line">  <span class="string">"/"</span>,</span><br><span class="line">  [article.getCount],</span><br><span class="line">  (req, res, next) =&gt; &#123;</span><br><span class="line">    <span class="keyword">let</span> &#123; articleCount &#125; = req;</span><br><span class="line">    <span class="keyword">let</span> size = <span class="number">3</span>; <span class="comment">// 每页显示5条</span></span><br><span class="line">    req.page = &#123;&#125;;</span><br><span class="line">    req.page.count = articleCount; <span class="comment">// 总页数</span></span><br><span class="line">    req.page.total = <span class="built_in">Math</span>.ceil(req.page.count / size); <span class="comment">// 最大页数</span></span><br><span class="line">    req.page.p = req.query.p ? req.query.p : <span class="number">1</span>; <span class="comment">// 页数</span></span><br><span class="line">    req.page.p = req.page.p &gt; req.page.total ? req.page.total : req.page.p;</span><br><span class="line">    req.page.p = req.page.p &lt; <span class="number">1</span> ? <span class="number">1</span> : req.page.p;</span><br><span class="line"></span><br><span class="line">    res.start = (req.page.p - <span class="number">1</span>) * size;</span><br><span class="line">    res.size = size;</span><br><span class="line"></span><br><span class="line">    next();</span><br><span class="line">  &#125;,</span><br><span class="line">  [article.getPage, category.getList],</span><br><span class="line">  (req, res) =&gt; &#123;</span><br><span class="line">    <span class="keyword">let</span> &#123; user, pageList, page, categories &#125; = req;</span><br><span class="line">    <span class="keyword">let</span> &#123; category_id, hot &#125; = req.query;</span><br><span class="line"></span><br><span class="line">    page.list = pageList;</span><br><span class="line">    res.render(<span class="string">"admin/article/index"</span>, &#123;</span><br><span class="line">      user,</span><br><span class="line">      page,</span><br><span class="line">      categories,</span><br><span class="line">      category_id,</span><br><span class="line">      hot,</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = articleApp;</span><br></pre></td></tr></table></figure><p>修改 <code>views/admin/article/index.html</code> 文件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"pagination mb-0"</span>&gt;</span></span><br><span class="line">                      <span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span> (<span class="attr">page.p</span>!=<span class="string">1)</span> &#123; %&gt;</span></span><br><span class="line">                      <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"page-item"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span></span></span><br><span class="line"><span class="tag">                          <span class="attr">class</span>=<span class="string">"page-link"</span></span></span><br><span class="line"><span class="tag">                          <span class="attr">href</span>=<span class="string">"/admin/article?p=&lt;%= page.p-1 %&gt;&amp;category_id=&lt;%= category_id %&gt;&amp;hot=&lt;%= hot %&gt;"</span></span></span><br><span class="line"><span class="tag">                          &gt;</span>上一页<span class="tag">&lt;/<span class="name">a</span></span></span><br><span class="line"><span class="tag">                        &gt;</span></span><br><span class="line">                      <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                      &lt;% &#125; %&gt; &lt;% for( let index = 1; index &lt;= page.total;</span><br><span class="line">                      index++ ) &#123; %&gt;</span><br><span class="line">                      <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"page-item"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span></span></span><br><span class="line"><span class="tag">                          <span class="attr">class</span>=<span class="string">"page-link"</span></span></span><br><span class="line"><span class="tag">                          <span class="attr">href</span>=<span class="string">"/admin/article?p=&lt;%= index %&gt;&amp;category_id=&lt;%= category_id %&gt;&amp;hot=&lt;%= hot %&gt;"</span></span></span><br><span class="line"><span class="tag">                          &gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">index</span> %&gt;</span><span class="tag">&lt;/<span class="name">a</span></span></span><br><span class="line"><span class="tag">                        &gt;</span></span><br><span class="line">                      <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                      <span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span> <span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span> (<span class="attr">page.p</span>!=<span class="string">page.total)</span> &#123; %&gt;</span></span><br><span class="line">                      <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"page-item"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span></span></span><br><span class="line"><span class="tag">                          <span class="attr">class</span>=<span class="string">"page-link"</span></span></span><br><span class="line"><span class="tag">                          <span class="attr">href</span>=<span class="string">"/admin/article?p=&lt;%= page.p+1 %&gt;&amp;category_id=&lt;%= category_id %&gt;&amp;hot=&lt;%= hot %&gt;"</span></span></span><br><span class="line"><span class="tag">                          &gt;</span>下一页<span class="tag">&lt;/<span class="name">a</span></span></span><br><span class="line"><span class="tag">                        &gt;</span></span><br><span class="line">                      <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                      <span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src= "https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@v3.3.1/butterfly/img/loading9.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/extheor/images/myblog/19.png" alt="" /></p><h2 id="博客后台-文章列表-热门推荐"><a class="markdownIt-Anchor" href="#博客后台-文章列表-热门推荐"></a> 博客后台 文章列表-热门推荐</h2><p>首先在 <code>model/article.js</code> 文件中设置热门方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 设置热门</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param <span class="type">&#123;integer&#125;</span> </span>id 文章编号</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param <span class="type">&#123;integer&#125;</span> </span>hot 热门状态</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">static</span> setHot(id, hot) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">let</span> sql = <span class="string">"UPDATE article SET hot = ? WHERE id = ?"</span>;</span><br><span class="line">      <span class="keyword">this</span>.query(sql, [hot, id])</span><br><span class="line">        .then(<span class="function">(<span class="params">results</span>) =&gt;</span> &#123;</span><br><span class="line">          resolve(results.affectedRows);</span><br><span class="line">        &#125;)</span><br><span class="line">        .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="built_in">console</span>.log(<span class="string">`设置热门失败：<span class="subst">$&#123;err.message&#125;</span>`</span>);</span><br><span class="line">          reject(err);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>然后再 <code>middleware/article.js</code> 文件中设置热门推荐属性</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 设置热门推荐</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  setHot: <span class="function">(<span class="params">req, res, next</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> &#123; id, hot &#125; = req.query;</span><br><span class="line">    Article.setHot(id, hot)</span><br><span class="line">      .then(<span class="function">(<span class="params">results</span>) =&gt;</span> &#123;</span><br><span class="line">        req.affectedRows = results;</span><br><span class="line">        next();</span><br><span class="line">      &#125;)</span><br><span class="line">      .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">        next(err);</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><p>在 <code>router/admin/article.js</code> 文件中设置热门推荐路由</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">articleApp.get(<span class="string">"/sethot"</span>, article.setHot, (req, res) =&gt; &#123;</span><br><span class="line">  <span class="comment">// 如果受影响的行数大于0，说明数据库更新成功，否则失败</span></span><br><span class="line">  <span class="keyword">if</span> (req.affectedRows &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    res.json(&#123; <span class="attr">code</span>: <span class="number">1</span>, <span class="attr">msg</span>: <span class="string">"设置成功"</span> &#125;);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    res.json(&#123; <span class="attr">code</span>: <span class="number">0</span>, <span class="attr">msg</span>: <span class="string">"设置失败"</span> &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>在 <code>views/admin/article/index.html</code> 文件中进行修改</p><p>首先是页面部分</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"custom-control custom-switch"</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">class</span>=<span class="string">"custom-control-input"</span> <span class="attr">value</span>=<span class="string">"&lt;%= article.id %&gt;"</span></span></span><br><span class="line"> id="hot&lt;%= article.id %&gt;" &lt;%= article.hot?'checked':'' %&gt; onchange="sethot(this.value,this.checked)" /&gt;</span><br><span class="line">                            </span><br><span class="line"> <span class="tag">&lt;<span class="name">label</span></span></span><br><span class="line"><span class="tag">   <span class="attr">class</span>=<span class="string">"custom-control-label"</span></span></span><br><span class="line"><span class="tag">   <span class="attr">for</span>=<span class="string">"hot&lt;%= article.id %&gt;"</span></span></span><br><span class="line"><span class="tag">   &gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>其次是JavaScript脚本部分</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sethot</span>(<span class="params">id,hot</span>)</span>&#123;</span><br><span class="line">    $.<span class="keyword">get</span>("/admin/article/sethot",&#123;id,<span class="attr">hot</span>:hot?<span class="number">1</span>:<span class="number">0</span>&#125;,<span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(res.code==<span class="number">1</span>)&#123;</span><br><span class="line">            showToasts(<span class="string">"成功"</span>,<span class="string">"设置热门成功"</span>)</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            showToasts(<span class="string">"失败"</span>,<span class="string">"设置热门失败"</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>启动服务，即可完成页面点击热门推荐按钮对数据库的hot进行修改</p><h2 id="博客后台-添加博文-页面显示"><a class="markdownIt-Anchor" href="#博客后台-添加博文-页面显示"></a> 博客后台 添加博文-页面显示</h2><p>在 <code>router/admin/article.js</code> 文件中新增显示添加博文的方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 显示添加博文页</span></span><br><span class="line">articleApp.get(<span class="string">"/add"</span>, [category.getList], (req, res) =&gt; &#123;</span><br><span class="line">  <span class="keyword">let</span> &#123; user, categories &#125; = req;</span><br><span class="line">  res.render(<span class="string">"admin/article/add"</span>, &#123; user, categories &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="博客后台-图片上传"><a class="markdownIt-Anchor" href="#博客后台-图片上传"></a> 博客后台 图片上传</h2><p>安装multer</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i multer</span><br></pre></td></tr></table></figure><p>在 <code>myblog/index.js</code> 文件中引入multer</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> multer = <span class="built_in">require</span>(<span class="string">"multer"</span>);</span><br></pre></td></tr></table></figure><p>上传配置</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 上传配置</span></span><br><span class="line"><span class="keyword">const</span> upload = multer(&#123;</span><br><span class="line">  dest: <span class="string">"./static/upload"</span>, <span class="comment">// 上传文件的存储目录</span></span><br><span class="line">  limits: &#123;</span><br><span class="line">    fileSize: <span class="number">1024</span> * <span class="number">1024</span> * <span class="number">2</span>, <span class="comment">// 单个文件大小限制在2M</span></span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>上传操作</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">"fs"</span>);</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">"path"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 上传操作</span></span><br><span class="line">app.post(<span class="string">"/admin/*"</span>, upload.single(<span class="string">"upload"</span>), (req, res, next) =&gt; &#123;</span><br><span class="line">  <span class="comment">// 上传成功后的文件对象</span></span><br><span class="line">  <span class="keyword">let</span> &#123; file &#125; = req;</span><br><span class="line">  <span class="keyword">if</span> (file) &#123;</span><br><span class="line">    <span class="comment">// file.originalname ==&gt; 文件的原名称</span></span><br><span class="line">    <span class="keyword">let</span> extname = path.extname(file.originalname);</span><br><span class="line">    <span class="comment">// file.path ==&gt; 上传后的文件路径</span></span><br><span class="line">    fs.renameSync(file.path, file.path + extname);</span><br><span class="line">    <span class="comment">// file.filename ==&gt; 上传后的文件名</span></span><br><span class="line">    req.uploadUrl = <span class="string">"/upload/"</span> + file.filename + extname;</span><br><span class="line">  &#125;</span><br><span class="line">  next();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>在 <code>router/admin/article.js</code> 文件中新增上传图片的路由</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ckeditor 上传</span></span><br><span class="line">articleApp.post(<span class="string">"/ckeditor"</span>, (req, res) =&gt; &#123;</span><br><span class="line">  <span class="keyword">if</span> (req.uploadUrl) &#123;</span><br><span class="line">    res.json(&#123;</span><br><span class="line">      uploaded: <span class="literal">true</span>,</span><br><span class="line">      url: req.uploadUrl,</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    res.json(&#123;</span><br><span class="line">      uploaded: <span class="literal">false</span>,</span><br><span class="line">      err: &#123; <span class="attr">message</span>: <span class="string">"上传失败"</span> &#125;,</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>完成如下效果</p><p><img src= "https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@v3.3.1/butterfly/img/loading9.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/extheor/images/myblog/%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87.gif" alt="" /></p><h2 id="博客后台添加博文-数据库写入"><a class="markdownIt-Anchor" href="#博客后台添加博文-数据库写入"></a> 博客后台添加博文-数据库写入</h2><p>在 <code>model.article.js</code> 中新增添加文章方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 添加文章</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param <span class="type">&#123;Object&#125;</span> </span>article 文章对象</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">static</span> add(article) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">let</span> sql = <span class="string">"INSERT INTO article SET ?"</span>;</span><br><span class="line">      <span class="keyword">this</span>.query(sql, article)</span><br><span class="line">        .then(<span class="function">(<span class="params">results</span>) =&gt;</span> &#123;</span><br><span class="line">          resolve(results.insertId);</span><br><span class="line">        &#125;)</span><br><span class="line">        .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="built_in">console</span>.log(<span class="string">`添加文章失败：<span class="subst">$&#123;err.message&#125;</span>`</span>);</span><br><span class="line">          reject(err);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>在 <code>middleware/article.js</code> 文件中新增添加文章的属性</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 添加文章</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  add: <span class="function">(<span class="params">req, res, next</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> &#123; title, content, hot, category_id &#125; = req.body;</span><br><span class="line">    <span class="keyword">let</span> article = &#123;</span><br><span class="line">      title,</span><br><span class="line">      content,</span><br><span class="line">      hot: hot ? <span class="number">1</span> : <span class="number">0</span>,</span><br><span class="line">      category_id: category_id,</span><br><span class="line">      thumbnail: req.uploadUrl ? req.uploadUrl : <span class="literal">null</span>,</span><br><span class="line">    &#125;;</span><br><span class="line">    Article.add(article)</span><br><span class="line">      .then(<span class="function">(<span class="params">results</span>) =&gt;</span> &#123;</span><br><span class="line">        req.insertId = results;</span><br><span class="line">        next();</span><br><span class="line">      &#125;)</span><br><span class="line">      .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">        next(err);</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><p>在 <code>router/admin/article.js</code> 文件中新增添加文章的路由</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 添加文章</span></span><br><span class="line">articleApp.post(<span class="string">"/add"</span>, [article.add, category.getList], (req, res) =&gt; &#123;</span><br><span class="line">  <span class="keyword">let</span> &#123; user, categories &#125; = req;</span><br><span class="line">  <span class="keyword">if</span> (req.insertId) &#123;</span><br><span class="line">    res.render(<span class="string">"admin/article/add"</span>, &#123; user, categories, <span class="attr">code</span>: <span class="number">1</span> &#125;);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    res.render(<span class="string">"admin/article/add"</span>, &#123; user, categories, <span class="attr">code</span>: <span class="number">2</span> &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>启动服务，上传文章到数据库</p><h2 id="博客后台-删除博文"><a class="markdownIt-Anchor" href="#博客后台-删除博文"></a> 博客后台 删除博文</h2><p>在 <code>model/article.js</code> 文件中新增删除文章的方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 删除文章</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;integer&#125;</span> </span>id 文章编号</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">static</span> del(id) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> sql = <span class="string">"DELETE FROM article WHERE id = ?"</span>;</span><br><span class="line">    <span class="keyword">this</span>.query(sql, id)</span><br><span class="line">      .then(<span class="function">(<span class="params">results</span>) =&gt;</span> &#123;</span><br><span class="line">        resolve(results.affectedRows);</span><br><span class="line">      &#125;)</span><br><span class="line">      .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">`删除文章失败：<span class="subst">$&#123;err.message&#125;</span>`</span>);</span><br><span class="line">        reject(err);</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 <code>middleware/article.js</code> 文件中新增删除文章的属性</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 删除文章</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">del: <span class="function">(<span class="params">req, res, next</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> &#123; id &#125; = req.query;</span><br><span class="line">  Article.del(id)</span><br><span class="line">    .then(<span class="function">(<span class="params">results</span>) =&gt;</span> &#123;</span><br><span class="line">      req.affectedRows = results;</span><br><span class="line">      next();</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">      next(err);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>在 <code>router/admin/article.js</code> 文件中新增删除文章的路由</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 删除文章</span></span><br><span class="line">articleApp.get(<span class="string">"/del"</span>, article.del, (req, res) =&gt; &#123;</span><br><span class="line">  <span class="keyword">if</span> (req.affectedRows &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    res.json(&#123; <span class="attr">code</span>: <span class="number">1</span>, <span class="attr">msg</span>: <span class="string">"删除成功"</span> &#125;);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    res.json(&#123; <span class="attr">code</span>: <span class="number">2</span>, <span class="attr">msg</span>: <span class="string">"删除失败"</span> &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>修改 <code>views/admin/article/index.html</code>  文件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">onclick</span>=<span class="string">"del(&lt;%=article.id%&gt;)"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">class</span>=<span class="string">"btn btn-link text-danger"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">title</span>=<span class="string">"删除"</span></span></span><br><span class="line"><span class="tag">        &gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"iconfont icon-delete"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">button</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">del</span>(<span class="params">id</span>)</span>&#123;</span><br><span class="line">    $.getJSON(<span class="string">"/admin/article/del"</span>,&#123;id&#125;,<span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(res.code==<span class="number">1</span>)&#123;</span><br><span class="line">            showToasts(<span class="string">"成功"</span>,<span class="string">"删除成功"</span>)</span><br><span class="line">            <span class="comment">// 重新加载页面</span></span><br><span class="line">            setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                location.reload()</span><br><span class="line">            &#125;,<span class="number">2000</span>)</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            showToasts(<span class="string">"失败"</span>,<span class="string">"删除失败"</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>启动服务，删除文章删除成功</p><p><img src= "https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@v3.3.1/butterfly/img/loading9.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/extheor/images/myblog/%E5%88%A0%E9%99%A4%E6%96%87%E7%AB%A0.gif" alt="" /></p><h2 id="博客后台-编辑博文-显示数据"><a class="markdownIt-Anchor" href="#博客后台-编辑博文-显示数据"></a> 博客后台 编辑博文-显示数据</h2><p>在 <code>model/article.js</code> 文件中修改获取指定文章详情的方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取指定文章的详情</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;integer&#125;</span> </span>id 当前文章编号</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">static</span> getArticleById(id) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> sql =</span><br><span class="line">      <span class="string">"SELECT a.id,a.title,a.content,a.`time`,a.hits,a.category_id,c.`name`,a.`thumbnail`,a.`hot` FROM article a,category c WHERE a.id = ? AND a.category_id = c.id"</span>;</span><br><span class="line">    <span class="keyword">this</span>.query(sql, id)</span><br><span class="line">      .then(<span class="function">(<span class="params">results</span>) =&gt;</span> &#123;</span><br><span class="line">        resolve(results[<span class="number">0</span>]);</span><br><span class="line">      &#125;)</span><br><span class="line">      .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">`获取指定文章的详情失败：<span class="subst">$&#123;err.message&#125;</span>`</span>);</span><br><span class="line">        reject(err);</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 <code>router/admin/article.js</code> 文件中新增路由</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 文章编辑</span></span><br><span class="line">articleApp.get(</span><br><span class="line">  <span class="string">"/edit/:id"</span>,</span><br><span class="line">  [category.getList, article.getArticleById],</span><br><span class="line">  (req, res) =&gt; &#123;</span><br><span class="line">    <span class="keyword">let</span> &#123; user, categories, article &#125; = req;</span><br><span class="line">    res.render(<span class="string">"admin/article/edit"</span>, &#123; user, categories, article &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>修改 <code>views/admin/article/edit.html</code> 文件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span></span></span><br><span class="line"><span class="tag">      <span class="attr">name</span>=<span class="string">"viewport"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1, shrink-to-fit=no"</span></span></span><br><span class="line"><span class="tag">    /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span></span></span><br><span class="line"><span class="tag">      <span class="attr">rel</span>=<span class="string">"stylesheet"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">href</span>=<span class="string">"https://cdn.jsdelivr.net/npm/bootstrap@4.4.1/dist/css/bootstrap.min.css"</span></span></span><br><span class="line"><span class="tag">    /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span></span></span><br><span class="line"><span class="tag">      <span class="attr">rel</span>=<span class="string">"stylesheet"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">href</span>=<span class="string">"//at.alicdn.com/t/font_1658828_vud4w73neg.css"</span></span></span><br><span class="line"><span class="tag">    /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"/admin/css/style.css"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span> <span class="attr">class</span>=<span class="string">"bg-light"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">%-</span> <span class="attr">include</span>("<span class="attr">..</span>/<span class="attr">header.html</span>") <span class="attr">-</span>%&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container-fluid vh-100"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row h-100"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">%-</span> <span class="attr">include</span>("<span class="attr">..</span>/<span class="attr">navs.html</span>") <span class="attr">-</span>%&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-10"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"p-3 border mb-3 bg-white"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h4</span> <span class="attr">class</span>=<span class="string">"mb-0"</span>&gt;</span>文章管理<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row mt-3"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col"</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"card"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">class</span>=<span class="string">"card-header bg-primary text-white d-flex justify-content-between"</span></span></span><br><span class="line"><span class="tag">                &gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">h6</span> <span class="attr">class</span>=<span class="string">"mb-0 align-self-center"</span>&gt;</span>编辑文章<span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"card-body"</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">form</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">action</span>=<span class="string">"/admin/article/edit"</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">method</span>=<span class="string">"POST"</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">enctype</span>=<span class="string">"multipart/form-data"</span></span></span><br><span class="line"><span class="tag">                  &gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"id"</span> <span class="attr">value</span>=<span class="string">"&lt;%= article.id %&gt;"</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-row"</span>&gt;</span></span><br><span class="line">                      <span class="tag">&lt;<span class="name">label</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">for</span>=<span class="string">"title"</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">class</span>=<span class="string">"col-2 text-center col-form-label"</span></span></span><br><span class="line"><span class="tag">                        &gt;</span>标题：<span class="tag">&lt;/<span class="name">label</span></span></span><br><span class="line"><span class="tag">                      &gt;</span></span><br><span class="line">                      <span class="tag">&lt;<span class="name">input</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">type</span>=<span class="string">"text"</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">class</span>=<span class="string">"col-8 form-control"</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">name</span>=<span class="string">"title"</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">id</span>=<span class="string">"title"</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">value</span>=<span class="string">"&lt;%= article.title %&gt; "</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">required</span></span></span><br><span class="line"><span class="tag">                      /&gt;</span></span><br><span class="line">                      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"col-2 col-form-label text-danger"</span></span></span><br><span class="line"><span class="tag">                        &gt;</span>* 必填项<span class="tag">&lt;/<span class="name">span</span></span></span><br><span class="line"><span class="tag">                      &gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-row mt-3"</span>&gt;</span></span><br><span class="line">                      <span class="tag">&lt;<span class="name">label</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">for</span>=<span class="string">"category_id"</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">class</span>=<span class="string">"col-2 text-center col-form-label"</span></span></span><br><span class="line"><span class="tag">                        &gt;</span>类目：<span class="tag">&lt;/<span class="name">label</span></span></span><br><span class="line"><span class="tag">                      &gt;</span></span><br><span class="line">                      <span class="tag">&lt;<span class="name">select</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">name</span>=<span class="string">"category_id"</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">id</span>=<span class="string">"category_id"</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">class</span>=<span class="string">"col-8 form-control"</span></span></span><br><span class="line"><span class="tag">                      &gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"0"</span>&gt;</span>请选择<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">%</span> <span class="attr">categories.forEach</span>(<span class="attr">category</span> =&gt;</span> &#123; %&gt;</span><br><span class="line">                        &lt;option value="&lt;%= category.id %&gt;" &lt;%= category.id == article.category_id ? "selected" : "" %&gt; </span><br><span class="line">                          &gt;<span class="tag">&lt;<span class="name">%=</span> <span class="attr">category.name</span> %&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">%</span> &#125;) %&gt;</span></span><br><span class="line">                      <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">                      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"col-2 col-form-label text-danger"</span></span></span><br><span class="line"><span class="tag">                        &gt;</span>* 必填项<span class="tag">&lt;/<span class="name">span</span></span></span><br><span class="line"><span class="tag">                      &gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-row mt-3"</span>&gt;</span></span><br><span class="line">                      <span class="tag">&lt;<span class="name">label</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">for</span>=<span class="string">"ue_content"</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">class</span>=<span class="string">"col-2 text-center col-form-label"</span></span></span><br><span class="line"><span class="tag">                        &gt;</span>内容：<span class="tag">&lt;/<span class="name">label</span></span></span><br><span class="line"><span class="tag">                      &gt;</span></span><br><span class="line">                      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-8 p-0"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">id</span>=<span class="string">"editor"</span> <span class="attr">name</span>=<span class="string">"content"</span>&gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">article.content</span> %&gt;</span> <span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">                      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"col-2 col-form-label text-danger"</span></span></span><br><span class="line"><span class="tag">                        &gt;</span>* 必填项<span class="tag">&lt;/<span class="name">span</span></span></span><br><span class="line"><span class="tag">                      &gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-row mt-3"</span>&gt;</span></span><br><span class="line">                      <span class="tag">&lt;<span class="name">label</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">for</span>=<span class="string">"content"</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">class</span>=<span class="string">"col-2 text-center col-form-label"</span></span></span><br><span class="line"><span class="tag">                        &gt;</span>热门：<span class="tag">&lt;/<span class="name">label</span></span></span><br><span class="line"><span class="tag">                      &gt;</span></span><br><span class="line">                      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-8 col-form-label"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"custom-control custom-switch"</span>&gt;</span></span><br><span class="line">                          <span class="tag">&lt;<span class="name">input</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">type</span>=<span class="string">"checkbox"</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">class</span>=<span class="string">"custom-control-input"</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">id</span>=<span class="string">"hot"</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">name</span>=<span class="string">"hot"</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">value</span>=<span class="string">"1"</span></span></span><br><span class="line">                            &lt;%= article.hot == 1 ? "checked" : "" %&gt;</span><br><span class="line">                          /&gt;</span><br><span class="line">                          <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"custom-control-label"</span> <span class="attr">for</span>=<span class="string">"hot"</span>&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-row mt-3"</span>&gt;</span></span><br><span class="line">                      <span class="tag">&lt;<span class="name">label</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">for</span>=<span class="string">"content"</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">class</span>=<span class="string">"col-2 text-center col-form-label"</span></span></span><br><span class="line"><span class="tag">                        &gt;</span>缩略图：<span class="tag">&lt;/<span class="name">label</span></span></span><br><span class="line"><span class="tag">                      &gt;</span></span><br><span class="line">                      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-8"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">input</span></span></span><br><span class="line"><span class="tag">                          <span class="attr">type</span>=<span class="string">"file"</span></span></span><br><span class="line"><span class="tag">                          <span class="attr">class</span>=<span class="string">"d-none"</span></span></span><br><span class="line"><span class="tag">                          <span class="attr">id</span>=<span class="string">"customFile"</span></span></span><br><span class="line"><span class="tag">                          <span class="attr">name</span>=<span class="string">"upload"</span></span></span><br><span class="line"><span class="tag">                          <span class="attr">accept</span>=<span class="string">"image/*"</span></span></span><br><span class="line"><span class="tag">                        /&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"customFile"</span> <span class="attr">class</span>=<span class="string">"position-relative"</span>&gt;</span></span><br><span class="line">                          <span class="tag">&lt;<span class="name">img</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">src</span>=<span class="string">"&lt;% article.thumbnail %&gt;"</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">data-src</span>=<span class="string">"holder.js/200x200?text=点击上传"</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">class</span>=<span class="string">"img-thumbnail"</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">width</span>=<span class="string">"200"</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">height</span>=<span class="string">"200"</span></span></span><br><span class="line"><span class="tag">                          /&gt;</span></span><br><span class="line">                          <span class="tag">&lt;<span class="name">button</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">type</span>=<span class="string">"button"</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">class</span>=<span class="string">"delimg btn btn-danger btn-sm position-absolute"</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">title</span>=<span class="string">"删除"</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">onclick</span>=<span class="string">"delThumbnali()"</span></span></span><br><span class="line"><span class="tag">                          &gt;</span></span><br><span class="line">                            <span class="symbol">&amp;times;</span></span><br><span class="line">                          <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"thumbnail"</span> <span class="attr">value</span>=<span class="string">"&lt;%= article.thumbnail %&gt;"</span>&gt;</span></span><br><span class="line">                      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-row mt-3"</span>&gt;</span></span><br><span class="line">                      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"offset-2"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">input</span></span></span><br><span class="line"><span class="tag">                          <span class="attr">type</span>=<span class="string">"submit"</span></span></span><br><span class="line"><span class="tag">                          <span class="attr">value</span>=<span class="string">"提交"</span></span></span><br><span class="line"><span class="tag">                          <span class="attr">class</span>=<span class="string">"btn btn-success"</span></span></span><br><span class="line"><span class="tag">                        /&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/admin/article/"</span> <span class="attr">class</span>=<span class="string">"btn btn-danger ml-3"</span></span></span><br><span class="line"><span class="tag">                          &gt;</span>取消<span class="tag">&lt;/<span class="name">a</span></span></span><br><span class="line"><span class="tag">                        &gt;</span></span><br><span class="line">                      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/jquery@3.4.1/dist/jquery.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/bootstrap@4.4.1/dist/js/bootstrap.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdnjs.cloudflare.com/ajax/libs/holder/2.9.6/holder.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://gw.alipayobjects.com/os/lib/antv/g2/3.5.12/dist/g2.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://gw.alipayobjects.com/os/antv/pkg/_antv.data-set-0.10.2/dist/data-set.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.ckeditor.com/ckeditor5/17.0.0/classic/ckeditor.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"/admin/js/public.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">      <span class="function"><span class="keyword">function</span> <span class="title">delThumbnali</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="javascript">        $(<span class="string">"[name='thumbnail']"</span>).val(<span class="string">''</span>)</span></span><br><span class="line">      &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>启动服务，实现对应文章页面显示</p><p><img src= "https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@v3.3.1/butterfly/img/loading9.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/extheor/images/myblog/%E7%BC%96%E8%BE%91%E6%96%87%E7%AB%A0.gif" alt="" /></p><h2 id="博客后台-编辑博文-数据库修改"><a class="markdownIt-Anchor" href="#博客后台-编辑博文-数据库修改"></a> 博客后台 编辑博文-数据库修改</h2><p>在 <code>model/article.js</code> 文件中新增编辑文章的方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 编辑文章</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;Object&#125;</span> </span>article 文章对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">static</span> edit(article) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> sql =</span><br><span class="line">      <span class="string">"UPDATE article SET title = ?, content = ?, hot = ?, category_id = ?, thumbnail = ? WHERE id = ?"</span>;</span><br><span class="line">    <span class="keyword">this</span>.query(sql, [</span><br><span class="line">      article.title,</span><br><span class="line">      article.content,</span><br><span class="line">      article.hot,</span><br><span class="line">      article.category_id,</span><br><span class="line">      article.thumbnail,</span><br><span class="line">      article.id,</span><br><span class="line">    ])</span><br><span class="line">      .then(<span class="function">(<span class="params">results</span>) =&gt;</span> &#123;</span><br><span class="line">        resolve(results.affectedRows);</span><br><span class="line">      &#125;)</span><br><span class="line">      .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">`编辑文章失败：<span class="subst">$&#123;err.message&#125;</span>`</span>);</span><br><span class="line">        reject(err);</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 <code>middleware/article.js</code> 文件中新增编辑文章的属性</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 编辑文章</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">edit: <span class="function">(<span class="params">req, res, next</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> &#123; title, content, hot, category_id, thumbnail, id &#125; = req.body;</span><br><span class="line">  <span class="keyword">let</span> article = &#123;</span><br><span class="line">    title,</span><br><span class="line">    content,</span><br><span class="line">    hot: hot ? <span class="number">1</span> : <span class="number">0</span>,</span><br><span class="line">    category_id,</span><br><span class="line">    thumbnail: req.uploadUrl ? req.uploadUrl : thumbnail,</span><br><span class="line">    id,</span><br><span class="line">  &#125;;</span><br><span class="line">  Article.edit(article)</span><br><span class="line">    .then(<span class="function">(<span class="params">results</span>) =&gt;</span> &#123;</span><br><span class="line">      req.affectedRows = results;</span><br><span class="line">      next();</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">      next(err);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>在 <code>router/admin/article.js</code> 文件中新增路由</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">articleApp.post(<span class="string">"/edit"</span>, [article.edit], (req, res) =&gt; &#123;</span><br><span class="line">  <span class="keyword">if</span> (req.affectedRows &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    res.render(<span class="string">"admin/alert"</span>, &#123;</span><br><span class="line">      code: <span class="literal">true</span>,</span><br><span class="line">      title: <span class="string">"成功提示"</span>,</span><br><span class="line">      message: <span class="string">"文章编辑成功"</span>,</span><br><span class="line">      url: <span class="string">"/admin/article/"</span>,</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    res.render(<span class="string">"admin/alert"</span>, &#123;</span><br><span class="line">      code: <span class="literal">false</span>,</span><br><span class="line">      title: <span class="string">"失败提示"</span>,</span><br><span class="line">      message: <span class="string">"文章编辑失败"</span>,</span><br><span class="line">      url: <span class="string">"/admin/article/"</span> + req.body.id,</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h2 id="博客后台-前台文章列表与文章内容调整"><a class="markdownIt-Anchor" href="#博客后台-前台文章列表与文章内容调整"></a> 博客后台 前台文章列表与文章内容调整</h2><p>在 <code>model/article.js</code> 文件中修改两个方法，数据库查询的时候都加上thumbnail字段</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取热门推荐</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;integer&#125;</span> </span>num 条目数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">static</span> getHot(num) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> sql =</span><br><span class="line">      <span class="string">"SELECT id,title,content,`time`,thumbnail FROM article WHERE hot = 1 LIMIT ?"</span>;</span><br><span class="line">    <span class="keyword">this</span>.query(sql, num)</span><br><span class="line">      .then(<span class="function">(<span class="params">results</span>) =&gt;</span> &#123;</span><br><span class="line">        resolve(results);</span><br><span class="line">      &#125;)</span><br><span class="line">      .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">`获取热门文章失败：<span class="subst">$&#123;err.message&#125;</span>`</span>);</span><br><span class="line">        reject(err);</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取文章列表</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">static</span> getList() &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> sql =</span><br><span class="line">      <span class="string">"SELECT id,title,content,`time`,thumbnail FROM article ORDER BY time DESC"</span>;</span><br><span class="line">    <span class="keyword">this</span>.query(sql)</span><br><span class="line">      .then(<span class="function">(<span class="params">results</span>) =&gt;</span> &#123;</span><br><span class="line">        resolve(results);</span><br><span class="line">      &#125;)</span><br><span class="line">      .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">`获取文章列表失败：<span class="subst">$&#123;err.message&#125;</span>`</span>);</span><br><span class="line">        reject(err);</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改 <code>views/admin/index.html</code> 文件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span></span></span><br><span class="line"><span class="tag">     <span class="attr">src</span>=<span class="string">"&lt;%= article.thumbnail %&gt; "</span></span></span><br><span class="line"><span class="tag">     <span class="attr">data-src</span>=<span class="string">"holder.js/100px150"</span></span></span><br><span class="line"><span class="tag">     <span class="attr">class</span>=<span class="string">"card-img-top"</span></span></span><br><span class="line"><span class="tag">     <span class="attr">alt</span>=<span class="string">"..."</span></span></span><br><span class="line"><span class="tag">     /&gt;</span></span><br></pre></td></tr></table></figure><p>使前台页面效果如下</p><p><img src= "https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@v3.3.1/butterfly/img/loading9.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/extheor/images/myblog/20.png" alt="" /></p><h2 id="博客管理-类目管理-显示与添加"><a class="markdownIt-Anchor" href="#博客管理-类目管理-显示与添加"></a> 博客管理 类目管理-显示与添加</h2><p>在 <code>model/category.js</code> 文件中添加新增类目方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 新增类目</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">static</span> add(name, index) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> sql = <span class="string">"INSERT INTO category (`name`,`index`) VALUES (?,?)"</span>;</span><br><span class="line">    <span class="keyword">this</span>.query(sql, [name, index])</span><br><span class="line">      .then(<span class="function">(<span class="params">results</span>) =&gt;</span> &#123;</span><br><span class="line">        resolve(results.insertId);</span><br><span class="line">      &#125;)</span><br><span class="line">      .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">`新增类目失败：<span class="subst">$&#123;err.message&#125;</span>`</span>);</span><br><span class="line">        reject(err);</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 <code>middleware/category.js</code> 文件中添加新增类目属性</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 添加类目</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">add: <span class="function">(<span class="params">req, res, next</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> &#123; name, index &#125; = req.body;</span><br><span class="line">  Category.add(name, index)</span><br><span class="line">    .then(<span class="function">(<span class="params">results</span>) =&gt;</span> &#123;</span><br><span class="line">      req.insertId = results;</span><br><span class="line">      next();</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">      next(err);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>在 <code>router/admin/category.js</code> 文件中新增路由</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">categoryApp.post(<span class="string">"/add"</span>, [category.add], (req, res) =&gt; &#123;</span><br><span class="line">  <span class="keyword">if</span> (req.insertId) &#123;</span><br><span class="line">    res.json(&#123; <span class="attr">code</span>: <span class="number">1</span>, <span class="attr">msg</span>: <span class="string">"添加成功"</span> &#125;);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    res.json(&#123; <span class="attr">code</span>: <span class="number">1</span>, <span class="attr">msg</span>: <span class="string">"添加失败"</span> &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>在 <code>views/admin/category/index.html</code> 文件中编写JS脚本</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">save</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> name = $(t).parents(<span class="string">"tr"</span>).find(<span class="string">"[name='name']"</span>).val();</span><br><span class="line">    <span class="keyword">let</span> index = $(t).parents(<span class="string">"tr"</span>).find(<span class="string">"[name='index']"</span>).val();</span><br><span class="line"></span><br><span class="line">    $.post(<span class="string">"/admin/category/add"</span>, &#123; name, index &#125;, <span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (res.code == <span class="number">1</span>) &#123;</span><br><span class="line">            showToasts(<span class="string">"成功"</span>, <span class="string">"添加类目成功"</span>);</span><br><span class="line">            setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                location.reload();</span><br><span class="line">            &#125;, <span class="number">2000</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            showToasts(<span class="string">"失败"</span>, <span class="string">"添加类目失败"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>效果如下</p><p><img src= "https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@v3.3.1/butterfly/img/loading9.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/extheor/images/myblog/%E6%96%B0%E5%A2%9E%E7%B1%BB%E7%9B%AE.gif" alt="" /></p><h2 id="博客后台-类目管理-删除与修改"><a class="markdownIt-Anchor" href="#博客后台-类目管理-删除与修改"></a> 博客后台 类目管理-删除与修改</h2><p>在 <code>model/category.js</code> 文件中新增删除类目的方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 删除类目</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;integer&#125;</span> </span>id 类目编号</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">static</span> del(id) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> sql = <span class="string">"DELETE FROM category WHERE id = ?"</span>;</span><br><span class="line">    <span class="keyword">this</span>.query(sql, id)</span><br><span class="line">      .then(<span class="function">(<span class="params">results</span>) =&gt;</span> &#123;</span><br><span class="line">        resolve(results.affectedRows);</span><br><span class="line">      &#125;)</span><br><span class="line">      .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">`删除类目失败：<span class="subst">$&#123;err.message&#125;</span>`</span>);</span><br><span class="line">        reject(err);</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 <code>middleware/category.js</code> 文件中新增删除类目的属性</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 删除类目</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">del: <span class="function">(<span class="params">req, res, next</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> &#123; id &#125; = req.query;</span><br><span class="line">  Category.del(id)</span><br><span class="line">    .then(<span class="function">(<span class="params">results</span>) =&gt;</span> &#123;</span><br><span class="line">      req.affectedRows = results;</span><br><span class="line">      next();</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">      next(err);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>在 <code>router/admin/category.js</code> 文件中新增删除类目的路由</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">categoryApp.get(<span class="string">"/del"</span>, category.del, (req, res) =&gt; &#123;</span><br><span class="line">  <span class="keyword">if</span> (req.affectedRows &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    res.json(&#123; <span class="attr">code</span>: <span class="number">1</span>, <span class="attr">msg</span>: <span class="string">"删除成功"</span> &#125;);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    res.json(&#123; <span class="attr">code</span>: <span class="number">1</span>, <span class="attr">msg</span>: <span class="string">"删除失败"</span> &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>在 <code>views/admin/category/index.html</code> 文件中编写JS脚本</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">del</span>(<span class="params">id</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (confirm(<span class="string">"确认删除?"</span>)) &#123;</span><br><span class="line">        $.getJSON(<span class="string">"/admin/category/del"</span>, &#123; id &#125;, <span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (res.code == <span class="number">1</span>) &#123;</span><br><span class="line">                showToasts(<span class="string">"成功"</span>, <span class="string">"删除类目成功"</span>);</span><br><span class="line">                setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    location.reload();</span><br><span class="line">                &#125;, <span class="number">2000</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                showToasts(<span class="string">"失败"</span>, <span class="string">"删除类目失败"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>开启服务，实现如下效果</p><p><img src= "https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@v3.3.1/butterfly/img/loading9.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/extheor/images/myblog/%E5%88%A0%E9%99%A4%E7%B1%BB%E7%9B%AE.gif" alt="" /></p><h2 id="博客后台-日志列表显示"><a class="markdownIt-Anchor" href="#博客后台-日志列表显示"></a> 博客后台 日志列表显示</h2><p>在 <code>model</code> 目录下新建 <code>log.js</code> 文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 日志数据模型</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">module.exports = class Tab extends require("./model") &#123;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 获取日志列表</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">static</span> getPage(start, size) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">let</span> sql =</span><br><span class="line">        <span class="string">"SELECT handle,`time`,ip FROM `log` ORDER BY `time` DESC LIMIT ?,?"</span>;</span><br><span class="line">      <span class="keyword">this</span>.query(sql, [start, size])</span><br><span class="line">        .then(<span class="function">(<span class="params">results</span>) =&gt;</span> &#123;</span><br><span class="line">          resolve(results);</span><br><span class="line">        &#125;)</span><br><span class="line">        .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="built_in">console</span>.log(<span class="string">`获取日志列表失败：<span class="subst">$&#123;err.message&#125;</span>`</span>);</span><br><span class="line">          reject(err);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 获取日志总条目数</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">static</span> getCount() &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">let</span> sql = <span class="string">"SELECT COUNT(1) as count FROM `log`"</span>;</span><br><span class="line">      <span class="keyword">this</span>.query(sql)</span><br><span class="line">        .then(<span class="function">(<span class="params">results</span>) =&gt;</span> &#123;</span><br><span class="line">          resolve(results[<span class="number">0</span>].count);</span><br><span class="line">        &#125;)</span><br><span class="line">        .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="built_in">console</span>.log(<span class="string">`获取日志总条目数失败：<span class="subst">$&#123;err.message&#125;</span>`</span>);</span><br><span class="line">          reject(err);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>在 <code>middleware</code> 目录下新建 <code>log.js</code> 文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 访问量中间件</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> Log = <span class="built_in">require</span>(<span class="string">"../model/log"</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 获取日志列表</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  getPage: <span class="function">(<span class="params">req, res, next</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> &#123; p, size &#125; = req.page;</span><br><span class="line">    Log.getPage((p - <span class="number">1</span>) * size, size)</span><br><span class="line">      .then(<span class="function">(<span class="params">results</span>) =&gt;</span> &#123;</span><br><span class="line">        req.page.list = results;</span><br><span class="line">        next();</span><br><span class="line">      &#125;)</span><br><span class="line">      .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">        next(err);</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 获取总条目数</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  getCount: <span class="function">(<span class="params">req, res, next</span>) =&gt;</span> &#123;</span><br><span class="line">    Log.getCount()</span><br><span class="line">      .then(<span class="function">(<span class="params">results</span>) =&gt;</span> &#123;</span><br><span class="line">        req.count = results;</span><br><span class="line">        next();</span><br><span class="line">      &#125;)</span><br><span class="line">      .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">        next(err);</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>在 <code>router/admin</code> 目录下新建 <code>log.js</code> 文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 后台日志管理</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">"express"</span>);</span><br><span class="line"><span class="keyword">const</span> log = <span class="built_in">require</span>(<span class="string">"../../middleware/log"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> logApp = express();</span><br><span class="line"></span><br><span class="line">logApp.get(</span><br><span class="line">  <span class="string">"/"</span>,</span><br><span class="line">  log.getCount,</span><br><span class="line">  (req, res, next) =&gt; &#123;</span><br><span class="line">    <span class="keyword">let</span> page = &#123;</span><br><span class="line">      p: req.query.p ? req.query.p : <span class="number">1</span>,</span><br><span class="line">      count: req.count,</span><br><span class="line">      size: <span class="number">3</span>,</span><br><span class="line">    &#125;;</span><br><span class="line">    page.total = <span class="built_in">Math</span>.ceil(page.count / page.size);</span><br><span class="line">    page.p = page.p &gt; page.total ? page.total : page.p;</span><br><span class="line">    page.p = page.p &lt; <span class="number">1</span> ? <span class="number">1</span> : page.p;</span><br><span class="line"></span><br><span class="line">    req.page = page;</span><br><span class="line">    next();</span><br><span class="line">  &#125;,</span><br><span class="line">  log.getPage,</span><br><span class="line">  (req, res) =&gt; &#123;</span><br><span class="line">    <span class="keyword">let</span> &#123; user, page &#125; = req;</span><br><span class="line">    res.render(<span class="string">"admin/log/index"</span>, &#123; user, page &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = logApp;</span><br></pre></td></tr></table></figure><p>修改 <code>views/admin/log/index.html</code> 文件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span></span></span><br><span class="line"><span class="tag">      <span class="attr">name</span>=<span class="string">"viewport"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1, shrink-to-fit=no"</span></span></span><br><span class="line"><span class="tag">    /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span></span></span><br><span class="line"><span class="tag">      <span class="attr">rel</span>=<span class="string">"stylesheet"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">href</span>=<span class="string">"https://cdn.jsdelivr.net/npm/bootstrap@4.4.1/dist/css/bootstrap.min.css"</span></span></span><br><span class="line"><span class="tag">    /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span></span></span><br><span class="line"><span class="tag">      <span class="attr">rel</span>=<span class="string">"stylesheet"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">href</span>=<span class="string">"//at.alicdn.com/t/font_1658828_vud4w73neg.css"</span></span></span><br><span class="line"><span class="tag">    /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"/admin/css/style.css"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span> <span class="attr">class</span>=<span class="string">"bg-light"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">%-</span> <span class="attr">include</span>("<span class="attr">..</span>/<span class="attr">header.html</span>") <span class="attr">-</span>%&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container-fluid vh-100"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row h-100"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">%-</span> <span class="attr">include</span>("<span class="attr">..</span>/<span class="attr">navs.html</span>") <span class="attr">-</span>%&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-10"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"p-3 border mb-3 bg-white"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h4</span> <span class="attr">class</span>=<span class="string">"mb-0"</span>&gt;</span>查看日志<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row mt-3"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col"</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"card"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">class</span>=<span class="string">"card-header bg-primary text-white d-flex justify-content-between"</span></span></span><br><span class="line"><span class="tag">                &gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">h6</span> <span class="attr">class</span>=<span class="string">"mb-0 align-self-center"</span>&gt;</span>日志列表<span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"card-body"</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"table text-center"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">                      <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">th</span>&gt;</span>时间<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">th</span>&gt;</span>操作<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">th</span>&gt;</span>IP<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">                      <span class="tag">&lt;<span class="name">%</span> <span class="attr">page.list.forEach</span>(<span class="attr">log</span> =&gt;</span> &#123; %&gt;</span><br><span class="line">                      <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">log.time.toLocaleString</span>() %&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">log.handle</span> %&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">log.ip</span> %&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                      <span class="tag">&lt;<span class="name">%</span> &#125;) %&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                  <span class="tag">&lt;<span class="name">nav</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">class</span>=<span class="string">"d-flex justify-content-between border-top pt-3 px-3"</span></span></span><br><span class="line"><span class="tag">                  &gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"align-self-center"</span>&gt;</span></span><br><span class="line">                      共 <span class="tag">&lt;<span class="name">%=</span> <span class="attr">page.count</span> %&gt;</span> 条 / 共 <span class="tag">&lt;<span class="name">%=</span> <span class="attr">page.total</span> %&gt;</span> 页 / 第 <span class="tag">&lt;<span class="name">%=</span></span></span><br><span class="line"><span class="tag">                      <span class="attr">page.p</span> %&gt;</span> 页</span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"pagination mb-0"</span>&gt;</span></span><br><span class="line">                      <span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span> (<span class="attr">page.p</span> &gt;</span> 1) &#123; %&gt;</span><br><span class="line">                      <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"page-item"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"page-link"</span> <span class="attr">href</span>=<span class="string">"/admin/log?p=&lt;%= parseInt(page.p)-1 %&gt;"</span>&gt;</span>上一页<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                      <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                      <span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></span><br><span class="line">                      &lt;% for( let index = 1; index &lt;= page.total; index++ ) &#123; %&gt;</span><br><span class="line">                      <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"page-item"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"page-link"</span> <span class="attr">href</span>=<span class="string">"/admin/log?p=&lt;%= index %&gt;"</span>&gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">index</span> %&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                      <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                      <span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></span><br><span class="line">                      </span><br><span class="line">                      </span><br><span class="line">                      <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                      &lt;% if (page.p &lt; page.total) &#123; %&gt;</span><br><span class="line">                      <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"page-item"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"page-link"</span> <span class="attr">href</span>=<span class="string">"/admin/log?p=&lt;%= parseInt(page.p)+1 %&gt;"</span>&gt;</span>下一页<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                      <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                      <span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/jquery@3.4.1/dist/jquery.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/bootstrap@4.4.1/dist/js/bootstrap.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdnjs.cloudflare.com/ajax/libs/holder/2.9.6/holder.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://gw.alipayobjects.com/os/lib/antv/g2/3.5.12/dist/g2.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://gw.alipayobjects.com/os/antv/pkg/_antv.data-set-0.10.2/dist/data-set.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"/admin/js/public.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>启动服务，实现以下效果</p><p><img src= "https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@v3.3.1/butterfly/img/loading9.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/extheor/images/myblog/%E6%97%A5%E5%BF%97%E5%88%86%E9%A1%B5.gif" alt="" /></p><h2 id="博客后台-日志列表显示-2"><a class="markdownIt-Anchor" href="#博客后台-日志列表显示-2"></a> 博客后台 日志列表显示</h2><p>示例：做一个登录日志</p><p>在 <code>router/admin/login.js</code> 中修改实现登录操作的方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> log = <span class="built_in">require</span>(<span class="string">"../middleware/log"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 实现登录操作</span></span><br><span class="line">loginApp.post(<span class="string">"/"</span>, (req, res, next) =&gt; &#123;</span><br><span class="line">  <span class="keyword">let</span> &#123; username, password &#125; = req.body;</span><br><span class="line">  User.login(username, password)</span><br><span class="line">    .then(<span class="function">(<span class="params">results</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (results) &#123;</span><br><span class="line">        req.log = &#123;</span><br><span class="line">          time: <span class="keyword">new</span> <span class="built_in">Date</span>(),</span><br><span class="line">          handle: <span class="string">"登录"</span>,</span><br><span class="line">          ip: req.ip.split(<span class="string">":"</span>)[<span class="number">3</span>],</span><br><span class="line">        &#125;;</span><br><span class="line">        log.add(req, res, next);</span><br><span class="line">        <span class="comment">// session存储（key=value）</span></span><br><span class="line">        req.session.user = results;</span><br><span class="line">        res.redirect(<span class="string">"/"</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        res.render(<span class="string">"login"</span>, &#123; <span class="attr">msg</span>: <span class="string">"登录失败！用户名或密码错误"</span> &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">      next(err);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>主要代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">req.log = &#123;</span><br><span class="line">    time: <span class="keyword">new</span> <span class="built_in">Date</span>(),</span><br><span class="line">    handle: <span class="string">"登录"</span>,</span><br><span class="line">    ip: req.ip.split(<span class="string">":"</span>)[<span class="number">3</span>],</span><br><span class="line">&#125;;</span><br><span class="line">log.add(req, res, next);</span><br></pre></td></tr></table></figure><p>自由发挥即可</p><p><img src= "https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@v3.3.1/butterfly/img/loading9.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/extheor/images/myblog/21.png" alt="" /></p><h2 id="博客后台-会话延期"><a class="markdownIt-Anchor" href="#博客后台-会话延期"></a> 博客后台 会话延期</h2><blockquote><p>cookie-session会话延期实现</p></blockquote><p>在 <code>myblog/index.js</code> 文件中新建SESSION延期</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// SESSION延期</span></span><br><span class="line">app.use(<span class="function">(<span class="params">req, res, next</span>) =&gt;</span> &#123;</span><br><span class="line">  req.session.nowInMinutes = <span class="built_in">Math</span>.floor(<span class="built_in">Date</span>.now() / <span class="number">60e3</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      Nodejs博客系统
    
    </summary>
    
    
      <category term="Nodejs博客系统" scheme="https://extheor.github.io/categories/Nodejs%E5%8D%9A%E5%AE%A2%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="Nodejs博客系统" scheme="https://extheor.github.io/tags/Nodejs%E5%8D%9A%E5%AE%A2%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>Hexo常用命令</title>
    <link href="https://extheor.github.io/posts/b24dd347/index.html"/>
    <id>https://extheor.github.io/posts/b24dd347/index.html</id>
    <published>2020-08-04T06:05:29.000Z</published>
    <updated>2020-08-11T10:27:52.124Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@v0.1/Hexo/assets/css/APlayer.min.css"><script src="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@v0.1/Hexo/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@v0.1/Hexo/assets/js/Meting.min.js"></script><h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言:</h2><p>为了方便查阅,这里将常用指令汇总.</p><p>防止请求次数过多插件不再自动获取番剧数据，所以请根据自己的需要在 <code>hexo generate 或 hexo deploy</code> 之前使用<code>hexo bangumi -u</code> 命令更新番剧数据！</p><p>删除数据命令:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo bangumi -d</span><br></pre></td></tr></table></figure><h2 id="简写指令"><a class="markdownIt-Anchor" href="#简写指令"></a> 简写指令:</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">hexo n &quot;我的第一篇文章&quot;&#96;       等价于        &#96;hexo new &quot;我的第一篇文章&quot;&#96;  还等价于       &#96;hexo new post &quot;我的第一篇文章&quot;&#96;    </span><br><span class="line"> &#96;hexo p&#96; 等价于 &#96;hexo publish&#96;</span><br><span class="line"> &#96;hexo g&#96; 等价于 &#96;hexo generate&#96;  </span><br><span class="line"> &#96;hexo s&#96;等价于 &#96;hexo server&#96;     </span><br><span class="line"> &#96;hexo d&#96; 等价于 &#96;hexo deploy&#96;</span><br><span class="line"> &#96;hexo deploy -g&#96;  等价于 &#96;hexo deploy --generate&#96;</span><br><span class="line"> &#96;hexo generate -d&#96;等价于&#96;hexo generate --deploy</span><br></pre></td></tr></table></figure><p><strong>注: hexo  clean 没有 简写,  git --version 没有简写</strong></p><h2 id="指令说明"><a class="markdownIt-Anchor" href="#指令说明"></a> 指令说明:</h2><p><code>hexo server</code>        #Hexo 会监视文件变动并自动更新，除修改<strong>站点配置文件</strong>外,无须重启服务器,直接刷新网页即可生效。<br /><code>hexo server -s</code> #以静态模式启动<br /><code>hexo server -p 5000</code> #更改访问端口   (默认端口为4000，'ctrl + c’关闭server)<br /><code>hexo server -i IP地址</code> #自定义 IP<br /><code>hexo clean</code> #清除缓存  ,网页正常情况下可以忽略此条命令,执行该指令后,会删掉站点根目录下的public文件夹<br /><code>hexo g</code> #生成静态网页  (执行 <code>$ hexo g</code>后会在站点根目录下生成public文件夹, hexo会将&quot;/blog/source/&quot;   下面的.md后缀的文件编译为.html后缀的文件,存放在&quot;/blog/public/ &quot;   路径下)<br /><code>hexo d</code> #将本地数据部署到远端服务器(如github)<br /><code>hexo init 文件夹名称</code> #初始化XX文件夹名称<br /><code>npm update hexo -g</code>#升级<br /><code>npm install hexo -g</code>#安装<br /><code>node-v</code>          #查看node.js版本号<br /><code>npm -v</code>        #查看npm版本号<br /><code>git --version</code>  #查看git版本号<br /><code>hexo -v</code>      #查看hexo版本号</p><p><code>hexo publish [layout]</code>   #通过 <code>publish</code> 命令将草稿移动到 <code>source/_posts</code> 文件夹,如:<code>$ hexo publish [layout]</code>,草稿默认是不会显示在页面中的，可在执行时加上 <code>--draft</code> 参数，或是把 <code>render_drafts</code> 参数设为 <code>true</code>来预览草稿。</p><p><code>hexo new aaa &quot;bbb&quot;</code>  # 新建一篇文章,<a href="http://xn--bbb-c88dp7omgy8jb3a013i6hf7k9cimc761m.md" target="_blank" rel="noopener">文章名称和标题分别为bbb.md</a> 和 bbb.   文章采用aaa布局,  此时会在站点根目录下的----&gt;source-----&gt;_post文件夹下生成bbb.md文件,  bbb.md文件的顶部(-----分割线上方区域,也称作Front matter区),生成</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">layout : aaa&#96;</span><br><span class="line"> &#96;title:&#96;</span><br><span class="line"> &#96;date:</span><br></pre></td></tr></table></figure><p>链接：<a href="https://www.jianshu.com/p/7b8faf77d1af" target="_blank" rel="noopener">https://www.jianshu.com/p/7b8faf77d1af</a><br />来源：简书</p>]]></content>
    
    <summary type="html">
    
      Hexo常用命令
    
    </summary>
    
    
      <category term="Hexo常用命令" scheme="https://extheor.github.io/categories/Hexo%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    
    
      <category term="Hexo常用命令" scheme="https://extheor.github.io/tags/Hexo%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>八月自考考前突击-20200729</title>
    <link href="https://extheor.github.io/posts/a44a518/index.html"/>
    <id>https://extheor.github.io/posts/a44a518/index.html</id>
    <published>2020-07-21T13:14:25.000Z</published>
    <updated>2020-07-31T12:43:30.117Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@v0.1/Hexo/assets/css/APlayer.min.css"><script src="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@v0.1/Hexo/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@v0.1/Hexo/assets/js/Meting.min.js"></script><h2 id="马克思主义基本原理概论模拟五"><a class="markdownIt-Anchor" href="#马克思主义基本原理概论模拟五"></a> 马克思主义基本原理概论(模拟五)</h2><h3 id="选择题"><a class="markdownIt-Anchor" href="#选择题"></a> 选择题</h3><ol><li>在真理问题上坚持唯物论，就是要承认<mark>真理的客观性</mark></li><li>社会必要劳动时间是以<mark>简单劳动</mark>为尺度</li><li>金融寡头在政治上的统治主要是通过<mark>个人联合</mark>的方式实现的</li><li>资本输出的两种基本形式是借贷资本和<mark>生产资本</mark>输出</li></ol><h3 id="背诵题"><a class="markdownIt-Anchor" href="#背诵题"></a> 背诵题</h3><ol><li><p>简述马克思主义的科学性与革命性的关系</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li>马克思主义的科学性与革命性是不可分割的，科学性源于革命性的要求，并通过革命性表现出来。</li><li>革命性必须以科学性为前提和基础，并靠科学性来保证</li><li>科学性和革命性内在地结合在马克思主义的整个理论体系之中，并通过一系列原理表现出来。</li></ol></div></div></li><li><p>简述社会历史发展的决定性与选择性</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li>社会历史发展的決定性是指历史决定论；社会历史发展的选择性是指主体选择的作用。承认历史決定论与承认主体选择的作用是一致的</li><li>在历史決定论看来，规律只是作为一种趋势、平均数存在，这种规律给人的活动提供的不是唯一的现实可能性，何种可能性成为现实，取决于人的自觉活动和主体选择。</li><li>每一种可能性的实现，有多种多样的形式，人们对具体模式和述径的选择，表现出巨大的能动性</li></ol></div></div></li><li><p>简述党的思想路线并说明党的思想路线与马克思主义认识论是统一的</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li>党的思想路线是一切从实际出发，理论联系实际，实事求是，在实践中检验真理和发展真理。</li><li>马克思主义认识论是党的思想路线的理论基础，而党的思想路线是马克思主义认识论在突际中的具体运用，两者是统一的。体现在<ul><li>党的思想路线坚持了一切从实际出发的原则。</li><li>党的思想路线坚持了理论联系实际的原则。</li><li>党的思想路线和马克思主义认识论一样，都坚持实践是检验真理的唯一标准</li><li>&quot;实事求是”是党的思想路线的核心，也是马克思主义哲学的精和活的灵魂</li></ul></li></ol></div></div></li><li><p>简述马克思主义政党在社会主义建设中的领导核心作用</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li>思想领导方面。马克思主义是社会主义国家的指导思想，党需要把马克思主义基本原理同本国建设的具体实践相结合。马克思主义政党要确保自己在意识形态的领导地位</li><li>政治领导方面。马克思主义政党要在社会主义建设和体制改革中，起到总揽全局、协调各方的政治领导核心作用。</li><li>组织领导方面。社会主义建设是全体人民的共同事业，要在执政党的领导下，有组织、有系统、有管理、有序地进行。</li></ol></div></div></li><li><p>如何理解社会主义是走向共产主义的必由之路？</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li>人类社会的发展，只能从资本主义社会首先过渡到社会主义社会，而不能超越社会主义这个阶段。社会主义社会是共产主义社会的低级阶段，是走向共产主义高级阶段的必经阶段。</li><li>实现共产主义所必须具备的基本条件，要在社会主义历史阶段经过长期努力奋斗。不经过社会主义社会的长期发展，不具备向共产主义过渡的条件，不可能实现共产主义。</li></ol></div></div></li><li><p>试述矛盾的同一性和斗争性以及矛盾的普遍性和特殊性</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li>矛盾的同一性和斗争性：<ul><li>矛盾的同一性是指矛盾双方相互联系、相互吸引的性质</li><li>矛盾的斗争性是指矛盾双方相互排斥、相互对立的性质</li><li>矛盾的同一性和斗争性既相互区别又相互联结。区别是矛盾的同一性是相对的，矛盾的斗争性是绝对的；联系是矛盾的同一性不能脱离斗争性，斗争性寓于同一性之中。</li></ul></li><li>矛盾的普遍性和特殊性：<ul><li>矛盾的普遍性是指矛盾无处不在，无时不有。</li><li>矛盾的特殊性是指不同事物的矛盾各有不同，都有其特殊性</li><li>矛盾的普遍性和特殊性是证统一的。两者是互相联结、互相区别并定条件下相互转化</li></ul></li></ol></div></div></li><li><p>试述资本积累的必然性、实质及其后果</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li>必然性<ul><li>对剩余价值的追求是资本积累的内在动力。为获取更多剩余价值，资本家不断进行资本积累来增加资本总额，以扩大生产规模</li><li>竞争是资本积累的外在压力。竞争作为强制力量，迫使资本家不断进行资本积累，改进生产技术和扩大生产规模，增加竞争力。</li></ul></li><li>实质：资本家用无偿占有的剩余价值增大资本规模，占有更多剩余价值，扩大对工人的剥削。</li><li>后果：<ul><li>导致资本有机构成的提高；</li><li>相对过剩人口的形成；</li><li>引贫富两极分化。</li></ul></li></ol></div></div></li><li><p>试述经济全球化的含义、内容及其积极影响</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li>含义：在生产不断发展、科技加速进步、社会和国际分工不断深化、生产的社会化和国际化程度不断提高的情况下，各国、各地区的经济活动越来越超出一国和地区的范围而相互联系、依赖的过程。</li><li>内容<ul><li>生产全球化。生产领域的国际分工和协作加强，各国在生产上的结合紧密</li><li>贸易全球化。随着生产的发展，消费水平的提高，国际贸易壁垒减少，贸易全球化迅猛发展。</li><li>资本全球化。资本规模的扩大，资本全球化程度日益提高。</li></ul></li><li>积极影响：<ul><li>使社会分工在更大范国内进行，各种生产要素在国家间优化配置，推动世界生产力发展。</li><li>对发展中国家来说，引进国外的先进技术、资金和管理经验，调整与优化国民经済结构，增强经济实力，缩短与发达国家的差距，增加国内的就业，促进国内的消贾，加强同世界的联系与交流</li><li>发达资本主义国家是经済全球化的主要受益者。</li></ul></li></ol></div></div></li></ol><h2 id="计算机网络原理考前模拟四"><a class="markdownIt-Anchor" href="#计算机网络原理考前模拟四"></a> 计算机网络原理(考前模拟四)</h2><p><a class="btn-beautify button--animated larger blue" href="/posts/512c9a09/index.html" target="_blank" rel="noopener" title="考前模拟004"><i class="far fa-hand-point-right fa-fw"></i>考前模拟004 </a></p><h2 id="管理经济学模拟卷一"><a class="markdownIt-Anchor" href="#管理经济学模拟卷一"></a> 管理经济学(模拟卷一)</h2><h3 id="选择题-2"><a class="markdownIt-Anchor" href="#选择题-2"></a> 选择题</h3><ol><li>微观经济学的中心理论是<mark>价格理论</mark></li><li>影响需求量的一个最重要、 最灵敏的因素是<mark>产品价格</mark></li><li>政府为了扶持某一行业的生产、 保护生产者的利益而规定的高于该行业产品均衡价格的一种非市场价格是<mark>支持价格</mark></li><li>无差异曲线总是凸向原点， 其原因主要是<mark>边际替代率递减规律  </mark></li><li>如果连续地增加某种生产要素， 在总产量达到最大值时， <mark>边际产量曲线与横轴（ 可变投入要素投入量） 相交</mark></li><li><mark>等收益线</mark>是指在既定收入条件下， 所必须生产的两种产品的产量的最大数量组合的轨迹。</li><li>企业通过制定产品价格所要达到的目的， 也就是企业通过价格制定所要实现的经营意图是<mark>定价目标  </mark></li><li>属于竞争导向定价法的是<mark>随行就市定价法</mark></li></ol><h3 id="文字题"><a class="markdownIt-Anchor" href="#文字题"></a> 文字题</h3><ol><li><p>简述供给的定义， 及其定义包含的四个要点。</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>供给是指生产者在一定时间内在各种可能的价格水平下愿意提供而且有能力提供的某种商品的数量。 定义包含的四个要点：</p><ul><li>一种商品（或服务）</li><li>生产者愿意且能够提供</li><li>在一定时间内</li><li>除价格外， 其他影响供给变动的因素都保持不变</li></ul></div></div></li><li><p>简述回归分析的四个步骤。</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li>建立理论模型</li><li>收集数据</li><li>选择函数形式</li><li>对结果的估计和解释</li></ol></div></div></li><li><p>简述规模报酬递增的原因。</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>（1） 技术方面的经济效果： 首先， 生产规模越大， 专业化的程度越高， 可以在内部实行更精细的分工； 其次， 较大规模的也业能够采用专用机器； 最后，大规模生产可以对生产的副产品进行综合利用。（2） 管理方面的经济效果： 这主要是指大规模生产可以对管理工作进行有效的分工。（3） 商业方面的经济效果：这种经济效果是通过大企业在购买原料和出售成品时获得的。（4） 金融方面的经济效果： 当企业为了发展而筹措资金时， 大企业往往具有非常有利的条件。（5）承担风险方面的经济效果： 这里所指的风险， 主要来自产品需求和原料供给发生突然变化而带来的“不确定性” 风险。</p></div></div></li><li><p>寡头垄断市场最主要的进入障碍包括哪些？</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>（1） 规模经济性的存在。<br />（2） 行业中现有寡头垄断企业拥有重要原材料或关键技术， 这样就阻止了竞争者进入行业， 从而少数几家企业就可实现寡头垄断。<br />（3） 由几家企业控制了分销渠道。<br />（4） 现有寡头垄断企业可能受到政府的保护， 或政府的规定有时提供了反对垄断的抵消力量。</p></div></div></li><li><p>管理经济学探讨的企业决策问题主要表现在哪几个方面？</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>（1） 为谁生产、 生产什么。<br />（2） 生产多少。<br />（3） 怎样生产最为经济。</p></div></div></li></ol><h3 id="综合题"><a class="markdownIt-Anchor" href="#综合题"></a> 综合题</h3><div class="hide-toggle" style="border: 1px solid  #ebf9ed"><div class="hide-button toggle-title" style="background-color:  #ebf9ed;"><i class="fas fa-caret-right fa-fw"></i><span>材料一</span></div>    <div class="hide-content"><p>电信公司针对客户每月上网时间的不同， 收取不同的价格， 对于使用量小的客户， 收取较高的价格； 对于使用量大的客户， 收取较低的价格。</p></div></div><div class="hide-toggle" style="border: 1px solid  #ebf9ed"><div class="hide-button toggle-title" style="background-color:  #ebf9ed;"><i class="fas fa-caret-right fa-fw"></i><span>材料二</span></div>    <div class="hide-content"><p>会计师事务所是指依法独立承担注册会计师业务的中介服务机构， 是由有一定会计专业水平、 经考核取得证书的会计师（如中国的注册会计师、 美国的执业会计师、 英国的特许会计师、 日本的公认会计师等） 组成的、 受当事人委托承办有关审计、 会计、 咨询、 税务等方面业务的组织。 会计师事务所会针对不同的委托客户收取不同的服务费， 每个委托顾客的收费情况都是不同的。</p></div></div><div class="hide-toggle" style="border: 1px solid  #ebf9ed"><div class="hide-button toggle-title" style="background-color:  #ebf9ed;"><i class="fas fa-caret-right fa-fw"></i><span>材料三</span></div>    <div class="hide-content"><p>在民航客票定价中， 航空公司会将潜在的乘机者划分为两种类型（相当于将客票销售分割成两个市场）。 一类是因公出差人员， 私企公司高级职员等。 他们对乘机时间要求较高， 对票价不计较。 因而， 对他们可收取相对高的票价， 而在时间上给于优惠， 允许他们提前一天定票。 另一类是收入较低的旅行人员， 淡季出游者等。 这部分人群对时间要求不高， 但在乎票价。 对于他们， 在票价上可相对较低， 而在时间上要求对航空公司有利。 这样， 可以充分利用民航的闲置客运能力， 增加公司收益。</p></div></div><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>材料一中所述情况属于哪种价格歧视？ 请简述其定义和适用情况。</span></div>    <div class="hide-content"><p>材料一中电信公司针对不同客户的使用量来定价， 这属于二级价格歧视。 二级价格歧视也称为数量价格歧视， 它是指企业根据不同购买量确定不同的价格。二级价格歧视主要用于产品和服务的消费量可以进行测度的情况。</p></div></div><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>材料二中所述情况近似于哪种价格歧视？ 请简述其定义和适用情况。</span></div>    <div class="hide-content"><p>（1） 材料二中所述情况近似于完全价格歧视的情况。 完全价格歧视也称为一级价格歧视， 它是指企业根据每个消费者愿意支付的最高价格来制定每单位产品的价格， 并据此来分别销售每单位产品。 由此可见， 完全价格歧视就是每单位产品都有不同的价格。 因此， 完全价格歧视有时也称为单位价格歧视。<br />（2） 完全价格歧视是一种极端的定价方式， 企业很少能够实施， 因为它要求企业十分了解市场需求和每个消费者的购买意愿， 只有这样才能将每一单位产品卖给评价最高、 愿意支付最高价格的消费者。 这种情况一般是在企业对产品具有高度垄断的情况下发生。 当产品或服务的最终价格不是预先固定而是需要通过谈判或投标来确定的市场， 企业往往会实施完全价格歧视。</p></div></div><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>材料三中所述情况属于哪种价格歧视？ 请简述其定义、 优点以及划分价格歧视区间的主要办法。</span></div>    <div class="hide-content"><p>（1） 材料三中所述情况属于三级价格歧视。 三级价格歧视也称为消费者价格歧视， 它是指企业对不同市场的不同消费者实行不同的价格。 比如材料中航空公司对因公出差人员和收入较低的旅行人员， 淡季出游者等两类人群采取不同的定价和销售方案。<br />（2） 三级价格歧视的优点： 实施三级价格歧视要求企业能按需求价格弹性的不同来划分顾客或市场， 由于划分出的顾客或市场的需求价格弹性不同， 因此， 需求价格弹性小的顾客或市场制定较高的价格， 可以从高价中获得高额利润； 而需求价格弹性较大的顾客或市场制定较低的价格， 可以做到薄利多销， 以此提升企业利润。<br />（3） 实施三级价格歧视时， 划分顾客或市场的主要办法： ①根据市场的不同地理位置来划分； ②根据用途的不同来划分； ③根据消费者的个人特质来划分。</p></div></div><h2 id="运筹学200405"><a class="markdownIt-Anchor" href="#运筹学200405"></a> 运筹学(200405)</h2><h3 id="选择-填空题"><a class="markdownIt-Anchor" href="#选择-填空题"></a> 选择、填空题</h3><ol><li><p>定性预测包括<mark>特尔裴法</mark></p></li><li><p>在库存管理中，“订货提前期内的需求量”称为<mark>前置时间内的需求量</mark></p></li><li><p>单纯形法求解时，若求得的基础解满足非负要求，则该基础解为<mark>特解</mark></p></li><li><p>在网络计划技术中，以结点代表活动，以箭线表示活动之间的先后承接关系，这种图称之为<mark>结点式网络图</mark></p></li><li><p>在排队论中，通常求顾客到达呈<mark>普阿松分布</mark></p></li><li><p>活动的最早开始时间为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><msub><mi>S</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub><mo>=</mo><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">{</mo><mi>E</mi><msub><mi>S</mi><mrow><mi>h</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub><mo>+</mo><msub><mi>T</mi><mrow><mi>h</mi><mo separator="true">,</mo><mi>i</mi></mrow></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">ES_{i,j}=max\{ES_{h,j}+T_{h,i}\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span><span class="mord mathdefault">x</span><span class="mopen">{</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></p></li><li><p>库存管理工作的主要内容，就是通过调节和控制存储的输入和输出的关系，来寻求最佳的<mark>经济效益</mark></p></li><li><p>经济订货量是使一个库存周期的保管和<mark>订货总费</mark>用达到最小的订货量。</p></li><li><p>线性规划单纯形法求解时，若约束条件是等于或大于某确定数值，则应当在每个不等式中引入一个<mark>剩余变量</mark></p><blockquote><p>大于或等于时为剩余变量</p><p>小于或等于时为松弛变量</p></blockquote></li><li><p>应用回归分析法绘出的企业生产成本直线图，直线斜率为单位产量的<mark>变动费用</mark></p></li></ol>]]></content>
    
    <summary type="html">
    
      八月自考考前突击-20200729
    
    </summary>
    
    
      <category term="自学考试" scheme="https://extheor.github.io/categories/%E8%87%AA%E5%AD%A6%E8%80%83%E8%AF%95/"/>
    
      <category term="考前突击" scheme="https://extheor.github.io/categories/%E8%87%AA%E5%AD%A6%E8%80%83%E8%AF%95/%E8%80%83%E5%89%8D%E7%AA%81%E5%87%BB/"/>
    
    
      <category term="考前突击" scheme="https://extheor.github.io/tags/%E8%80%83%E5%89%8D%E7%AA%81%E5%87%BB/"/>
    
  </entry>
  
  <entry>
    <title>八月自考考前突击-20200728</title>
    <link href="https://extheor.github.io/posts/7d43958e/index.html"/>
    <id>https://extheor.github.io/posts/7d43958e/index.html</id>
    <published>2020-07-21T13:13:25.000Z</published>
    <updated>2020-07-31T12:43:30.117Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@v0.1/Hexo/assets/css/APlayer.min.css"><script src="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@v0.1/Hexo/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@v0.1/Hexo/assets/js/Meting.min.js"></script><h2 id="马克思主义基本原理概论模拟四"><a class="markdownIt-Anchor" href="#马克思主义基本原理概论模拟四"></a> 马克思主义基本原理概论(模拟四)</h2><h3 id="选择题"><a class="markdownIt-Anchor" href="#选择题"></a> 选择题</h3><ol><li>在马克思主义科学体系中，作为马克思主义的理论基础的是<mark>政治经济学</mark></li><li>阶级产生的根本前提是由于<mark>生产力的发展</mark>出现剩余产品</li><li>具体劳动反映<mark>人与自然的关系</mark></li></ol><h3 id="背诵题"><a class="markdownIt-Anchor" href="#背诵题"></a> 背诵题</h3><ol start="2"><li><p>简述否定之否定规律的基本内容及现实意义</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li><p>基本内容：事物的发展过程经过两次辩证的否定，由肯定阶段到否定阶段，再到否定之否定阶段，使事物的发展表现为螺旋式上升和波浪式前进的过程；揭示了事物的发展是前进性和曲折性的统一</p></li><li><p>现实意义：</p><ul><li>坚信社会主义的前途是光明的，对我国社会主义现代化建设事业充满必胜的信心，坚定不移的走中国特色社会主义道路。</li><li>准备走曲折道路，充分认识我国社会主义现代化建设事业的艰巨性和复杂性。</li></ul></li></ol></div></div></li><li><p>简要说明整个人类的认识是有限与无限的统一</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>人类认识是有限与无限的统一。认识的有限性是指每个时代的人每一次具体的认识是有限的；认识的无限性是指整个人类无止境的世代更替的认识是无限的。每个时代的人的每一次具体认识由于受客观条件的限制，都是有限的：整个人类无止境的世代更替的认识，则具有无限性。整个人类的认识无限性，存在于每个时代的人的认识的人有限性中，并通过无数的有限性的认识而得以实现。所以认识的有限性和认识的无限性是辨证统一的。</p></div></div></li><li><p>简述战后国家垄断资本主义大发展的原因</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>（1）大规模经济建设所需要的巨额资金，私人垄断资本无法满足。（1 分）<br />（2）大规模公共设施的建设，私人垄断资本无力或不愿投资。（1 分）<br />（3）一些大型、基础性、前导性科研项目，私人垄断资本不愿涉足。（1 分）<br />（4）日益增长的生产过剩问题依靠私人垄断资本难以解决。（1 分）<br />（5）社会化大生产露要国家进行一定的宏观经济调控。（1 分）<br />（6）在经济利益调整方面，国家的再分配功能也越来越重要。（1 分）</p></div></div></li><li><p>为什么说实现共产主义是人类最伟大的事业</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li>共产主义事业是崇高理想与科学理想的统一。古往今来，人类对理想社会的追求，经历了漫长的道路。一些仁人志都提出过建立平等自由的大同社会的理想主张。但他们所追求的理想社会，不是建立在认识社会发展规律基础上的科学理想，难免流于空幻。</li><li>马克思和恩格斯深刻分析了资本主义社会的基本矛盾的运动趋势，总结了国际工人运动的历史经验，批判地吸取了英法两国的空想共产主义和英国古典政治经济学的合理因素，继承和发展了人类历史上一切进步思想的优秀成果，从而深刻地揭示出人类社会发展的规律性，创立了科学社会主义学说，学地预见了共产主义社会这一理想社会制度的基本特征，向全世界劳动群众展示了人类社会终将进入共产主义的美好社会前景。</li><li>共产主义之所以是人类最伟大的事业，就在于它是崇高理想与科学理想的统一体现了人类对理想社会目标的追求与符合规律的科学社会实践的有机结合</li></ol></div></div></li><li><p>为什么说无产阶级革命是人类历史上最广泛、最彻底、最深刻的革命？</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li>第一，无产阶级革命是彻底消灭一切私有制、代之以生产资料公有制的革命。</li><li>第二，无产阶级革命是要彻底消灭一切阶级和阶级统治的革命。</li><li>第三，无产阶级革命是为绝大多数人谋利益的运动。无产阶级只有解放全人类才能解放自己，它的阶级利益同所有其他劳动者的利益是根本一致的。</li><li>第四，无产阶级革命是不断前进的历史过程。无产阶级必须永葆革命性和先进性，直至实现共产主义。</li></ol></div></div></li><li><p>试述生产关系必须适合生产力性质的规律及现实意义。</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li><p>规律</p><p>(1) 生产力决定生产关系。生产力的性质决定生产关系的性质，生产力的发展决定生产关系的改变。<br />(2) 生产关系反作用于生产力。适合生产力性质和发展要求的先进的生产关系，促进生产力的发展；不适合生产力性质和发展要求的落后的生产关系，阻碍生产力的发展<br />(3) 生产力和生产关系之间的矛盾运动。生产关系和生产力性质与发展要求之间是由基本适合到基本不适合，再到新的基础上的基本适合，是一个川流不息万古常新的循环过程，每一次这样的循环，都把人类社会提高到一个新的阶段。</p></li><li><p>现实意义</p><ul><li>是无产阶级政党制定正确的路线、方针、政策的理论依据；</li><li>对我国的改革开放和社会主义现代化建设，有重大的指导意义</li><li>我国社会主义初级阶段突行公有制为主体，多种所有制经济共同发展基本经济制度，是以这一规律为理论依据的</li></ul></li></ol></div></div></li><li><p>如何理解商品的二因素和生产商品的劳动二重性？</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li>商品的二因素：<ul><li>商品的二因素是指商品的使用价值和价值</li><li>使用价值是一种物品能够满足人们某种需要的属性，即物品的有用性反映人与自然的关系，是商品的自然属性。</li><li>价值是无差别的一般的人类劳动。反映商品生产者之间的关系，是商品的社会属性；是商品的最本质因素。</li></ul></li><li>生产商品的劳动二重性<ul><li>生产商品的劳动的二重性是具体劳动和抽象劳动</li><li>具体劳动是指生产使用价值的具有特定性质、目的和形式的劳动。具体劳动创造商品的使用价值，是生产商品劳动的自然属性，反映人与自然的关系。</li><li>抽象劳动是指搬开一切具体形式的、无差别的一般人类劳动。抽象创造商品的价值，是生产商品劳动的社会属性，反映商品生产者的社会关</li></ul></li></ol></div></div></li><li><p>试述资本主义国家是如何利用利率调节经济的？</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li>资本主义国家的利率调节主要是通过利率高低和差别利率来实现某些宏观经济目标。</li><li>对国家支持的企业给予优患的信贷条件，鼓励其发展；对国家要控制的经济活动用较严格的信货条件来制约。</li><li>在经济过热时，适当提高利率给经济降温；在霈要刺澂经济时，降低利率刺泼投资与消费</li></ol></div></div></li></ol><h2 id="计算机网络原理模拟六"><a class="markdownIt-Anchor" href="#计算机网络原理模拟六"></a> 计算机网络原理(模拟六)</h2><h3 id="选择-填空题"><a class="markdownIt-Anchor" href="#选择-填空题"></a> 选择、填空题</h3><ol><li>比较多见于广域网、核心网络的拓扑结构是<mark>网状拓扑结构</mark></li><li>在OSI参考模型中，应用层的协议数据单元（PDU）称为<mark>报文</mark></li><li>TCP/IP参考模型不包括<mark>网络层</mark></li><li>下列关于P2P和C/S工作模式的区別与联系的描述中，错误的是<mark>传统因特网C/S与P2P两者的差别就在应用层和传输层</mark></li><li>在域名服务器中，用来保存一个区中的所有主机的域名到IP地址的映射的域名服务器是<mark>权威域名服务器</mark></li><li>UDP数据报结构的首部中不包括<mark>目的IP地址字段</mark></li><li>TCP的拥塞控制采用的是窗口机制，窗口调整的基本策略是<mark>AIMD</mark></li><li>下列不属于IPv4地址标记法的是<mark>八进制标记法</mark></li><li>下列不属于ICMP报文字段的是<mark>版本</mark></li><li>Internet的自治系统内路由选择协议称为内部网关协议，简写为<mark>IGP</mark></li></ol><h3 id="简答题"><a class="markdownIt-Anchor" href="#简答题"></a> 简答题</h3><ol><li><p>简述电路交换的特点</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>电路交换的特点是有连接的，在通信时需要先建立电路连接，在通信过程中独占一个信道，通信结束后拆除电路连接。</p></div></div></li><li><p>简述在internet网络中，如何通过套接字实现精准分解</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>在 Internet网络中，唯一标识套接字的基本信息是IP地址和端口号。UDP基于目的IP地址和目的端口号二元组唯一标识一个UDP套接字，从而可以实现精确分解；TCP则需要基于源P地址、目的IP地址、源端口号和目的端口号四元组唯一标识一个TCP套接字，从而实现精确分解</p></div></div></li><li><p>简述路由器的转发功能</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>路由器在收到IP数据报时，会利用IP数据报的目的IP地址检索匹配路由表，如果路由表中没有匹配成功的路由项，则通过默认路由对应的接口转发该IP数据报；如果除默认路由外，有一条路由项匹配成功，则选择该路由项对应的接口，转发该IP数据报；如果除默认路由外，有多条路由项匹配成功，则选择网络前缀匹配成功位数最长的路由项，通过该路由项指定的接口转发该IP数据报</p></div></div></li><li><p>简述地址解析协议ARP的作用及其基本思想</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>地址解析协议（ARP）用于根据本网内目的主机或默认网关的IP地址获取其MAC地址。ARP的基本思想：在每一台主机中设置专用内存区域，称为ARP高速缓存（也称为ARP表），存储该主机所在局域网中其他主机和路由器的IP地址与MAC地址的映射关系，并且这个映射表要经常更新。ARP通过广播ARP查询报文，来询问某目的IP地址对应的MAC地址，即知道本网内某主机的IP地址，可以查询得到其MAC地址。</p></div></div></li><li><p>简述消息完整性检测中所使用的密码散列函数应具备的主要特征</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li>一般的散列函数具有算法公开。</li><li>能够快速计算</li><li>对任意长度报文进行多对一映射均能产生定长输出。</li><li>对于任意报文无法预知其散列值。</li><li>不同报文不能产生相同的散列值。</li><li>单向性、抗弱碰撞性、抗强碰撞性。</li></ol></div></div></li><li><p>简述IEEE802.11中四个主要协议具有的共同特征</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li>都使用相同的介质访问控制协议 CSMA/CA</li><li>链路层帧使用相同的帧格式</li><li>都具有降低传输速率以传输更远距离的能力</li><li>都支持“基础设施模式”和“自组织模式”两种模式</li></ol></div></div></li></ol><h2 id="管理经济学模拟卷一"><a class="markdownIt-Anchor" href="#管理经济学模拟卷一"></a> 管理经济学(模拟卷一)</h2><h3 id="选择题-2"><a class="markdownIt-Anchor" href="#选择题-2"></a> 选择题</h3><ol><li>管理经济学与微观经济学的区别不包括<mark>内容不同</mark></li><li>需求曲线是一条向<mark>右下方倾斜</mark>的曲线。</li><li>在某商品价格不变的条件下， 由于其他因素变动所引起的该商品的供给数量的变动是<mark>供给</mark>的变动</li><li>已知 X 商品的价格为 5 美元， Y 商品的价格为 2 美元， 如果消费者从这两种商品的消费中得到最大效用时， 商品 Y 的边际效用为 30， 那么此时 X 商品的边际效用为<mark>75</mark></li><li>在做管理决策时<mark>必须使用机会成本</mark></li><li>只要市场不是<mark>完全竞争</mark>的， 企业面临的需求曲线不是一条水平线， 而是向右下方倾斜的， 则企业的利润最大化原则就是边际收益等于边际成本， 而不是价格等于边际成本。</li><li>假定某企业生产某产品的变动成本为每件 16 元， 预期产量为 500000 件， 总固定成本为 2500000 元。 如果企业的目标成本利润率定为 33.3%， 那么按照成本加成定价法计算， 价格应定为<mark>28元</mark></li></ol><h3 id="文字题"><a class="markdownIt-Anchor" href="#文字题"></a> 文字题</h3><ol><li><p>简述影响需求量的因素。</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li>商品的价格。</li><li>消费者的收入水平。</li><li>相关商品的价格。</li><li>消费者的偏好。</li></ol></div></div></li><li><p>简述影响供给弹性的主要因素。</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li>商品生产时间的长短。</li><li>商品生产的周期。</li><li>生产规模和规模变化的难易程度。</li><li>生产成本的变化。</li></ol></div></div></li><li><p>请简述古诺模型的假设条件。</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>古诺模型的假设条件：</p><ol><li>一种产品市场上只有两家企业；</li><li>两家企业生产和销售的产品完全相同；</li><li>生产的变动成本为零， 即假设边际成本为零；</li><li>他们共同面临的需求曲线是线性的；</li><li>各方都根据对方的行动做出自己的决策。</li></ol></div></div></li><li><p>简述管理经济学的主要内容包括的四个理论。</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li>需求理论；</li><li>生产理论；</li><li>成本理论；</li><li>市场理论。</li></ol></div></div></li></ol><h3 id="综合题"><a class="markdownIt-Anchor" href="#综合题"></a> 综合题</h3><div class="hide-toggle" style="border: 1px solid  #ebf9ed"><div class="hide-button toggle-title" style="background-color:  #ebf9ed;"><i class="fas fa-caret-right fa-fw"></i><span>材料一</span></div>    <div class="hide-content"><p>中国目前有超过1600个洗发水生产商，洗发水品牌超过2000个。我国的洗发水市场格局近年来一直处于较为稳定的状态。跨国公司的知名产品基本上占据了市场的主导地位，并形成了各自的品牌忠诚的群体，占有相当大的市场份额，而国有品牌的市场份额则相对比较小。据CTR市场研究公司发布的2008年上半年中国洗发水市场占有率数据显示，在市场占有率TOP10中，本土洗发水只有霸王（3。5%）、拉芳（3。0%）两品牌进入，分别位居第八位和第十位。就单一品牌在中国销售额来说，飘柔已经高达30亿左右，海飞丝20多亿，潘婷近20亿，力士、夏士莲应该也在16至18亿之间，而中国本土洗发水单品牌销售额达到或超越10亿的屈指可数。</p><p>洗发水市场是一个块状同质化非常严重的市场，在品质、概念、价格、促销方式、传播模式，甚至包装风格等各方面差异都很细微的情况下，进行差异化探索就显得非常艰难。而本土洗发水品牌在外资洗发水品牌“老大”的阴影下，遭遇突围乏力的困境。</p><p>而在市场的历练中，本土洗发水品牌霸王、拉芳、好迪、蒂花之秀、迪彩等脱颖而出，走在前头，或以概念细分制胜，或以营销手段创新突围，在消费者的心智中占有相当分量。在以批发市场为主渠道的广大乡镇市场，近五年来拉芳、蒂花之秀、好迪、采乐4大流通巨头地位至今无人能撼。新生代市场监测机构调查显示，洗发水是三、四级市场消费者的三大必备用品之一，渗透率都在95%以上，约一半的县城消费者的购买价格在每瓶15元以下，而在农村，这一数字达到了六成以上。</p></div></div><div class="hide-toggle" style="border: 1px solid  #ebf9ed"><div class="hide-button toggle-title" style="background-color:  #ebf9ed;"><i class="fas fa-caret-right fa-fw"></i><span>材料二</span></div>    <div class="hide-content"><p>通过调查发现，在洗发水领域的一些主要品牌正在逐步失去它们的市场份额，而消费者购买的品牌总数却在一直增长。据1M1调查，有40%-50%的消费者有在将来6个月更换洗发水品牌的考虑。而品牌的转换将会在一个消费者心目中业已存在的品牌清单内进行，能否进入这个清单也便是品牌或沟通的价值所在。有人说，这个事实证明消费者对品牌差异的感觉正在下降，品牌转换已成为洗发水市场消费者的基本购买行为。（30分）</p></div></div><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>通过对材料一和材料二的了解，试用经济学相关理论来分析我国洗发水市场现状。</span></div>    <div class="hide-content"><p>从供给需求理论来分析：洗发水是居民日常生活的必须用品，我国庞大的人口数量构成了洗发水市场的巨大需求。在日化行业中，洗护发产品利润丰厚，虽面临降价及行业平均利润下降的威胁，但是其巨大的市场需求量依然吸引了众多的供应商。目前我国洗护发用品依然处于供过于求的状况。众多的国内外生产商以及旗下琳琅满目的产品系列充斥着整个市场。</p></div></div><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>你怎样看待材料二中“消费者对品牌差异感的下降” 这一问题。</span></div>    <div class="hide-content"><p>若 X、 Y 两种商品可以互相替代， 在Ⅹ 商品的价格上涨时， 消费者至少会将原来准备消费X的一部分支出转向可替代品Y，此时Exy﹥0。（2）目前市场上存在的各种洗护发用品间同质化日趋显著，过剩经济的来临与产品同质化，使得消费者对价格更为敏感。众所周知，一些主要的国外洗护发品牌定位于中高档市场，当本土其他同质产品以其价格优势进入该市场时，必将会抢夺其原有的市场占有率。正如材料二中所说在洗发水领域的一些主要品牌正在逐步失去它们的市场份额，而消费者购买的品牌总数却在一直增长。而材料中“有人说这个事实证明消费者对品牌差异的感觉正在下降。”，这一事实产生的根本原因并不是因为消费者对品牌差异感的下降，而正是因为这些产品之间存在的这种替代关系才导致了这种结果。经济学中需求交叉弹性理论正好解释了这一现象。</p></div></div><h2 id="运筹学2017-04"><a class="markdownIt-Anchor" href="#运筹学2017-04"></a> 运筹学(2017-04)</h2><h3 id="选择-填空题-2"><a class="markdownIt-Anchor" href="#选择-填空题-2"></a> 选择、填空题</h3><ol><li>单纯形法求解线性规划问题时，若要求得基础解，应当令<mark>非基变量全为0</mark></li><li>在线性规划中，设约東方程的个数为m，变量个数为n,m&lt;n时，可以把变量分为基变量和非基变量两部分，基变量的个数为<mark>m</mark>个</li><li>网络图中，在一定的生产技术条件下，完成一项活动或一道工序所需的时间，称为<mark>作业时间</mark></li><li>任意一个向量，如果它内部的各个元素均为非负数，且总和等于1,则该向量称之为<mark>概论向量</mark></li><li>在运筹学和管理科学领域里，模拟得到愈来愈广泛的应用，但是，我们也应当注意包含在模拟中的一些缺点，如一个<mark>良好的模拟系统可能是非常昂贵的</mark></li><li>一般而论，1~3年内的经济预测为<mark>中期预测</mark></li><li>可用于不确定条件下决策类型的是<mark>最小最大遗憾值决策标准</mark></li><li>线性规划的基本特点是模型中的<mark>线性函数</mark></li></ol>]]></content>
    
    <summary type="html">
    
      八月自考考前突击-20200728
    
    </summary>
    
    
      <category term="自学考试" scheme="https://extheor.github.io/categories/%E8%87%AA%E5%AD%A6%E8%80%83%E8%AF%95/"/>
    
      <category term="考前突击" scheme="https://extheor.github.io/categories/%E8%87%AA%E5%AD%A6%E8%80%83%E8%AF%95/%E8%80%83%E5%89%8D%E7%AA%81%E5%87%BB/"/>
    
    
      <category term="考前突击" scheme="https://extheor.github.io/tags/%E8%80%83%E5%89%8D%E7%AA%81%E5%87%BB/"/>
    
  </entry>
  
  <entry>
    <title>八月自考考前突击-20200727</title>
    <link href="https://extheor.github.io/posts/edfc881f/index.html"/>
    <id>https://extheor.github.io/posts/edfc881f/index.html</id>
    <published>2020-07-21T13:12:22.000Z</published>
    <updated>2020-07-31T12:43:30.116Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@v0.1/Hexo/assets/css/APlayer.min.css"><script src="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@v0.1/Hexo/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@v0.1/Hexo/assets/js/Meting.min.js"></script><h2 id="马克思主义基本原理概论模拟三"><a class="markdownIt-Anchor" href="#马克思主义基本原理概论模拟三"></a> 马克思主义基本原理概论(模拟三)</h2><h3 id="选择题"><a class="markdownIt-Anchor" href="#选择题"></a> 选择题</h3><ol><li>马克思主义是时代的产物。马克思、恩格斯所处的历史时代及其提出的各项任务，为马克思主义的产生提供了<mark>客观条件</mark></li><li>在唯物辩证法的基本范畴中，本质和现象反映了事物的<mark>根本性质</mark>和表面特征间的关系</li><li>早期空想社会主义的代表作之一《太阳城》的作者是<mark>意大利的康博内拉</mark></li></ol><h3 id="背诵题"><a class="markdownIt-Anchor" href="#背诵题"></a> 背诵题</h3><ol><li><p>简述马克思主义科学体系的主要组成部分及其内在联系</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li>马克思主义理论体系的三个主要组成部分是马克思主义哲学、马克思主义政治经济学、科学社会主义。（3 分）</li><li>马克思主义的各个组成部分，是一个具有内在逻辑联系的科学体系，其中马克思主义哲学是科学的世界观和方法论，政治经济学是马克思主义的理论基础，处于核心地位的则是科学社会主义理论。这三者之间相互渗透、互相补充，构成统一的马克思主意学说（3 分）</li></ol></div></div></li><li><p>简述发挥主观能动性与尊重客观规律的原理及其现实意义</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li>原理</li></ol><ul><li>尊重客观规律是正确发挥主观能动性的前提。只有正确认识客观规律按规律办事，才能有效地改造世界<ul><li>认识和利用客观规律必须充分发挥人的主观能动性。只有充分发挥人的主观能动性，才能把隐藏在事物内部的必然规律掲示出来，才能以正确的理论指导实战</li></ul></li></ul><ol start="2"><li>现实意义：<ul><li>在社会主义现代化建设中，要把发挥人的主观能动性和尊重客观规律结合起来，把高度的实践热情与科学的求实态度结合起来</li><li>充分发挥广大人民群众的积极性，按客观规律办事。</li><li>既要从实际出发，按客观规律办事，又要解放思想、开拓创新，充分发挥主观能性。</li></ul></li></ol></div></div></li><li><p>简述发达市场经济国家调控货币量的主要方法</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>一是公开市场业务，即由中央银行在货币资本市场上公开出售或收购有价证券，以调节流通中的货币量。</p><p>二是最低准备金率政策，即通过调整商业银行在中央银行的准备金率，来调节流通中的货币量。</p><p>三是再贴现率政策，即通过调整商业银行到中央银行再贴现票据的利率，来调节流通中的货币量。</p></div></div></li><li><p>简述社会革命和社会改革的联系与区别</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li><p>联系</p><p>社会革命与社会改革是社会运动的两种基本形式，都是为了解决生产力与生产力关系、经济基础与上层建筑的矛盾，推动社会发展的历史运动形式</p></li><li><p>区别</p><ul><li>社会革命是根本质变，用进步的社会制度代替旧的社会制度；社会改革则是部分质变，不改变社会制度的根本性质。</li><li>社会革命是被统治阶级发动的，为了推翻反动统治的国家政权，建立新的政权；社会改革则是统治阶级发动的，为了维护和巩固统治地位。</li><li>社会革命要通过暴力的形式；社会改革一般不需要。</li></ul></li></ol></div></div></li><li><p>为什么说社会主义民主是新型的民主</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li>社会主义民主是人类社会最高类型的民主，与以往剥削阶级的民主在性质上根本不同。是绝大多数人的民主，它的本质是人民当家作主。</li><li>社会主义民主首先是社会主义的国家制度。国体上，社会主义国家是工人阶级和广大劳动人民当家作主的国家；政体上，社会主义国家采取民主共和国的形式。</li><li>社会主义民主是目的和手段的统一。社会主义民主是为社会主义经济基础服务的手段，以实现人民当家作主为目的。</li></ol></div></div></li><li><p>论述感性认识和理性认识的辩证关系，并说明割裂二者的统一会导致的错误</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li><p>辩证证关系：感性认识和理性认识是认识的两个阶段，它们既相互区别，又相互联系，是对立统一的关系</p><ul><li><p>区别</p><p>感性认识是认识的初级阶段，是对事物的片面、现象和外部联系的反映；理性认识是认识的高级阶段，对事物的全体、本质和内部联系的反映。</p></li><li><p>联系</p><p>理性认识依赖于感性认识；感性认识有待发展到理性认识；感性认识和理性认识相互渗透。</p></li></ul></li><li><p>割裂二者统一性会犯经验主义和教条主义的错误：</p><ul><li>经验主义夸大个别、局部的经验，否认科学理论的指导意义。</li><li>教条主义夸大理论和书本知识的作用，把理论当成教条</li></ul></li></ol></div></div></li><li><p>试述价值规律的内容及其作用</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li>内容：商品的价值由生产商品的社会必要劳动时间决定，商品交换以价值为基础，实行等价交换</li><li>自身的作用：<ul><li>商品按照价值进行交换的客观必然性的实现。这种必然性越是得到贯彻，就表明价值规律在发挥作用，商品经济得到顺利的发展</li><li>忽视或否定价值规律的客观作用，阻碍商品经济的发展。</li></ul></li><li>对社会经济发展的作用<ul><li>自发地调节生产资料和劳动力在社会生产各部门之间分配的比例</li><li>自发促进社会生产力发展</li><li>会引起商品生产者的分化。</li></ul></li></ol></div></div></li><li><p>试述垄断产生以后。竞争为什么还存在？以及垄断阶段和竞争阶段竞争的不同</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li>垄断产生以后，竞争依旧存在的原因<ul><li>竞争是商品经济存在的条件和核心机制，有商品经济就有竞争</li><li>未形成垄断的部门及大量的非垄断企业之间存在激烈的竟争关系，即使是形成垄断的部门，本质上依然是相互竞争的关系。</li></ul></li><li>垄断阶段和竞争阶段竞争的不同：<ul><li>目的不同，垄断时期竞争的目的是获取高额垄断利润</li><li>手段有了新的变化，党争手段层出不穷。</li><li>效烈程度和后果不同，垄断阶段竞争的激烈和持久及其造成的破坏大大超过自由竞争阶段。</li><li>范围不同，垄断阶段的竞争不仅在国内还在国外，除了经济领域，还在政治、军事、文化领域竞争。</li></ul></li></ol></div></div></li></ol><h2 id="计算机网络原理模拟五"><a class="markdownIt-Anchor" href="#计算机网络原理模拟五"></a> 计算机网络原理(模拟五)</h2><h3 id="选择-填空题"><a class="markdownIt-Anchor" href="#选择-填空题"></a> 选择、填空题</h3><ol><li><p>拓扑结构中优点是所需电缆短，可以使用光纤，易于避免冲突的是<mark>环形拓扑结构</mark></p></li><li><p>传输时不必建立电路连接，也不具备切割数据能力的交换技术是<mark>报文技术</mark></p></li><li><p>当传输的报文过多而导致交换设备的存储空间不足时，结点对继续传输而来的报文的处理是<mark>丢弃</mark></p></li><li><p>在OSI参考模型中，传输层中的协议数据单元（PDU)称为<mark>报文段</mark></p></li><li><p>顶级域名arpa所属的域名是<mark>基础结构域名</mark></p></li><li><p>HTTP的组成部分不包括<mark>结尾行</mark></p></li><li><p>FTP用于传输文件的数据连接，其对应FTP服务器熟知端口<mark>20</mark></p><blockquote><p>文件传输使用20，交换信息使用21</p></blockquote></li><li><p>一个字段中包含的字节数是<mark>2</mark></p></li><li><p>一个字节包含的位数是<mark>8bit</mark></p></li></ol><h3 id="简答题"><a class="markdownIt-Anchor" href="#简答题"></a> 简答题</h3><ol><li><p>按照从下往上的顺序写出OSI参考模型各分层的名称</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li>物理层</li><li>数据链路层</li><li>网络层</li><li>传输层</li><li>会话层</li><li>表示层</li><li>应用层</li></ol></div></div></li><li><p>简述典型的HTTP请求方法及其作用</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>HTTP 典型的请求方法有 GET、HEAD、POST、OPTION、PUT 等。</p><ol><li><strong>GET</strong>：请求读取由 URL 所标识的信息，是最常见的方法。</li><li><strong>HEAD</strong>：请求读取由 URL 所标识的信息的首部，即无须在响应报文中包含对象</li><li><strong>POST</strong>：给服务器添加信息（例如，注释）。</li><li><strong>OPTION</strong>：请求一些选项的信息。</li><li><strong>PUT</strong>：在指明的 URL 下存储一个文档</li></ol></div></div></li><li><p>简述为UDP套接字分配端口号的两种方法</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>一种方法是创建一个 UDP 套接字时，传输层自动地为该套接字分配一个端口号（通常从 1024~65535 分配一个端口号）（2 分），该端口号当前未被该主机中任何其他 UDP 套接字使用（1 分）；另一种方法是在创建一个 UDP 套接字后，通过调用 bind（）函数为该套接字绑定一个特定的端口号（2 分）。</p></div></div></li><li><p>简述拥塞控制的概念以及拥塞控制算法</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>拥塞控制就是通过合理调度、规范、调整向网络中发送数据的主机数量、发送速率或数据量，以避免拥塞或尽快消除已发生的拥塞。TCP的拥塞控制算法包括了</p><ol><li>慢启动</li><li>拥塞避免</li><li>快速重传</li><li>快速恢复</li></ol></div></div></li><li><p>简述CSMA/CD的三种工作状态</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li><p>传输状态</p><p>当有一个通信站站使用信道时，其他站禁止使用</p></li><li><p>竞争状态</p><p>所有通信站都有权尝试对信道的使用权</p></li><li><p>空闲状态</p><p>没有通信站使用信道</p></li></ol></div></div></li><li><p>简述构成一条虚电路的要素。</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li>从源主机到目的主机之间的一条路径</li><li>该路径上的每条链路各有一个虚电路标识</li><li>该路径上每台分组交换机的转发表中记录虚电路表示的接续关系。</li></ol></div></div></li></ol><h2 id="管理经济学模拟卷三"><a class="markdownIt-Anchor" href="#管理经济学模拟卷三"></a> 管理经济学(模拟卷三)</h2><h3 id="选择题-2"><a class="markdownIt-Anchor" href="#选择题-2"></a> 选择题</h3><ol><li>一种商品的价格下降会导致其替代品的<mark>需求量减少</mark></li><li>以下对于无差异曲线的描述，错误的是<mark>在同一坐标平面上的任意两条无差异曲线不会相交</mark></li><li>在政府的价格管制中，试图制定一个更低的“公平价格”以消除经济利润时，应使用按<mark>平均成本定价</mark></li><li>属于寡头垄断市场的产品是<mark>汽车</mark></li><li>曲折的需求曲线模型说明<mark>为什么均衡价格是刚性的</mark></li></ol><h3 id="文字题"><a class="markdownIt-Anchor" href="#文字题"></a> 文字题</h3><ol><li><p>简述影响供给的主要因素。</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li>商品的价格。</li><li>生产成本。</li><li>替代品的价格。</li><li>生产者对价格的期望。</li></ol></div></div></li><li><p>简述边际收益递减规律的内容和前提。</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>边际收益递减规律也称报酬递减法则，是指在技术水平不变的条件下，当把一种可变的生产要素连续地、等量地投入到一种或几种数量不变的生产要素中时，最初这种生产要素的增加会使产量的增量（即边际产量）增加，但当它的增加超过一定数量之后，继续增加该要素的投入，所得到的产量的增量（即边际产量）是递减的，最终还会使产量绝对减少。这一规律是以生产技术状况既定不变为前提。这一规律是以一种要素可变，而其他要素的投入量不变为前提。</p></div></div></li><li><p>请简述完全竞争企业和垄断竞争企业最终的长期均衡状态的区别。</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li>二者的需求曲线与边际收益曲线的位置不同。</li><li>二者的平均收益曲线或需求曲线虽然都与平均成本曲线相切，但二者切点的位置不同。</li><li>二者的成本构成不同。</li></ol></div></div></li><li><p>简述撇脂定价法的优点。</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>撇脂定价法的优点在于：</p><ol><li>新上市的产品，常常缺少同类的替代产品，其需求价格弹性相对较小。这时企业可以趁竞争者尚未进入之际，利用消费者的求新心理，以较高的价格抬高产品身价，有助于新产品的销售。同时，较高的价格容易给消费者造成商品质量优良的感觉，容易获得消费者的注意。</li><li>由于产品价格高出成本较多，有条件实行消费者差别定价。</li><li>企业在产品价格方面有较大的回旋余地。</li></ol></div></div></li><li><p>简述无约束的最优化规则。</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>边际利润为正值时，就应当扩大业务量；边际利润为负值时，就应当减少业务量；边际利润为零时，业务量最优，此时利润最大。</p></div></div></li></ol><h3 id="综合题"><a class="markdownIt-Anchor" href="#综合题"></a> 综合题</h3><div class="hide-toggle" style="border: 1px solid  #ebf9ed"><div class="hide-button toggle-title" style="background-color:  #ebf9ed;"><i class="fas fa-caret-right fa-fw"></i><span>材料一</span></div>    <div class="hide-content"><p>宝洁和联合利华都是日化巨头，为了争夺市场，联合利华开始了对业务的调整和收缩，把中国的业务收编成三大块：家庭及个人护理用品、食品及饮料、冰淇淋。在中国建立合资加工厂，降低运输费用；重新选择和调整原料材料的采购价格，使包装材料费用大约下降了20%。市场反应显示，联合利华的降价不但使得它得以取代宝洁在中国市场的行业老大的地位，而且对宝洁的市场根基也产生了巨大的震撼，大批顾客分流而去，使得宝洁公司的销量急转直下。并且，由于宝洁、联合利华奉行的品牌经营的战略，由此留下了一个巨大的市场空洞一一市场缺乏中低档价位产品。而今，随着一些主打中低档价位产品的企业进入市场，宝洁的销售通路被进一步蚕食。迫于此局面，宝洁公司不得不实施降价措施。宝洁公司从推出9。9元新飘柔，到2006年年底飘柔精华护发素全线7。3折、潘婷护发精华素降价19%的促销广告在央视1套、卫视、地方台等黄金时段狂轰乱炸，标志着宝洁公司全面陷入洗发护发行业价格战的泥潭之中。</p></div></div><div class="hide-toggle" style="border: 1px solid  #ebf9ed"><div class="hide-button toggle-title" style="background-color:  #ebf9ed;"><i class="fas fa-caret-right fa-fw"></i><span>材料二</span></div>    <div class="hide-content"><p>产品对生产工艺的高要求也让宝洁公司曾经面临多个棘手的挑战。在宝洁公司中，生产众多产品的设备系统非常复杂，而且需要几百万美金的资金投入。因此，尽可能地提高生产设备系统的利用率对降低生产成本来说至关重要。可是，由于生产系统的复杂性，公司很难将生产设备系统的运行稳定性维持在具有财务吸引力的水平。所幸的是，宝洁公司找到了全球最顶尖的统计软件公司SAS的高端质量管理统计分析和模拟软件JMP作为合作伙伴，共同研究生产线不同运行时刻之间的关系和规律。</p><p>JMP是全球质量管理和卓越运营领域著名的软件品牌。JMP软件易学易用的特点和超强的计算能力让不同技术水平的员工都可以进行统计分析，省去了原先高昂的培训成本和时间。新技术的引进让宝洁公司大幅提高了“量化思考，科学决策”的推广速度和效率。</p><p>目前，宝洁公司不再像以前那样需要以年为单位，而是以月为单位就可以进行生产线的调试。一般来说，导入一种新产品或新技术时，只需30天到60天的时间即可将生产线恢复到甚至超出调试前的生产质量水平。生产设备系统的实际有效运行率也从原先的60%上升到现在的85%。另外，据公司媒体透露，这种基于JMP软件的科学管理方法已经成功地推广到一百多家分公司，由此为整个宝洁公司节约了十多亿美金资金。</p></div></div><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>根据材料一，分析宝洁公司对其产品进行先后降价的原因。（从表象与根本原因两个角度来解析）</span></div>    <div class="hide-content"><ol><li><p>表象降价原因：</p><ul><li><p>联合利华低成本进攻宝洁。</p></li><li><p>遭遇二三线品牌围攻。</p><p>由于宝洁、联合利华奉行的品牌经营的战略，由此留下了一个巨大的市场空洞一一市场缺乏中低档价位产品。这些生产中低档产品的企业的进入进一步蚕食了宝洁的销售通路。因为中低档更能为经销商带来利润，巨人宝洁不得不启动降价策略来收复失地。</p></li></ul></li><li><p>根本原因</p><p>导致宝洁降价的根本原因还在于其商品在市场上受到的需求关系的影响，各种洗护发产品之间替代性较强，这类产品在价格变化时，引起需求量的变动比较大，属于富有弹性的商品。因此，当宝洁集团对其商品进行降价时，会增加该商品的需求量。从而能从市场上抢夺原来流失的市场份额。</p></li></ol></div></div><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>结合材料二，谈谈如何通过减少企业成本来增加市场竞争力。</span></div>    <div class="hide-content"><ol><li>π（利润）=TR（总收益）-TC（总成本）；TR=P（价格）×Q（销量）；C（成本）=FC（固定成本）+VC（变动成本）。</li><li>由上述公式我们可以得知，要想提高企业的利润，可以通过控制成本来争取竞争优势。而成本又分为可变成本和固定成本。固定成本不会随产量的增减而改变，变动成本则随着产量的变化而改变。作为一个洗护发用品生产商，可以通过规模化经营来降低成本，可以发现新的廉价的原材料、采用扁平化的销售渠道以节省中间费用、还可引用新的生产技术提高生产效率。</li><li>宝洁公司引进新的生产技术JMP为公司节省10多亿美元的成本，这就是一个典型的例子。有了更为先进的软件管理系统，公司生产新产品的成本就降低了许多。另外，在产品促销上不要盲目追随名人广告效益。昂贵的广告费用会增加产品成本。</li></ol></div></div><h2 id="运筹学200404"><a class="markdownIt-Anchor" href="#运筹学200404"></a> 运筹学(200404)</h2><h3 id="选择-填空题-2"><a class="markdownIt-Anchor" href="#选择-填空题-2"></a> 选择、填空题</h3><ol><li>下列步骤中，不属于应用运筹学进行決策过程的是选择<mark>输入资料</mark></li><li>在执行方针政策或实施计划的过程中，需要作出的决策，属于<mark>控制型决策</mark></li><li>决策树和贝叶斯标准都可以用在<mark>风险的条件下决策</mark></li><li>EOQ模型用于解决管理中的项目进度计划安排问题</li><li>对于概率矩阵P，当n-&gt;∞时，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>P</mi><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">P^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span>称之为P的<mark>固定概率矩阵</mark></li></ol>]]></content>
    
    <summary type="html">
    
      八月自考考前突击-20200727
    
    </summary>
    
    
      <category term="自学考试" scheme="https://extheor.github.io/categories/%E8%87%AA%E5%AD%A6%E8%80%83%E8%AF%95/"/>
    
      <category term="考前突击" scheme="https://extheor.github.io/categories/%E8%87%AA%E5%AD%A6%E8%80%83%E8%AF%95/%E8%80%83%E5%89%8D%E7%AA%81%E5%87%BB/"/>
    
    
      <category term="考前突击" scheme="https://extheor.github.io/tags/%E8%80%83%E5%89%8D%E7%AA%81%E5%87%BB/"/>
    
  </entry>
  
  <entry>
    <title>八月自考考前突击-20200725</title>
    <link href="https://extheor.github.io/posts/3f2e933/index.html"/>
    <id>https://extheor.github.io/posts/3f2e933/index.html</id>
    <published>2020-07-21T13:12:21.000Z</published>
    <updated>2020-07-31T12:43:30.115Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@v0.1/Hexo/assets/css/APlayer.min.css"><script src="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@v0.1/Hexo/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@v0.1/Hexo/assets/js/Meting.min.js"></script><h2 id="马克思主义基本原理概论模拟一"><a class="markdownIt-Anchor" href="#马克思主义基本原理概论模拟一"></a> 马克思主义基本原理概论(模拟一)</h2><h3 id="选择题"><a class="markdownIt-Anchor" href="#选择题"></a> 选择题</h3><ol><li>我们党制定和执行独立自主、自力更生以及对外开放方针的理论基础是<mark>事物发展的内因和外因瓣证关系的原理</mark></li><li>在现代生产力系统中，分工协作和预测決策属于<mark>运筹性的综合因素</mark></li><li>资本主义国家宏观经济管理与调节的总任务是<mark>促进市场总供需平衡</mark></li></ol><h3 id="背诵题"><a class="markdownIt-Anchor" href="#背诵题"></a> 背诵题</h3><ol><li><p>简述马克思主义的科学内涵和理论特征</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li>马克思主义是由马克思、恩格斯创立的，为他们的后继者所发展的，以反对资本主义、建设社会主义和共产主义为目标的科学的理论体系。或者说，马克思主义是关于无产阶级和人类解放的科学。</li><li>马克思主义的理论持征是以实践为基础的科学性和革命性的统一。<ul><li>马克思主义的科学性在于它能揭示客观规律，能动地改造世界；在于它的深刻性；还在于它经受了实践的检验并随看实践的发展而不断发展。</li><li>马克思主义的革命性集中表现为它的彻底的批判精神，还表现在它具有鲜明的政治立场</li></ul></li></ol></div></div></li><li><p>简述剩余价值生产的两种基本方法</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>绝对剩余价值生产和相对剩余价值生产是资本主义剩余价值生产的两种基本方法。</p><ol><li>绝对剩余价值是在必要劳动时间不变的条件下，由于工作日的绝对延长而生产的剩余价值。增加绝对剩余价值的方法有延长工作日和提高劳动强度</li><li>相对剩余价值是在工作日长度不变的条件下，由于缩短必要劳动时间、相应延长剩余劳动时间而产生的剩余价值。相对剩余价值生产以社会劳动生产率提高为条件的</li></ol></div></div></li><li><p>简述实践是认识的基础</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>实践的观点是辩证唯物认识论的第一和基本的观点。实践是认识的基础，对认识具有决定作用，具体表现在：</p><ol><li><p>实践是认识的来源</p></li><li><p>实践是认识发展的动力</p></li><li><p>实践是检验真理性的唯一标准</p></li><li><p>实践是认识的目的</p></li></ol></div></div></li><li><p>简述货币的本质及其职能</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li>货币的本质是充当一般等价物的商品，它体现商品生产者的经济关系。</li><li>货币的职能主要有：价值尺度、流通手段、储藏手段、支付手段和世界货币。其中价值尺度和流通手段是货币最基本的职能。</li></ol></div></div></li><li><p>为什么说马克思主义政党是新型的革命政党</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li>马克思主义政党是科学社会主义与工人运动相结合的产物</li><li>马克思主义政党是工人阶级的先锋队。体现马克思主义政党的阶级性和先进性。</li><li>马克思主义政党是为实现共产主义而奋斗的党，其最高纲领是实现共产主义。</li><li>马克思主义政党是为人民谋取利益的政党，根本宗旨是为人民群众谋取利益</li><li>马克思主义政党是按照民主集中制原则组织起来的团结一致的党，还是有坚强纪律和战斗精神的党。</li></ol></div></div></li><li><p>简述两边和质变的辩证关系原理及其现实意义。</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li><p>原理：量变和质变是辩证统一的。</p><ul><li>量变是质变的必要准备。质变以量变为前提和基础，质变由量变规定其性质和方向；</li><li>质变是量变的必然结果。量变达到一定的程度必然引起质变。</li><li>量变和质变相互渗透。质变为新质基础上的量变开拓道路；在总的量变过程中有部分质变。</li></ul></li><li><p>现实意义：质量互变规律要求我们在社会主义建设和改革过程中，把远大的理想和目标同有步骤、分阶段地踏实苦干、稳步前进的精神结合起来，反对急于求成。</p></li></ol></div></div></li><li><p>试述社会形态发展的统一性和多样性的含义及表现</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li><p>统一性是指处于同一社会形态的不同国家和民族的历史发展具有的共同性、普遍性</p></li><li><p>统一性的表现：</p></li></ol><ul><li><p>社会形态发展的纵向统一性，是指各个国家和民族的历史，一般都应从低级到高级依次历经原始社会、奴隶社会、封建社会、资本主义社会、共产主义社会五种社会形态。</p></li><li><p>社会形态发展的横向统一性，是指处于同一社会形态的不同国家和民族的历史发展既有的共同性、普遍性</p><ol start="3"><li><p>多样性是指不同国家和民族的历史发展具有不同的特点。</p></li><li><p>多样性的表现：</p><ul><li>处于同一社会形态的不同国家和民族的历史有各自的特点。</li><li>各个国家在不同的社会形态中具有的典型意义不同。</li><li>由较低社会形态向较高转变时，采取的过波形式各有特点</li><li>由于特殊的历史条件，有些国家和民族可能超越社会形态转变</li></ul></li></ol></li></ul></div></div></li><li><p>试述垄断资本主义的基本经济特征及其发展变化。</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li>垄断资本主义的经济特征是：<ul><li>垄断在经济生活中占统治地位。</li><li>金融资本和金融寡头的统治。</li><li>资本输出在经济生活中占重要地位。</li><li>国际垄断同盟在经济上瓜分世界。</li><li>垄断资本主义列强瓜分和重新瓜分世界。</li></ul></li><li>发展变化：<ul><li>二战后，私人垄断资本主义进一步发展为国家垄断资本主义，即垄断资本与国家政权相结合的资本主义。国家的力量日益深入社会经济生活的各个领域，国家垄断代替私人垄断成为当代资本主义发展的新形式、新特点</li><li>垄断资本主义的发展，促进了生产社会化、国际化程度的提高。加强了各国间的经济联系，形成了经济全球化的发展趋势。当代资本主义在生产力、生产关系和上层建筑各方面，较之自由竞争和私人垄断资本主义时期，发生了很多变化。</li></ul></li></ol></div></div></li></ol><h2 id="计算机网络原理模拟三"><a class="markdownIt-Anchor" href="#计算机网络原理模拟三"></a> 计算机网络原理(模拟三)</h2><h3 id="选择-填空题"><a class="markdownIt-Anchor" href="#选择-填空题"></a> 选择、填空题</h3><ol><li>在计算机网络协议三要素表中，定义实体之间交换信息的格式与结构的是<mark>语法</mark></li><li>在OSI参考模型中，网络层中的协议数据单元（PDU）称为<mark>分组</mark></li><li>在基带传输编码中，每个中间时刻都进行跳变，若本次周期开始时与上次周期结束时的电平信号相同则本次周期内表示为0,否则表示为1,则该编码类型属于<mark>差分曼彻斯特码</mark></li><li>最高具有54Mbit/s速率且工作在2.4GHz的无线局域网标准是<mark>IEEE 802.11g</mark></li><li>网络安全通信所需的基本属性不包括<mark>接入确认</mark></li><li>连接两个结点的链路被称为<mark>跳</mark></li><li>表示单位时间内，主机间传输数据的实际速率的是<mark>吞吐量</mark></li><li>web中URL地址的主要组成部分包括IP地址和对象的<mark>路径名</mark></li></ol><h3 id="简答题"><a class="markdownIt-Anchor" href="#简答题"></a> 简答题</h3><ol><li><p>简述CSMA协议中p-坚持CSMA的工作机制</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>若通信站内有数据发送，先监听信道；若信道空闲，则有概论P的可能在最近时隙开始时刻发送数据，有概率1-P的可能延迟到下一个时隙发送；若下一个时隙仍空闲，则重复该过程。</p></div></div></li><li><p>简述差错控制的概念以及几种基本方式</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>差错控制就是通过差错编码技术，实现对信息传输差错的检测，并基于某种机制进行差错纠正和处理。</p><ol><li>检错重发</li><li>前向纠错</li><li>反馈校检</li><li>检错丢弃</li></ol></div></div></li><li><p>简述CSMA协议中非坚持CSMA的工作机制</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>若通信站有数据发送，先监听信道；若发现信道空闲，则立即发送数据；若发现信道忙，则等待一个随机事件。然后重新监听信道，尝试发送数据。</p></div></div></li><li><p>简述CSMA协议中1-坚持CSMA的工作机制</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>若通信站有数据发送，先侦听信道；若信道空闲，则立即发送数据；若信道忙，则继续侦听信道，直到发现信道空闲，立即发送数据</p></div></div></li><li><p>简述地址协议ARP的作用和基本思想</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li>ARP的作用：根据本网内目的主机或默认网关的IP地址获取其MAC地址</li><li>ARP的基本思想：在每一台主机中设置专用内存区域，称为ARP表，存储该主机所在局域网中其他主机和路由器的IP地址与MAC地址的映射关系，并且这个映射表要经常更新；ARP通过广播ARP查询报文，来询问某目的IP地址对应的MAC地址，即知道本网内某主机的IP地址，可以查询的得到MAC地址。</li></ol></div></div></li><li><p>简述Cookie最常见的几点用途</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li>网站可以利用 Cookie 的 ID 来准确统计网站的实际访问人数等数据。</li><li>网站可以利用 Coo 限制某些特定用户的访问。</li><li>网站可以存储用户访问过程中的操作习惯和偏好，有针对性地为用户提供服务，提升用户体验感。</li><li>记录用户登录网站使用的用户名、密码等信息，使用户多次登录时，避免重复输入这些信息，实现快速登录</li><li>电子商务网站利用 Cookie 信息可以实现 “购物车” 功能，</li></ol></div></div></li></ol><h3 id="计算题"><a class="markdownIt-Anchor" href="#计算题"></a> 计算题</h3><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1">题目</button></li><li class="tab"><button type="button" data-href="#test1-2">答案</button></li><li class="tab"><button type="button" data-href="#test1-3">解析</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><p>路由器A的路由表如表1所示，则经过路由聚合后，路由器A的路由表为表2，请完善表2；</p><p>表一：</p><table><thead><tr><th style="text-align:center">网络地址</th><th style="text-align:center">下一跳地址</th><th style="text-align:center">接口</th></tr></thead><tbody><tr><td style="text-align:center">1.1.0.64/26</td><td style="text-align:center">1.1.0.1</td><td style="text-align:center">A</td></tr><tr><td style="text-align:center">1.1.0.128/26</td><td style="text-align:center">1.1.0.1</td><td style="text-align:center">A</td></tr><tr><td style="text-align:center">1.1.0.192/26</td><td style="text-align:center">1.1.0.1</td><td style="text-align:center">B</td></tr></tbody></table><p>表二：</p><table><thead><tr><th style="text-align:center">网络地址</th><th style="text-align:center">下一跳地址</th><th style="text-align:center">接口</th></tr></thead><tbody><tr><td style="text-align:center">（1）</td><td style="text-align:center">1.1.0.1</td><td style="text-align:center">（2）</td></tr><tr><td style="text-align:center">1.1.0.192/26</td><td style="text-align:center">1.1.0.1</td><td style="text-align:center">（3）</td></tr></tbody></table><button type="button" class="tab-to-top" onclick="scrollToDest($(this).parents('.tabs'),65)"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><p>（1）：1.1.0.0/24</p><p>（2）：A</p><p>（3）：B</p><button type="button" class="tab-to-top" onclick="scrollToDest($(this).parents('.tabs'),65)"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-3"><p>对于第一个空（1）来说，下边已经出现了1.1.0.192/26网络地址的出口，那么第一个空就是1.1.0.64/26与1.1.0.128/26两个网络地址的合地址即将两个地址合并为一个网络地址。</p><blockquote><p>两个ip地址都是26位掩码，也就是后八位前两位为掩码位。</p></blockquote><p>1.1.0.64/26：  0000 0001 . 0000 0001 . 0000 0000 . <font color='red'>01</font>00 0000</p><p>1.1.0.128/26：0000 0001 . 0000 0001 . 0000 0000 . <font color='red'>10</font>00 0000</p><blockquote><p>将不同的用二进制展开，上下对应，找出相同位置处的数字，若数字相同，则将超网的相同位上置与其位上相同的数字，即如果全为0，则置0，全为1，则置为1；如相同位置处的数字有不同，则在超网的相应位上为0。</p></blockquote><button type="button" class="tab-to-top" onclick="scrollToDest($(this).parents('.tabs'),65)"><i class="fas fa-arrow-up"></i></button></div></div></div><div class="tabs" id="test2"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test2-1">题目</button></li><li class="tab"><button type="button" data-href="#test2-2">答案</button></li><li class="tab"><button type="button" data-href="#test2-3">解析</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test2-1"><p>已知某路由器的路由表如下，则下列的IP地址将会从哪个接口发送出去；</p><table><thead><tr><th style="text-align:center">网络地址</th><th style="text-align:center">子网掩码</th><th style="text-align:center">接口</th></tr></thead><tbody><tr><td style="text-align:center">128.96.39.0</td><td style="text-align:center">255.255.255.128</td><td style="text-align:center">R1</td></tr><tr><td style="text-align:center">128.96.40.0</td><td style="text-align:center">255.255.255.192</td><td style="text-align:center">R2</td></tr><tr><td style="text-align:center">（默认）</td><td style="text-align:center">0.0.0.0</td><td style="text-align:center">R3</td></tr></tbody></table><ol><li>128.96.39.1</li><li>128.96.40.64</li><li>128.96.40.1</li></ol><button type="button" class="tab-to-top" onclick="scrollToDest($(this).parents('.tabs'),65)"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test2-2"><ol><li>R1</li><li>R2</li><li>R2</li></ol><button type="button" class="tab-to-top" onclick="scrollToDest($(this).parents('.tabs'),65)"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test2-3"><ol><li><p>128.96.39.1</p><p>128.96.39.1：       1000 0000 . 0110 0000 . 0010 0111 . 0000 0001</p><p>255.255.255.128：1111 1111 . 1111 1111 . 1111 1111 . 1000 0000</p><p>先与255.255.255.128掩码进行匹配，可以得到128.96.39.0与路由表中的网络地址匹配，因此在R1端口转发。</p></li><li><p>128.96.40.64</p><p>128.96.40.64：     1000 0000 . 0110 0000 . 0010 1000 . 0100 0000</p><p>255.255.255.128：1111 1111 . 1111 1111 . 1111 1111 . 1000 0000</p><p>先与255.255.255.128掩码进行匹配，可以得到128.96.40.0与路由表中的网络地址匹配，因此在R2端口转发。</p></li><li><p>128.96.40.1</p><p>128.96.40.1：       1000 0000 . 0110 0000 . 0010 1000 . 0000 0001</p><p>255.255.255.128：1111 1111 . 1111 1111 . 1111 1111 . 1000 0000</p><p>先与255.255.255.128掩码进行匹配，可以得到128.96.40.0与路由表中的网络地址匹配，因此在R2端口转发。</p></li></ol><button type="button" class="tab-to-top" onclick="scrollToDest($(this).parents('.tabs'),65)"><i class="fas fa-arrow-up"></i></button></div></div></div><div class="tabs" id="test3"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test3-1">题目</button></li><li class="tab"><button type="button" data-href="#test3-2">答案</button></li><li class="tab"><button type="button" data-href="#test3-3">解析</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test3-1"><p>已知路由器A的路由表如下表1所示，收到路由器B的RIP如表2所示，请完成路由器A更新后的路由表3；</p><p>表一：</p><table><thead><tr><th style="text-align:center">目的子网</th><th style="text-align:center">下一跳路由器</th><th style="text-align:center">跳数</th></tr></thead><tbody><tr><td style="text-align:center">x</td><td style="text-align:center">C</td><td style="text-align:center">4</td></tr><tr><td style="text-align:center">y</td><td style="text-align:center">I</td><td style="text-align:center">5</td></tr><tr><td style="text-align:center">x</td><td style="text-align:center">D</td><td style="text-align:center">6</td></tr><tr><td style="text-align:center">v</td><td style="text-align:center">C</td><td style="text-align:center">3</td></tr></tbody></table><p>表二：</p><table><thead><tr><th style="text-align:center">目的子网</th><th style="text-align:center">下一跳路由器</th><th style="text-align:center">跳数</th></tr></thead><tbody><tr><td style="text-align:center">x</td><td style="text-align:center">-</td><td style="text-align:center">1</td></tr><tr><td style="text-align:center">y</td><td style="text-align:center">E</td><td style="text-align:center">3</td></tr><tr><td style="text-align:center">f</td><td style="text-align:center">E</td><td style="text-align:center">3</td></tr><tr><td style="text-align:center">g</td><td style="text-align:center">D</td><td style="text-align:center">5</td></tr></tbody></table><p>表三：</p><table><thead><tr><th style="text-align:center">目的子网</th><th style="text-align:center">下一跳路由器</th><th style="text-align:center">跳数</th></tr></thead><tbody><tr><td style="text-align:center">x</td><td style="text-align:center">（1）</td><td style="text-align:center">（2）</td></tr><tr><td style="text-align:center">y</td><td style="text-align:center">（3）</td><td style="text-align:center">（4）</td></tr><tr><td style="text-align:center">z</td><td style="text-align:center">D</td><td style="text-align:center">6</td></tr><tr><td style="text-align:center">v</td><td style="text-align:center">C</td><td style="text-align:center">3</td></tr></tbody></table><button type="button" class="tab-to-top" onclick="scrollToDest($(this).parents('.tabs'),65)"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test3-2"><ol><li>B</li><li>2</li><li>B</li><li>4</li></ol><button type="button" class="tab-to-top" onclick="scrollToDest($(this).parents('.tabs'),65)"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test3-3"><p>X：收到路由器B的路由表中可以得知B路由到达X子网只需要1跳，即路由器B就在X子网。且更新后跳数2小于当前跳数4。因此路由器A的路由器X子网更新为下一跳路由B，跳数为2</p><p>Y：同理收到路由器B的路由表到达y子网只需要3跳，即更新后需要4跳且小于当前5跳，因此更新为下一跳路由B，跳数为4</p><button type="button" class="tab-to-top" onclick="scrollToDest($(this).parents('.tabs'),65)"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="管理经济学考前模拟卷-001"><a class="markdownIt-Anchor" href="#管理经济学考前模拟卷-001"></a> 管理经济学(考前模拟卷 -001)</h2><h3 id="选择题-2"><a class="markdownIt-Anchor" href="#选择题-2"></a> 选择题</h3><ol><li>效用理论的基本假设包括<mark>偏好次序</mark></li><li>当需求的收入弹性为负值时，则这种产品应为<mark>低档品</mark></li><li><mark>寻租</mark>是指个人和团体为了把别人的收入重新分配（或转移）到自己手中而花费资源来影响公共政策的行为。</li><li>垄断性竞争企业的竞争策略有<mark>促销竞争</mark></li><li>企业的定价目标主要是从收回产品成本的角度出发，它是在保本产销量的基础上制定的价格的方法是<mark>盈亏平衡定价法</mark></li></ol><h3 id="文字题"><a class="markdownIt-Anchor" href="#文字题"></a> 文字题</h3><ol><li><p>简述企业决策过程的基本步骤。</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li>明确企业面临的问题</li><li>确定企业目标；</li><li>列举解决企业问题的可能办法；</li><li>从列出的解决办法中选择最优方案；</li><li>执行最优方案。</li></ol></div></div></li><li><p>简述无差异曲线的性质。</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li>无差异曲线是向右下方倾斜的，同时其形状是凸向原点的。</li><li>任意两条无差异曲线之间不能相交。</li><li>离原点越远的无差异曲线所代表的效用水平越高。</li></ol></div></div></li><li><p>简述使用回归分析法时，进行成本数据的收集和整理时需注意的问题。</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li>由于估计短期成本函数只是估计变动成本，所以需要把成本区分为固定成本和可变成本；</li><li>调整投入的生产要素价格，需要使用当期的要素价格对成本数据进行调整；</li><li>应该收集时间序列成本数据，并且收集成本数据的观察期不宜太长。</li></ol></div></div></li><li><p>简述垄断市场应具有的条件。</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li>在一个行业或在某一特定的市场中，只有一家企业提供全部产品，没有竞争对手存在。</li><li>企业所生产和出售的商品没有相近的代用品，即垄断企业所生产的产品是被公认为独特的，是其他产品无法替代的。</li><li>其他任何企业进入该行业或市场都极为困难或不可能。</li></ol></div></div></li><li><p>简述差别价格的存在需要具备的条件。</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li><p>企业必须对价格有一定的控制力</p></li><li><p>企业必须能够区分不同消费者的支付意愿</p><ol start="3"><li>企业应该能够阻止套利的情况出现</li></ol></li></ol></div></div></li></ol><h2 id="运筹学200403"><a class="markdownIt-Anchor" href="#运筹学200403"></a> 运筹学(200403)</h2><h3 id="选择-填空题-2"><a class="markdownIt-Anchor" href="#选择-填空题-2"></a> 选择、填空题</h3><ol><li>运筹学的目的是通过<mark>定量分析</mark>为决策和揭露新问题提供数量依据</li><li>在一元线性回顾模型中，判断y与x之间的相关程度的方法是<mark>相关校检</mark></li><li>在决策树中，方块和圆圈表示<mark>结点</mark></li><li>在线性规划中，每个基变量组都有无穷多个<mark>特解</mark>。</li><li>对于市场份额问题，<mark>最初市场份额与平衡时的市场份额越相近</mark>，则达到平衡状态就越快</li><li>任何一个树中的线性必定等于点数减一</li></ol><h3 id="名词解释题"><a class="markdownIt-Anchor" href="#名词解释题"></a> 名词解释题</h3><p>参见<a href="https://mubu.com/doc/explore/33320" target="_blank" rel="noopener">各章名词解释</a></p>]]></content>
    
    <summary type="html">
    
      八月自考考前突击-20200725
    
    </summary>
    
    
      <category term="自学考试" scheme="https://extheor.github.io/categories/%E8%87%AA%E5%AD%A6%E8%80%83%E8%AF%95/"/>
    
      <category term="考前突击" scheme="https://extheor.github.io/categories/%E8%87%AA%E5%AD%A6%E8%80%83%E8%AF%95/%E8%80%83%E5%89%8D%E7%AA%81%E5%87%BB/"/>
    
    
      <category term="考前突击" scheme="https://extheor.github.io/tags/%E8%80%83%E5%89%8D%E7%AA%81%E5%87%BB/"/>
    
  </entry>
  
  <entry>
    <title>八月自考考前突击-20200726</title>
    <link href="https://extheor.github.io/posts/9afbb889/index.html"/>
    <id>https://extheor.github.io/posts/9afbb889/index.html</id>
    <published>2020-07-21T13:12:21.000Z</published>
    <updated>2020-07-31T12:43:30.116Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@v0.1/Hexo/assets/css/APlayer.min.css"><script src="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@v0.1/Hexo/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@v0.1/Hexo/assets/js/Meting.min.js"></script><h2 id="马克思主义基本原理概论模拟二"><a class="markdownIt-Anchor" href="#马克思主义基本原理概论模拟二"></a> 马克思主义基本原理概论(模拟二)</h2><h3 id="选择题"><a class="markdownIt-Anchor" href="#选择题"></a> 选择题</h3><ol><li>与时俱进是马克思主义的理论品质</li><li>辩证法和形而上学的区别在于<mark>如何回答世界的存在是怎样的问题</mark></li><li>唯物辩证法的总特征有两个，一个是发展的观点，另一个是<mark>联系</mark>的观点</li><li>社会意识具有复杂而精微的结构。从反映社会存在的程度和特点来看，社会意识包括社会心理和<mark>思想体系</mark></li><li>属于经济社会形态的是<mark>奴隶社会</mark></li><li>在社会存在与社会意识的关系问题上，两种根本对立的观点是<mark>历史唯物主义和历史唯心主义</mark></li><li>劳动力价值决定的一个重要特点是它包括历史和<mark>道德因素</mark></li><li>垄断资本实现其经济上统治的方式是<mark>参与制</mark></li><li>马克思主义政党区别于其他政党的主要标志是<mark>最高纲领是实现共产主义</mark></li></ol><h3 id="背诵题"><a class="markdownIt-Anchor" href="#背诵题"></a> 背诵题</h3><ol><li><p>简述真理与价值的对立统一</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li>真理与价值的对立表现在：真理体现的是认识与认识对象相符合的关系；而价值是指客体对人需要的满足，表示客体对人有用的属性。</li><li>真理与价值的统一表现在：<ul><li>真理能够指导社会实践成功地改造世界，以这种实践的成果来满足人的需要，这是真理所表现出来的价值属性。</li><li>真理与正确的价值观相一致，正确的价值观是在真理指导下形成的</li></ul></li></ol></div></div></li><li><p>简述商品价值量同劳动生产率的关系</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li>劳动生产率越高，一定时间内所生产的产品数量就越多，但所形成的价值总量不变，从而平均到单位商品内的价值量就越少。</li><li>反之，劳动生产率越低，单位商品的价值量就越大</li><li>所以，单位商品的价值量与包含在商品中的社会必要劳动量成正比，而与生产该商品的劳动生产率成反比。这是商品价值量同劳动生产率之间的基本关系</li></ol></div></div></li><li><p>简述共产主义远大理想和中国特色社会主义共同理想的关系</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li>共产主义远大理想和中国特色社会主义共同理想，二者相辅相成相互促进，有机联系和统一。</li><li>远大理想是现阶段共同理想的奋斗目标。在实现我国现阶段的共同理想而奋斗的过程中，必须坚持共产主义发展方向，以实现共产主义理想为目标。</li><li>现阶段的共同理想是远大理想的坚实基础。中国特色社会主义共同理想在我国的成功实践，必然为实现共产主义远大理想定坚实的基础。</li></ol></div></div></li><li><p>如何正确分析和评价杰出人物在历史上的作用。</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li>坚持历史主义原则，任何一个杰出人物都是时代的需要。</li><li>对阶级社会中的杰出人物要做阶级分析</li><li>历史人物的出现及其历史作用都是必然性与偶然性的辩证统一，必须用辩证统一的观点来分析；</li><li>对杰出人物的历史作用做全面的分析，不能肯定或否定一切。</li></ol></div></div></li><li><p>简述影响资本周转速度的因素。</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li>影响资本周转速度的因素有两个：一是资本周转时间的长短，包括生产时间和流通时间的长短；二是生产资本的构成。依据其价值周转方式的不同，生产资本划分为固定资本和流动资本。</li><li>资本周转速度的快慢，受生产时间和流通时间的影响。生产时间和流通时间越短，资本周转速度就越快；生产时间和流通时间越长，资本周转速度就越慢。</li><li>生产资本的构成也是影响资本周转速度的重要因素。生产资本的构成对预付资本周转速度的影响来自两方面：①生产资本中固定资本和流动资本的比例；②固定本和流动资本本身的周转速度。</li></ol></div></div></li><li><p>论述意识的本质、能动性及其主要表现。</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li>意识的本质<ul><li>意识是人脑的机能，人脑是意识的物质器官。</li><li>意识是客观世界的主观映象，是人脑对客观世界的反映</li><li>意识是社会的产物，是社会性的劳动创造的，个人只有在社会群体中生活，学习语言，才能形成意识</li></ul></li><li>意识的能动性是指意识能动地反映世界和通过实践改造世界的能力。主要表现在<ul><li>意识活动具有目的性和计划性</li><li>意识活动具有主动性和创造性</li><li>意识对于人的生理活动具有一定影响作用。</li><li>意识能通过指导实践改造客观物质世界。这是意识的能动性最突出的表现</li></ul></li></ol></div></div></li><li><p>为什么说社会主义发展道路是多样的，是在探索中曲折前进的。</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li>社会主义发展道路是多样的<ul><li>各国在社会主义革命时，其生产力状况和社会发展阶段是不同的，由此决定，不同社会主义国家的发展道路具有不同的特点。</li><li>各国的历史传统、文化习俗及具体国情各不相同。</li><li>随着时代的前进和实践的发展，各国都在探索适合本国国情的发展道路，具有多样性</li></ul></li><li>社会主义是在曲折中前进的<ul><li>同一切新生事物一样，社会主义作为一种新的社会制度，其成长必然不会一帆风</li><li>无产阶级及其政党对于社会主义建设规律的认识不可能一次完成，是个不断反复的过程，从而导致社会主义的发展是一个曲折前进的过程</li><li>世界经济政治形势错综复杂的发展变化，影响社会主义的发展。</li></ul></li></ol></div></div></li><li><p>试述当代资本主义新变化的原因及实质。</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li>原因<ul><li>在生产力方面，当代资本主义经济之所以能在一定程度上快速发展，主要是生产力自身发展规律，特别是科学技术自身发展规律作用的原因。</li><li>在生产关系方面，资本主义国家在其自身范围内不断调整，在一定程度上缓和了各种社会矛盾</li><li>在上层建筑方面，当代资本主义国家的新变化归根结底是经济基础发展变化所要求的。</li></ul></li><li>实质：<ul><li>当代资本主义的经济基础仍是资本主义私有制。资本主义的自我调节和完善，是在资本主义制度允许的范围内进行。</li><li>资本主义的基本矛盾仍存在，经济危机的根源依然存在。</li><li>某些社会改良，没有改变资本主义的根本性质，是本主义在其总变过程中发生的某些阶段性的部分质变</li></ul></li></ol></div></div></li></ol><h2 id="计算机网络原理模拟四"><a class="markdownIt-Anchor" href="#计算机网络原理模拟四"></a> 计算机网络原理(模拟四)</h2><h3 id="选择题-2"><a class="markdownIt-Anchor" href="#选择题-2"></a> 选择题</h3><ol><li>下列拓扑结构的主要优点是易于监管与管理并且故障诊断与隔离容易的是<mark>星形拓扑结构</mark></li><li>时延带宽积的计算公式中，用到的时延是<mark>传播时延</mark></li><li>在OSI参考模型中，网络层利用哪一层提供的功能服务来完成本层的功能<mark>数据链路层</mark></li><li>在OSI参考模型中，应用层中的协议数据单元（PDU）称为<mark>报文</mark></li><li>在SR协议中，若接收窗口滑动到序号n+1位置时接收到了序号为n的分组，那么接收端对序号n分组的处理是<mark>缓存</mark></li><li>指明物理接口各条信号线的用途的物理层接口特性是<mark>功能特性</mark></li><li>电子邮件中的<mark>MIME</mark>定义了将非7为ASCII码内容转换为ASCII码的编码规则。</li><li>最简单的自动重传协议是<mark>停-等协议</mark></li></ol><h3 id="文字题"><a class="markdownIt-Anchor" href="#文字题"></a> 文字题</h3><ol><li><p>简述虚拟局域网（VLAN）的概念和划分方法</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>虚拟局域网（VLAN）：是一种基于交换机（必须支持VLAN功能）的逻辑分割（或限制）广播域的局域网应用形式。划分局域网的方法主要有3种：</p><ol><li>基于交换机端口划分</li><li>基于MAC地址划分</li><li>基于上层协议类型或地址划分</li></ol></div></div></li><li><p>简述米勒码的编码规则</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li>信息码中的1编码为双机非归零码的01或10</li><li>信息码连1时，后面的1要交替编码，即前面的1如果编码为01，后面的1就编码为10，反之亦然。</li><li>信息码中的0编码为双机非归零的00或者11，即码元中间不跳变</li><li>信息码单个0时，其前沿、中间时刻、后沿均不跳变</li><li>信息码连0时，两个0码元间隔跳变，即前一个0的后沿（后一个0的前沿）跳变。</li></ol></div></div></li><li><p>简述物理层接口的特性</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li><p>机械特性</p><p>指明通信实体间硬件连接接口的机械特点</p></li><li><p>电气特性</p><p>规定了在物理连接上，导线的电气连接及其有关电路的特性</p></li><li><p>功能特性</p><p>指明物理接口各条信号线的用途</p></li><li><p>规程特性</p><p>指明利用接口传输比特流的全过程，以及各项用于传输的事件发送的合法顺序。</p></li></ol></div></div></li><li><p>简述IEEE 802.11标准的共同特征</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li>都使用相同的介质访问控制协议CSMA/CA</li><li>链路层帧使用相同的帧格式</li><li>都具有降低传输速率以传输更远距离的能力</li><li>都支持“基础设置模式”和“自组织模式”两种模式</li></ol></div></div></li><li><p>简述密码散列函数应具备的主要特性</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li>一般的散列函数都具有算法公开</li><li>能够快速计算</li><li>对任意长度进行多对一映射均能产生定长输出</li><li>对于任意报文无法预知其散列值</li><li>不同报文不能产生相同的散列值</li></ol></div></div></li><li><p>简述数字签名应满足的需求</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li>接收方能够确认或证实发送方的签名，但不能伪造</li><li>发送方发出签名的消息给接收方，就不能否认他所签发的消息。</li><li>接收方对已收到的签名消息不能否认，即有收报文认证</li><li>第三者可以确认收发双方之间的消息传送，但不能伪造这一过程</li></ol></div></div></li></ol><h2 id="管理经济学考前模拟卷-002"><a class="markdownIt-Anchor" href="#管理经济学考前模拟卷-002"></a> 管理经济学(考前模拟卷 -002)</h2><h3 id="选择题-3"><a class="markdownIt-Anchor" href="#选择题-3"></a> 选择题</h3><ol><li>如果某产品的需求曲线是一条垂直的直线，则该需求曲线上<mark>每一点的价格弹性均等于 0</mark></li><li>如果卡特尔的全体企业要获得最大利润，则分配产量的原则是<mark>边际成本相等</mark></li></ol><h3 id="文字题-2"><a class="markdownIt-Anchor" href="#文字题-2"></a> 文字题</h3><ol><li><p>简述正确决策的条件。</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>正确决策的条件包括：</p><ol><li>明确的决策目标；</li><li>较高的决策者素质；</li><li>较充足的决策信息资料；</li><li>科学的理论和方法。</li></ol></div></div></li><li><p>简述影响价格弹性的因素。</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li>商品的替代性。</li><li>商品用途的广泛性。</li><li>商品对消费者生活的重要程度。</li><li>商品的消费支出在消费者预算总支出中所占的比重。</li><li>所考察的消费者调节需求量的时间。</li></ol></div></div></li><li><p>简述完全竞争的市场结构必须具备的条件。</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>完全竞争市场应该具备以下四个条件。</p><ol><li>市场上有大量的卖者和买者</li><li>市场上所出售的商品和劳务是同质的，即不存在产品差别</li><li>市场上的各种生产资源可以充分自由地流动，不受任何因素的阻碍</li><li>市场信息是畅通的</li></ol></div></div></li><li><p>简述按平均成本定价的优点。</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li>可以不必补贴垄断者；</li><li>政府可以仅关注企业利润状况。即政府只需要检查企业每年的盈亏报表，以确认企业仅获得正常（平均）利润。如果企业利润太高，可以迫使其降低价格；如果利润太低，可以允许企业提高价格。</li></ol></div></div></li><li><p>请简述三种价格歧视的概念。</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li><p>完全价格歧视，也称为一级价格歧视，它是指企业根据每个消费者愿意支付的最高价格来制定每单位产品的价格，并据此来分别销售每单位产品。</p></li><li><p>二级价格歧视，也称为数量价格歧视，它是指企业根据不同购买量确定不同的价格。</p><ol start="3"><li>三级价格歧视，也称为消费者价格歧视，它是指企业对不同市场的不同消费者实行不同的价格。</li></ol></li></ol></div></div></li></ol><h3 id="综合题"><a class="markdownIt-Anchor" href="#综合题"></a> 综合题</h3><div class="hide-toggle" style="border: 1px solid  #ebf9ed"><div class="hide-button toggle-title" style="background-color:  #ebf9ed;"><i class="fas fa-caret-right fa-fw"></i><span>题目</span></div>    <div class="hide-content"><p>2010 年春节前夕，毗邻北京的河北省三河市车满为患，到此地购买花炮的“京”字牌车辆排起蔚为壮观的“车龙”。“便宜”，是不少北京市民不惜雪后驱车上百公里，赶往这里购买花炮的最大动力，这不仅扰乱了市场秩序，更增大了北京的安全隐患和危险品管控难度。</p><p>自 2 月 7 日北京开始销售虎年花炮以来，市场的价格大致是这样的：1000响鞭炮售 25元-35 元，10000 响的盘炮售 120 元-150 元，烟花“难忘今宵”售250 元左右……鞭炮和烟花的整体价格较去年下降约 5%。毋庸置疑，降价是遏制“非法”花炮流入北京的最好办法。为此，北京市政府通过增设零售点、增大供应量等手段力求驱走“非法”花炮：形成了“湖南熊猫”、“湖南逗逗”和“北京燕龙”三大批发商三足鼎立之势；共批准 2418 个花炮零售点，比 2009 年增加约10%；80 万箱的花炮供应量也创历史新高。然而，即便如此，不少消费者仍认为5%的降幅是杯水车薪，与赴河北购买非法花炮的价差巨大。在河北省三河市，1000响鞭炮和烟花“难忘今宵”分别仅售 10 元和 80 元，都不到北京的 1/3。河北三河、固安等北京周边市县已成为廉价花炮销售地。</p><p>那么，为减少市民异地购买“非法”花炮带来的安全隐患，就不能再降降北京的花炮价格？</p><p>“花炮从出厂到消费者手中，要经过进货、批发和零售三大环节，“每个环节加价 50%已形成业内‘行规’。”北京烟花鞭炮（燕龙）有限公司总经理武立雨说。三家批发商为了在仅有的 2418 个零售点中争取更多的独家专营点，零售商即便加价超过 50%，也只能默许。</p><p>一些北京市民认为，由于基本垄断了北京市区的花炮市场，因此，北京的花炮供货商和批发商甚至零售商的销售“暴利”是导致价格居高不下的罪魁。“除了这些所谓的销售点’，市民在市区根本就别想在别处买到花炮，市场被他们垄断了，价格自然就由他们说了算，一个成本几块钱的花炮动辄上百元也就不难理解了！”一位热心北京市民如是说。(30 分)</p></div></div><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>案例中的北京花炮市场接近何种市场结构？这种市场结构具有哪些特点？</span></div>    <div class="hide-content"><ol><li>本案例中的北京花炮市场接近寡头垄断市场结构。</li><li>寡头垄断市场结构一般具有这么几个特点：<ul><li>在一个行业或市场中，只有少数几家企业；</li><li>企业之间存在着互相制约，互相依存的关系；</li><li>新企业进入行业比较困难。</li></ul></li></ol></div></div><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>北京的花炮为什么那么贵呢？试从市场结构的角度加以分析。</span></div>    <div class="hide-content"><ol><li>北京的花炮市场比较接近寡头垄断市场结构，基本上由“湖南熊猫”、“湖南逗逗”和“北京燕龙”三大批发商占据，而购买花炮的地点也只有经政府部门批准的 2418 个花炮零售点，市民再想到市里其他地方买任何其他品牌的花炮几乎不可能，很难进行充分的市场竞争。</li><li>烟花爆竹又属非生活必须品，政府部门不能强行定价。只能标注“建议零售价”予以引导。</li><li>因此，北京的花炮批发价由三巨头说了算，进而形成隐形的价格联盟（类似寡头企业之间的“共谋”，即寡头企业们放弃价格竞争，以各种公开的或隐蔽的方式，串通一气，协调行动，制定价格，甚至确定产量）。在缺乏竞争的情况下，“三巨头”商量分肉吃，自然亏不着彼此，也就便宜不了市民，因而北京的市民也就不得不接受这让人费解的高价。</li></ol></div></div><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>从市场监管的角度来看，你认为政府可以采取哪些措施来解决花炮价格畸高的问题？</span></div>    <div class="hide-content"><p>限制市场垄断，压缩寻租空间。比如：允许更多合格花炮批发商参与竞争，打破价格联盟式的垄断；尽可能多地增设零售摊点，引入更多的零售商；通过公开摇号等方式分配花炮零售点，降低零售商设摊成本；安全监控标准和准入资格自然要严守，但暗藏寻租空间的不必要审批环节应该砍掉，压缩腐败空间。</p></div></div><h2 id="运筹学2016-04"><a class="markdownIt-Anchor" href="#运筹学2016-04"></a> 运筹学(2016-04)</h2><h3 id="选择-填空题"><a class="markdownIt-Anchor" href="#选择-填空题"></a> 选择、填空题</h3><ol><li>在盈亏平衡图中，变动费用线上的任何一点都表示对应于某一产量的<mark>总生产费用</mark></li><li>每一个随机变量和相关的某个范围内累计频率序列数相应，这个累计频率数称之为<mark>随机数</mark></li><li>在当今信息时代，运筹学和计算机方法的<mark>分界线</mark>将会消失，并将脱离各自原来的领域，组合成更通用更广泛的管理科学的形式</li><li>利用一元线性回归模型预测的基本思路是先根据x、y的历史数据，求出<mark>a和b</mark>的值，建立起回归模型，再运用模型计算出不同的x所相对的不同的y值。</li><li>库存的作用最基本的一个方面就是保证工业企业的生产能够正常地、<mark>连续地</mark>、均衡地进行。</li><li>最小枝杈树算法是按把最近的<mark>未接点</mark>连接到那些已接点上去的方法来进行的。</li><li>—阶马尔柯夫过程基于这样的假定：在确定事件周期的选择概率时，只考虑<mark>当前周期</mark>的事件选择情况。</li></ol>]]></content>
    
    <summary type="html">
    
      八月自考考前突击-20200726
    
    </summary>
    
    
      <category term="自学考试" scheme="https://extheor.github.io/categories/%E8%87%AA%E5%AD%A6%E8%80%83%E8%AF%95/"/>
    
      <category term="考前突击" scheme="https://extheor.github.io/categories/%E8%87%AA%E5%AD%A6%E8%80%83%E8%AF%95/%E8%80%83%E5%89%8D%E7%AA%81%E5%87%BB/"/>
    
    
      <category term="考前突击" scheme="https://extheor.github.io/tags/%E8%80%83%E5%89%8D%E7%AA%81%E5%87%BB/"/>
    
  </entry>
  
  <entry>
    <title>八月自考考前突击-20200720</title>
    <link href="https://extheor.github.io/posts/73981dbc/index.html"/>
    <id>https://extheor.github.io/posts/73981dbc/index.html</id>
    <published>2020-07-20T12:37:21.000Z</published>
    <updated>2020-07-31T12:43:30.113Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@v0.1/Hexo/assets/css/APlayer.min.css"><script src="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@v0.1/Hexo/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@v0.1/Hexo/assets/js/Meting.min.js"></script><h2 id="马克思主义基本原理概论2015-10"><a class="markdownIt-Anchor" href="#马克思主义基本原理概论2015-10"></a> 马克思主义基本原理概论(2015-10)</h2><h3 id="选择题"><a class="markdownIt-Anchor" href="#选择题"></a> 选择题</h3><ol><li>马克思主义认为社会生活在本质上是实践的，这是因为实践是<mark>人类社会产生、存在和发展的基础</mark></li><li>唯物辩证法的总特征有两个，一个是联系的观点，另一个是<mark>发展的观点</mark></li><li>能动反映论区别于机械反映论的根本标志是认为<mark>认识过程是反应和创造的统一</mark></li><li>垄断资本主义国家的金融资本是指<mark>垄断的工业资本和银行资本融合形成的资本</mark></li><li>资本主义国家宏观经济管理与调节的总任务是<mark>促进时长总供需平衡</mark></li><li>无产阶级革命的归根结底是<mark>生产力的发展水平决定的</mark></li></ol><h3 id="背诵题"><a class="markdownIt-Anchor" href="#背诵题"></a> 背诵题</h3><ol><li><p>简述马克思主义的科学内涵和理论品质。</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>(1) 马克思主义是由马克思恩格斯创立、后继者发展的以反对资本主义、建设社会主义和共产主义为目标的科学理论体系 (或马克思主义是由马克思恩格斯创立、后继者发展的关于工人阶级和人类解放的科学)。(3 分)<br />(2) 与时俱进是马克思主义的理论品质。与时俱进就是党的全部理论和工作要体现时代性，把握规律性，富于创造性。(3 分)</p></div></div></li><li><p>简述实践在认识中的决定作用。</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>（1）实践的观点是辩证唯物主义认识论首要的观点。实践是认识的基础，对认识具有决定作用。（2 分）<br />（2）实战对认识的决定作用表现在：实践是认识的来源：实默是认识发展的动力；实践是检验认识真理性的唯一标准；实践是认识的目的。（4 分）</p></div></div></li><li><p>简述两种历史观在历史创造者问题上的根本分歧</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>（1）在谁是历史创造者间题上，历史唯物主义和历史唯心主义存在着根本分歧。（1 分）<br />（2）历史唯心主义从社会意识决定社会存在的前提出发，认为历史是少数英雄人物创造的，否认人民群众是推动历史发展的决定力量。这是英雄史（2 分）<br />（3）历史唯物主义从社会存在决定社会意识的基本原理出发，认为人类历史首先是生产发展的历史，人民群众是历史的创造者。这是群众史观。（3 分）</p></div></div></li><li><p>为什么说资本主义生产过程是劳动过程与价值增殖过程的统一？</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>（1）劳动过程是人们通过生产劳动创造出具有特定使用价值的产品的过程，它为一切社会所共有。（1 分）由于资本主义劳动过程是资本家的各种生产要素相结合的过程，其劳动成果归资本家所有，劳动过程也就成为价值增殖过程的手段。（2 分）<br />（2）资本家会迫使工人的劳动时间超过创造其自身价值所需要的时间，从而为其创造出剩余价值，资本主义生产过程也因此转化为价值增殖过程。（3 分）</p></div></div></li><li><p>马克思主义政党在社会主义建设中的领导核心作用主要体现在哪些方面？</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>（1）在思想方面，马克思主义政党要确保自己在意识形态领域的领导地位，确保马克思主义在社会主义国家的指导地位。（2 分）<br />（2）在政治方面，马克恩主义政党要在社会主义民主政治建设和政治体制改革中起到领导核心作用，保证社会主义建设的正确方向。（2 分）<br />（3）在组织方面，马克思主义政党要领导全体人民有组织、有系统、有管理有序地进行社会主义的各项建设事业。（2 分）</p></div></div></li><li><p>主要矛盾和次要矛盾、矛盾的主要方面和次要方面关系的原理，要求我们在实际工作中坚持两点论和重点论的统一。试述两点论和重点论统一的原理及其现实意义。</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>（1）坚持两点论，就是在认识复杂事物的发展过程时，既要看到主要矛盾又不忽略次要矛盾；在认识某一矛盾时，既要看到矛盾的主要方面，又不忽略矛盾的次要方面。（3 分）<br />（2）坚持重点论，就是在认识复杂事物的发展过程时，要着重抓住主要矛盾；在研究某一矛盾时，要注重把握矛盾的主要方面。（3 分）<br />（3）坚持两点论和重点论的统一，就是看问题、办事情既要全面：又要抓住重点。（2 分）我国坚持以经济建设为中心和一系列 “两手抓” 的方针，就是坚持两点论和重点论统一的具体表现。认识我国改革开放和现代化建设的形势要分淸主流和支流，既要抓住主流，坚定信心，又不忽略支流，认真解决存在的问题。（2 分）</p></div></div></li><li><p>试述影响资本周转速度的因素。</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>（1）影响资本周转速度的因素有两个：一是资本周转时间的长短，包括生产时间和流通时间的长短；二是生产资本的构成，依据其价值周转方式的不同，生产资本划分为固定资本和流动资本。（4 分）<br />（2）资本周转速度的快慢，受生产时间和流通时间的影响。生产时间和流通时间越短，资本周转速度就越快：生产时间和流通时问越长，资本周转速度就越慢。（3 分）<br />（3）生产资本的构成也是影响资本周转速度的重要因素。生产资本的构成对预付资本周转速度的影响来自两方面：一是生产资本中固定资本和流动资本的比；二是固定资本和沉没资本本身的周转速度。（3 分）</p></div></div></li><li><p>试述当代资本主义新变化的原因及实质。</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>（1）在生产力方面，当代资本主义经济之所以能在一定程度上快速发展，主要是生产力自身发展规律，特别是科学技术自身发展规律作用的结果。（2 分）在生产关系方面，资本主义国家在其自身范围内不断地进行调整，从而在一定程度上适应了生产力发展的要求，缓和了各种社会矛盾。（2 分）在上层建筑方面，当代资本主义国家的新变化归根结底是经济基础发展变化所要求的。（1 分）<br />（2）当代资本主义虽然发生了许多新变化，但其经济基础仍然是资本主义私有制。资本主义的自我调节和完善，都是在资本主义制度所允许的范围内进行的。（2 分）资本主义的基本矛盾依然存在，导致经济周期波动和发生危机的根源依然存在。（1 分）当代资本主义的某些社会改良，没有改变资本主义生产关系的根本性质，是资本主义在其总的量变过程中发生的某些阶段性的部分质变。（2 分）</p></div></div></li></ol><h2 id="计算机网络原理2016-04"><a class="markdownIt-Anchor" href="#计算机网络原理2016-04"></a> 计算机网络原理(2016-04)</h2><h3 id="选择-填空题"><a class="markdownIt-Anchor" href="#选择-填空题"></a> 选择、填空题</h3><ol><li><p>电信业一般认为，宽带骨干网的传输速率至少应达到<mark>2Gbps</mark></p></li><li><p>交换技术<mark>不适用于猝发式通信</mark></p></li><li><p><mark>建立连接</mark>属于链路管理功能</p></li><li><p>在 HDLC 的帧类型中，<mark>无编号帧</mark>用于提供对链路的建立、拆除及多种控制功能</p></li><li><p>HDLC 中常用的操作方式不包括<mark>正常平衡方式</mark></p></li><li><p><mark>链路状态路由算法</mark>属于动态路由选择</p></li><li><p>IP 对输入数据报的处理分为主机对数据报的处理和<mark>网关对数据报的处理</mark></p></li><li><p>防止数据不受主动攻击（数据的伪造和变动）的保护措施称为<mark>报文认证</mark></p></li><li><p>根据通信子网中信道类型可将网络拓扑分为广播信道通信子网的拓扑和<mark>点对点</mark>通信子网的拓扑。</p></li><li><p>计算机网络中，为进行交换而建立的规则、标准或约定的集合称为<mark>网络协议</mark></p></li><li><p>网络层要实现的基本功能是<mark>路由选择</mark>和分组转发</p></li><li><p>对于离开了原始站点（Home)还想继续连接网络的主机称为<mark>移动主机</mark></p></li><li><p>当网络中的“拥塞”严重时可能会导致通信业务陷入停顿的现象称为<mark>死锁</mark></p></li><li><p>IEEE802.3MAC 帧的起始定界符字段的比特模式为<mark>10101011</mark></p></li><li><p>ATM才用的是<mark>异步时分复用</mark>方式工作</p></li><li><p>移动 Ad Hoc 网络中的每个节点都兼有<mark>路由器</mark>和<mark>主机</mark>两种功能。</p></li><li><p>应用广泛的数字签名方法包括 RSA 签名、DSS签名和 Hash 签名。</p></li><li><p>超文本传输协议 HTTP 通过<mark>URL</mark>标识被操作的资源</p></li></ol><h3 id="简答题"><a class="markdownIt-Anchor" href="#简答题"></a> 简答题</h3><ol><li><p>简述网络各层次设计中可采用的服务类型。</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>在网络各层次的设计中，可采用的服务类型包括<br />（1）面向连接与确认服务<br />（2）面向连接与不确认服务；<br />（3）无连接与确认服务；<br />（4）无连接与不确认服务。</p></div></div></li><li><p>简述传输介质的带宽、波特率、码元和位传输率的概念。</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>传输介质的带宽是指在最小衰减的情况下能够通过这种介质的频率范围，它是介质的一种物理特性，度量单位为 Hz.（2 分）<br />波特率是指每秒钟的采样次数，每个采样发送一份信息，该信息称为码元，因此波特率和码元率是相同的。（2 分）<br />位传输率是指一条信道上发送的信息的数量，它等于每秒钟采样数乘以每个采样的位数。（1 分）</p></div></div></li><li><p>简述源路由选择网桥获取路由算法的基本思想。</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>获取源路由算法的基本思想：如果不知道目的地地址的位置，源机器就发一广播帧，询问它在哪里（2 分）每个网桥都会转发此帧，这样查找帧就可以到达互连网中的每一个 LAN（1 分）。当应答回来时，途径的网桥将它们自己的标识记录在应答帧中，于是广播帧的发送者就可以得到确切的路由，并从中获取最佳者（2 分）</p></div></div></li><li><p>简述传输控制协议 TCP 提供的服务所具有的主要特征。</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>（1）面向连接的传输；<br />（2）端到端通信；<br />（3）高可靠性；<br />（4）全双工方式传输；<br />（5）采用字节流方式传输；<br />（6）提供紧急数据传送功能。</p></div></div></li></ol><h2 id="管理经济学模拟卷一"><a class="markdownIt-Anchor" href="#管理经济学模拟卷一"></a> 管理经济学(模拟卷一)</h2><h3 id="选择题-2"><a class="markdownIt-Anchor" href="#选择题-2"></a> 选择题</h3><ol><li><p>适度规模的原则是<mark>绝对避免规模报酬递减</mark></p></li><li><p>需求和供给同时减少的情况下<mark>均衡价格的变化无法确定；均衡交易量将下降。</mark></p></li><li><p>在长期中不存在，只有在短期内存在的成本是<mark>固定成本</mark></p></li><li><p>若某商品的需求曲线是垂直的，则该商品的需求价格弹性是<mark>完全弹性</mark></p></li><li><p>如果两种商品的需求交叉弹性是正值，表明这两种商品是替代品</p></li><li><p>不因决策而变化的成本成为<mark>沉没成本</mark></p></li></ol><h3 id="文字题"><a class="markdownIt-Anchor" href="#文字题"></a> 文字题</h3><ol><li><p>简述完全竞争市场结构必须具备的条件</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li><p>市场上有大量买家和卖家</p></li><li><p>市场上所出售的商品和劳务是同质的，即不存在产品差异</p></li><li><p>市场上各种生产资源都可以充分自由地流动，不受任何因素的阻碍</p></li><li><p>市场消息是畅通的</p></li></ol></div></div></li><li><p>简述差别价格的存在需要具备的条件</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li><p>企业必须对价格有一定的控制力</p></li><li><p>企业必须能够区分不同消费者的支付意愿</p></li><li><p>企业应该能够阻止套利的情况出现</p></li></ol></div></div></li><li><p>简述影响供给的主要因素</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li><p>商品的价格</p></li><li><p>生产成本</p></li><li><p>替代品的价格</p></li><li><p>生产者对价格的期望</p></li></ol></div></div></li><li><p>简述影响需求价格弹性的因素</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li><p>商品的替代性</p></li><li><p>商品用途的广泛性</p></li><li><p>商品对消费者生活的重要程度</p></li><li><p>商品的消费支出在消费者预算总支出中所占的比重</p></li><li><p>所考察的消费者调节需求量的时间</p></li></ol></div></div></li><li><p>简述促使规模收益递减的因素</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li><p>技术方面的经济效果</p><p>在实际生产中，当规模扩大时，汇总技术上获取较多的经济性。</p></li><li><p>管理方面</p><p>主要指大规模生产可以对管理工作进行有效的分工</p></li><li><p>商业方面的经济效果</p><p>这种经济效果是通过大企业在购买原料和出售成品时获得的。</p></li><li><p>金融方面的经济效果</p><p>当企业为了发展而筹措资金时，大企业往往具有有利的条件。</p></li><li><p>承担风险方面的经济效果</p><p>主要来自产品需求和原料供给发生突然变化而带来的“不确定性”风险，大企业往往可以通过各种方法来预防这种风险</p></li></ol></div></div></li></ol><h3 id="综合题"><a class="markdownIt-Anchor" href="#综合题"></a> 综合题</h3><ol><li><p>多丽手套 京城卖断货</p><div class="hide-toggle" style="border: 1px solid  #ebf9ed"><div class="hide-button toggle-title" style="background-color:  #ebf9ed;"><i class="fas fa-caret-right fa-fw"></i><span>题目</span></div>    <div class="hide-content"><p>2016年2月6日，某女明星出席活动时佩戴的一副多丽手套引发了国人关注。三天后，记者来到位于北京某商城的多丽专卖店，询问到该款手套时，工作人员自柜中取出一款手腕处带有蝴蝶结的黑色羊皮手套说：“这两天来看这款手套的人不少，昨天下午还有个顾客专门找这款手套当礼物送人。“她还告诉记者，这款手套分黑色和红色两款，目前全北京红色只剩下样品，此款带有蝴蝶结的黑色手套已经接近断货。而不少淘宝商家也搭顺风车，推出了相关的销售宣传，例如明星同款手套哦，亲也赶快收个多丽吧。“记者登录淘宝网看到，很多卖家打出“某明星也戴&quot;的宣传语，来推销同款手套，最新的淘宝数据显示，“多丽手套”的搜索指数从2月6日前的0飚升至22,淘宝预测该款手套未来一周的总体销售趋势将大幅上升。</p><p>问题：根据以上案例资料，试用所学的效用理论解释这一现象，并论述效用理论的基本假设。</p></div></div><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>一、消费者购买商品是为了获得效用，消费者愿意支付的价格取决于他对该物品的评价，即感觉到的效用大小，这种效用大小又取决于不同消费者的偏好。多丽手套的消费者是高收入女性居多，这个消费群体的特点是追逐时尚，偏好受时尚影响大而且多变，她们对时尚的追求要体现在消费上，因此，看见女明星佩戴多丽手套后，买同款手套就是他们表现自己这种偏好的方式。换句话说，买同款手套使他们崇尚明星的心态的以表现，就得到了效用，因此，他们愿意出价买，企业就成功了。</p><p>二、效用理论的基本假设</p><ol><li><p>完全信息</p><p>消费者已经掌握与他们消费决策有关的全部信息，他们知道所有可获得的商品和服务的范围，以及它们能提供的效用。</p></li><li><p>偏好次序</p><p>消费着有能力将所有商品分组排序。消费者在面对两个或两个以上的商品组时，能够决定对他们的偏好排序。</p></li></ol></div></div></li><li><p>“歌华有线”为何肆意提高收费</p><div class="hide-toggle" style="border: 1px solid  #ebf9ed"><div class="hide-button toggle-title" style="background-color:  #ebf9ed;"><i class="fas fa-caret-right fa-fw"></i><span>题目 </span></div>    <div class="hide-content"><p>北京歌华有线电视网络股份有限公司（以下简称”歌华有线”）是北京市政府批准的唯家负责建设、管理和经营北京市有线广播电视网络的公司。2003年6月30日，歌华有线宣布自7月1日起，有线收视费由原来的12元上涨到18元，増幅高达50%<br />此举引起了媒体和社会各界普遍关注，对其没有经过价格听证就随意涨价表示强烈不满。歌华有线用户220万户，每户每月多收6元，一年多收1.584亿元。这新增的1.584亿元主业收入扣除上缴国家税收以外，基本上都是公司的净利润。每一个用户在装歌华有线时都不会忘记，住楼房的用户交300元的初装费住平房的用户交320元的初装费，如果按最少300元计算，歌华有线已经从220万用户的口袋中最少收走6.6亿元，每月再交12元的收视费已经不算少了，为什么还要上涨50%?<br />歌华有线说了提高收费的理由：“北京地区每户每月12元的有线电视收看维护费标准是在以微波方式传送的情况下制定的，已远远不能满足当前有线电视光缆网络的日常维护管理、缆线入地建设和技术升级改造等方面的支出需求，如继续执行现行收费标准将难以维持北京有线电视网络的正常运营和稳定发展”。歌华有线涨价还有一个所谓充分的理由是设备改造。国定资产的投入怎么能让消费者来承担呢？北京市物价局根据今年初歌华有线的涨价申请，核算了他们的运营成本，同意涨价。至于为什么没开价格听证会，物价局说有线电视收视费不在听证目录之列。问题：根据以上案例资料，试回答：</p><ol><li><p>歌华有线为何价格说涨就涨，而且如此霸气？“歌华有线”属于何种类型市场中的企业？</p></li><li><p>这种类型的市场应具备哪些条件</p></li></ol></div></div><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li><p>第一题</p><ul><li><p>都是垄断惹的祸，垄断企业时市场价格的制定者。</p></li><li><p>歌华有线是北京市政府批准的唯一一家负责建设、管理和经营北京市有线广播电视网络的公司，属于垄断市场中的垄断企业</p></li></ul></li><li><p>第二题</p><ul><li><p>在一个行业或某一特定的市场中，只有一家企业提供全部商品，没有竞争存在</p></li><li><p>企业所生产和出售的商品没有相似的替代品，即垄断企业所生产的产品是被公认为独特的，是其他产品无法替代的。</p></li><li><p>其他任何企业进入该行尾或市场都极为困难或不可能</p></li></ul></li></ol></div></div></li></ol><h2 id="运筹学2017-04"><a class="markdownIt-Anchor" href="#运筹学2017-04"></a> 运筹学(2017-04)</h2><h3 id="选择-填空题-2"><a class="markdownIt-Anchor" href="#选择-填空题-2"></a> 选择、填空题</h3><ol><li><p>利用回归方程确定置信区间时，一般要求实际值落入置信区间的概论达到<mark>95%</mark></p></li><li><p>相关系数R的取值范围是<mark>[-1,1]</mark></p></li><li><p>最小最大遗憾值决策标准适用于<mark>不确定条件下的决策</mark></p></li><li><p>属于保管费用的是<mark>设备折旧费</mark></p></li><li><p>线性规划模型中，基解要求<mark>所有的非基变量都等于0</mark></p></li><li><p>线性规划的一个基变量组对应<mark>一个基解和多个特解</mark></p></li><li><p>用修正分配法求解运输问题时，得到的改进指数也称为<mark>位势差</mark></p></li><li><p>在结点式网络图中，结点代表<mark>活动</mark></p></li><li><p>在箭线式网络图中，某项活动最迟开始时间等于<mark>它的箭尾结点的最迟完成时间</mark></p></li><li><p>普莱姆法可以解决<mark>最小枝杈树问题</mark></p></li><li><p>特尔裴法适用于<mark>长期或中期</mark>预测</p></li><li><p>由决策树中决策点引出的树枝，称为<mark>方案枝</mark></p></li><li><p>线性规划的基本特点是模型中的<mark>线性函数</mark></p></li><li><p>所有产地的总产量与所有销地的总需求量相等的运输问题，称为<mark>平衡运输问题</mark></p></li><li><p>在一个网络中，如果图形是联通且不含圈的，则称之为树</p></li><li><p>盈亏平衡分析中，所有成本都能分为固定和可变的两个部分时，总成本与销售量的关系是<mark>线性的</mark></p></li><li><p>在排队论中，通常要求服务时间成<mark>负指数分布</mark></p></li></ol><h3 id="名词解释题"><a class="markdownIt-Anchor" href="#名词解释题"></a> 名词解释题</h3><ol><li><p>时间序列分析法</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>指根据预测对象的历史数据，利用数理统计方法加以处理，来预测事物的发展趋势</p></div></div></li><li><p>安全库存量</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>是为了预防可能出现的缺货现象而保持的额外的库存量</p></div></div></li><li><p>网络图的作业时间</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>指在一定的生产技术条件下，完成一项活动或一道工序所需的时间</p></div></div></li><li><p>离散的随机变量</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>指允许在某个指定的范围内取有限个数的随机变量</p></div></div></li><li><p>马尔可夫过程</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>指由一种情况转换至另一种情况的过程，且该或称是有转换概论，此转换概率可以依其紧接的前项情况推算出来。</p></div></div></li></ol>]]></content>
    
    <summary type="html">
    
      八月自考考前突击-20200720
    
    </summary>
    
    
      <category term="自学考试" scheme="https://extheor.github.io/categories/%E8%87%AA%E5%AD%A6%E8%80%83%E8%AF%95/"/>
    
      <category term="考前突击" scheme="https://extheor.github.io/categories/%E8%87%AA%E5%AD%A6%E8%80%83%E8%AF%95/%E8%80%83%E5%89%8D%E7%AA%81%E5%87%BB/"/>
    
    
      <category term="考前突击" scheme="https://extheor.github.io/tags/%E8%80%83%E5%89%8D%E7%AA%81%E5%87%BB/"/>
    
  </entry>
  
  <entry>
    <title>八月自考考前突击-20200721</title>
    <link href="https://extheor.github.io/posts/49f2d2a/index.html"/>
    <id>https://extheor.github.io/posts/49f2d2a/index.html</id>
    <published>2020-07-20T12:37:21.000Z</published>
    <updated>2020-07-31T12:43:30.113Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@v0.1/Hexo/assets/css/APlayer.min.css"><script src="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@v0.1/Hexo/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@v0.1/Hexo/assets/js/Meting.min.js"></script><h2 id="马克思主义基本原理概论2016-04"><a class="markdownIt-Anchor" href="#马克思主义基本原理概论2016-04"></a> 马克思主义基本原理概论(2016-04)</h2><h3 id="选择题"><a class="markdownIt-Anchor" href="#选择题"></a> 选择题</h3><ol><li>马克思主义认为，社会生活在本质上是<mark>实践的</mark></li><li>我们党指定和执行独立自主、自力更生以及对外开放方针得理论基础是<mark>事物发展得内因和外因辩证关系的原理</mark></li><li>属于技术社会形态序列的是<mark>工业社会</mark></li><li>商品的使用价值反映的是<mark>人与自然的关系</mark></li><li>生产资料和劳动力实物构成上的比例是<mark>资本的技术构成</mark></li></ol><h3 id="背诵题"><a class="markdownIt-Anchor" href="#背诵题"></a> 背诵题</h3><ol><li><p>简述意识的本质。</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li><p>意识是人脑的机能，人脑是意识的物质器官</p></li><li><p>意识是客观世界的主观映像，是人脑对客观世界的反应</p></li><li><p>意识是社会的产物。人类意识是社会性的劳动创造的，个人只有在一定社会环境与社会关系中生活，学习一定社会群体的语言，才能形成自己的意识。</p></li></ol></div></div></li><li><p>简述改革、发展、稳定的关系。</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li><p>当前中国的改革是和发展、稳定相统一的过程。稳定是前提，只有社会稳定，改革和发展才能不断的推进</p></li><li><p>改革是动力，只有通过改个，才能解决发展过程中出现的问题，社会稳定才能得到可靠的保障</p></li><li><p>发展是关键，只有通过发展才能从根本上解决所有经济社会问题，才能使改革得以持续进行下去，才能使稳定获得坚实的物质基础。</p></li></ol></div></div></li><li><p>相对剩余价值是怎样生产出来的?？</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li><p>相对剩余价值生产就是：在工作日既定的条件下，通过改变必要劳动时间和剩余劳动时间的比例来增加剩余价值的方法。</p></li><li><p>相对剩余价值的生产是以社会劳动生产率的提高为条件的。为了降低工人生活资料的价值从而缩短必要劳动时间，就必须提高生活资料生产部分乃至全社会的劳动生产率。</p></li></ol></div></div></li><li><p>简述私人垄断资本主义的基本经济特征。</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li><p>垄断在经济生活中占统治地位</p></li><li><p>金融资本和金融寡头的统治</p></li><li><p>资本输出在经济生活中占重要地位。</p></li><li><p>国际垄断同盟在经济上瓜分世界</p></li><li><p>垄断资本主义列强瓜分和重新瓜分世界</p></li></ol></div></div></li><li><p>简述共产主义远大理想和中国特色社会主义共同理想的关系。</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li><p>共产主义远大理想和中国社会特色社会主义共同理想，二者相辅相成，相互促进，有机联系和统一</p></li><li><p>远大理想是现阶段共同理想的奋斗目标。在实现我国现阶段的共同理想而奋斗的过程中，必须坚持共产主义发展方向，以实现共产主义远大理想为目标</p></li><li><p>现阶段的共同理想是远大理想的坚实基础。中国特色社会主义共同理想在我国的成功实践，必然为实现共产主义远大理想奠定坚实的基础。</p></li></ol></div></div></li><li><p>试述感性认识和理性认识的辩证关系，并说明割裂二者的统一在实际工作中会导致的错误。</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li><p>感性认识和理性认识是认识的两个阶段，他们既相互区别，又相互联系，是对立统一的关系。</p></li><li><p>他们的区别表现在：感性认识是认识的初级阶段，是对事物的各个片面、现象和外部联系的反映；理性认识是认识的高级阶段，是对事物的全体、本质和内部联系的反映。它们的联系表现在：理性认识依赖于感性认识；感性认识有待发展到理性认识；二者相互渗透。</p></li><li><p>割裂感性认识和理性认识的统一，在实际工作中会导致经验主义或教条主义的错误。经验主义夸大个别的、局部的经验作用，否认科学理论的指导意义；教条主义夸大理论和书本知识的作用，轻视实践经验，把理论当成教条，到处生搬硬套。</p></li></ol></div></div></li><li><p>试述价值规律的内容及其对社会经济发展的作用</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li><p>价值规律的基本内容是：商品的价值由生产商品的社会必要劳动时间决定；商品交换以价值为基础，实行等价交换。</p></li><li><p>价值规律对社会经济发展的作用表现在：</p><ul><li><p>自发的调节生产资料和劳动力在社会生产各部门之间的分配的比例</p></li><li><p>自发地促进社会生产力的发展</p></li><li><p>引起和促进商品生产者的分化</p></li></ul></li></ol></div></div></li><li><p>为什么说马克思主义政党是新型的革命政党?</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li><p>马克思主义政党是工人运动和科学社会主义相结合的产物，与资本阶级政党有本质区别。</p></li><li><p>马克思主义政党是工人阶级的先锋队，它表明了马克思主义政党的阶级性和先进性。</p></li><li><p>马克思主义政党是实现共产主义而奋斗的党。马克思主义政党的最高纲领和最终奋斗目标是实现共产主义</p></li><li><p>马克思主义政党是为人民谋求利益的党，它的根本宗旨是为人民群众谋利益。</p></li><li><p>马克思主义政党是按照民主集中制原则组织起来的团结统一的党。马克思主义政党还是有坚强纪律和战斗精神的党。</p></li></ol></div></div></li></ol><h2 id="计算机网络原理2019-04"><a class="markdownIt-Anchor" href="#计算机网络原理2019-04"></a> 计算机网络原理(2019-04)</h2><h3 id="选择-填空题"><a class="markdownIt-Anchor" href="#选择-填空题"></a> 选择、填空题</h3><ol><li><p>OSI参考模型中，应用层的协议数据单元（PDU）被成为<mark>报文</mark></p></li><li><p><mark>STDM</mark>表示统计时分多路复用技术</p></li><li><p>点对点协议PPP定义的控制转移字节内容为<mark>01111101</mark></p></li><li><p>设信道宽带为16KHz，信噪比为30dB，则该信道的信道容量大约为<mark>160kbit/s</mark></p><blockquote><p>信噪比<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mfrac><mi>S</mi><mi>N</mi></mfrac><msub><mo stretchy="false">)</mo><mrow><mi mathvariant="normal">功</mi><mi mathvariant="normal">率</mi></mrow></msub><mo>=</mo><mn>1</mn><msup><mn>0</mn><mfrac><msub><mfrac><mi>S</mi><mi>N</mi></mfrac><mrow><mi>d</mi><mi>b</mi></mrow></msub><mn>10</mn></mfrac></msup><mo>=</mo><mn>1000</mn></mrow><annotation encoding="application/x-tex">(\frac {S} {N})_{功率} = 10^{\frac {\frac {S} {N}_{db}} {10}} = 1000</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.217331em;vertical-align:-0.345em;"></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:-0.15em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">功</span><span class="mord cjk_fallback mtight">率</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.440615em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.440615em;"><span style="top:-3.4406149999999998em;margin-right:0.05em;"><span class="pstrut" style="height:3.0776149999999998em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.53945em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.7749285714285716em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size1 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.07033em;"><span style="top:-2.468em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.387em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.532em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size1 size6"></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.06243999999999994em;"><span style="top:-2.06244em;margin-right:0.1em;"><span class="pstrut" style="height:2.69444em;"></span><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.632em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span></span></span></span></p><p>因此<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi><mo>=</mo><mi>B</mi><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mfrac><mi>S</mi><mi>N</mi></mfrac><mo stretchy="false">)</mo><mo>=</mo><mn>16</mn><mi>k</mi><mo>×</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mn>1001</mn><mo>≈</mo><mn>160</mn><mi>k</mi><mi>b</mi><mi>i</mi><mi>t</mi><mi mathvariant="normal">/</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">C = Blog_2(1+\frac {S} {N}) = 16k \times log_21001 ≈160kbit/s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.217331em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">6</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">6</span><span class="mord">0</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord mathdefault">b</span><span class="mord mathdefault">i</span><span class="mord mathdefault">t</span><span class="mord">/</span><span class="mord mathdefault">s</span></span></span></span></p></blockquote></li><li><p>若某个 IEEE802.11 数据帧的帧控制字段中的“去往 AP”、“来自 AP”的值为 1、0，则该帧中的地址 1、地址 2、地址 3 分别是<mark>AP 地址、源地址和目的地址</mark></p></li><li><p>被称为蓝牙网络的 EF802 标准是<mark>IEFE802.15.1</mark></p></li><li><p>典型的用于创建数字签名的单向散列算法是<mark>SHA-1</mark></p></li><li><p>最有代表性的全局式路由选择算法是<mark>链路状态</mark>路由选择法</p></li><li><p>令牌环网上最严重的两种错误是<mark>令牌丢失</mark>和<mark>数据帧无法撤销</mark></p></li><li><p>研究密码变化客观规律中的固有缺眳，并应用于破译密码以获取迺信情报的学问称为<mark>密码分析学</mark></p></li><li><p>对称密钥加密算法面临的一个最大的问题是<mark>密钥分发</mark>问题</p></li></ol><h3 id="简答题"><a class="markdownIt-Anchor" href="#简答题"></a> 简答题</h3><ol><li><p>简达 TCP 所提供的面向连接服务。</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>在生成报文开始传送之前，TCP客户和服务器互相交换传输层的控制信息，完成握手（1分）在客户进程与服务器进程的套接字之间建立一条逻辑的TCP连接（1分）这条连接是全双工的，即连接双方的进程可以在此连接上同时进行TCP报文收发（2分）等应用程序结束报文发送时，必须拆除该连接（1分）</p></div></div></li><li><p>简述 Cookie 的常见用途。</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li><p>网站可以利用 Cookie的ID来准确统计网站的实际访问人数等数据。</p></li><li><p>网站可以利用Coo限制某些特定用户的访问。</p></li><li><p>网站可以存储用户访问过程中的操作习惯和偏好，有针对性地为用户提供服务，提升用户体验感。</p></li><li><p>记录用户登录网站使用的用户名、密码等信息，使用户多次登录时，避免重复输入这些信息，实现快速登录</p></li><li><p>电子商务网站利用 Cookie信息可以实现“购物车”功能，</p></li></ol></div></div></li><li><p>简述 1-坚持 CSMA 的基本原理。</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>若通信站有数据发送，先侦听信道；若发现信道空闲，立即发送数据；若发现信道忙，则继续侦听信道，知道发现信道空闲然后立即发送数据。</p></div></div></li><li><p>简述典型的 HTTP 请求方法及其作用。</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li><p>Get请求读取由URL所标识的信息。</p></li><li><p>Head请求读取由URL所标识的信息的首部。</p></li><li><p>Post给服务器添加信息。</p></li><li><p>Option请求一些选项的信息。</p></li><li><p>Put在指明的URL下存储一个文档。</p></li></ol></div></div></li><li><p>简述分组交换网中发生拥塞的原因及拥塞控制的概念。</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>发生拥塞的原因：</p><ol><li><p>缓冲区容量有限。</p></li><li><p>传输线路的带宽有限。</p></li><li><p>网络结点的处理能力有限。</p></li><li><p>网络中某些部分发生了故障。</p></li></ol><p>拥塞控制就是端系统或网络结点，通过采取某些措施来避免拥塞发生，或者对于已发生的拥塞做出反应，以便尽快消除拥塞。（3分）</p></div></div></li><li><p>简述消息完整性检测方法中所使用的密码散列函数应具备的主要特征。</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li><p>一般应具有算法可公开性。</p></li><li><p>能够快速计算。</p></li><li><p>对任意长度报文进行多对一映射均能产生定长输出</p></li><li><p>对于任意报文无法预知其散列值。</p></li><li><p>不同报文不能产生相同的散列值。</p></li></ol></div></div></li></ol><h2 id="管理经济学模拟卷二"><a class="markdownIt-Anchor" href="#管理经济学模拟卷二"></a> 管理经济学(模拟卷二)</h2><h3 id="选择题-2"><a class="markdownIt-Anchor" href="#选择题-2"></a> 选择题</h3><ol><li><p>当边际产量大于平均产量时，随着要素的增加<mark>平均产量增加</mark></p><p><img src= "https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@v3.3.1/butterfly/img/loading9.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/07/21/783711fd72da9be265d3d6063186555b.png" alt="" /></p></li><li><p>规模报酬递减是在<mark>按比例增加各种生产要素</mark></p></li></ol><h3 id="文字题"><a class="markdownIt-Anchor" href="#文字题"></a> 文字题</h3><ol><li><p>企业定价的目标有哪几种？</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li><p>以维持企业生存为目标</p></li><li><p>以追求利润最大化为目标</p></li><li><p>以保持和提高市场占有率为目标</p></li><li><p>以应付和抑制竞争为目标</p></li><li><p>以树立企业形象为目标</p></li></ol></div></div></li><li><p>简述规模报酬递减的原因。</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li><p>在技术方面的经济成果：首先，生产规模越大，专业化的程度越高，可以在内部实行更精细的分工；其次，较大规模的行业能够才用专用机器；最后，大规模生产可以对生产的副产品进行综合利用。</p></li><li><p>管理方面的经济成果：这主要指大规模生产可以对管理工作进行有效的分工</p></li><li><p>商业方面的经济成果：这种经济效果是通过大企业在购买原料和出售商品时获得的。</p></li><li><p>金融方面的经济效果：当企业为了发展而筹措资金时，大企业往往具有非常有利的条件。</p></li><li><p>承担风险方面的经济效果：这里所指的风险，主要来自产品需求和原料提供发生突然变化而带来的不确定风险</p></li></ol></div></div></li><li><p>市场调查的方法通常有哪几种？各有什么优缺点？</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>市场调查的方法通常有访问调查法和市场是研发两种</p><ol><li><p>访问调查法具有一定的效度和信度，同时可以让被调查者自由表现情感。但是，访问调查法的一个潜在问题时，被调查者的回答不一定成为其实际行动，也就是说，消费者不一定是按其所说的去做。</p></li><li><p>与访问调查法相比，市场实验法的有点在于它反映消费者的实际行动，但它仍具有局限性，面临以下问题：一个问题是存在因市场实验引起的顾客流失的风险。另一个问题是企业无法控制影响需求的所有要素。还有，由于大多数实验的时间相对较短，消费者可以能完全不知道价格或广告的变化，因此，依据他们的反应可能会低估这些变化可能带来的影响。</p></li></ol></div></div></li><li><p>家电行业的制造商发现，为了占有市场份额，他们不得不采取一些竞争策略，包括广告、售后服务、产品外形设计，其竞争程度是很激烈的。因为，家电行业被认为是完全竞争市场行业。这种说法对么？</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li><p>这种认识是不准确的。一个市场是否是完全竞争市扬，并不是由其竞争的激烈程度来決定。</p></li><li><p>完全竟争行业要求行业中的厂商生产的商品是同质的，由于企业间产品是同质的，也就是说，在消费者眼里，不同企业的产品并没有区别，因此，在这种市场里，企业谋求产品差异化和做广告都是没有必要的。这与材料中家电行业制造商做广告、优化售后服务、优化产品外形设计的做法相矛盾。</p></li></ol></div></div></li><li><p>投入要素边际收益递减规律的内容和前提是什么？</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li><p>内容</p><p>边际收益递减规律也称报酬递减法则，是指在技术水平不变的条件下，当把一种可变的生产要素连续地、等量地投入到一种或几种数量不变的生产要素中时，最初这种生产要素的增加会使产量的增量（即边际产量）增加，但当它的増加超过一定数量之后，继续增加该要素的投入，所得到的产量的增量（即边际产量）是递减的，最终还会使产量绝对减少。</p></li><li><p>前提</p><ul><li><p>这一规律是以生产技术状况既定不变为前提</p></li><li><p>这一规律是以一种要素可变，而其他要素的投入量不变为前提</p></li></ul></li></ol></div></div></li></ol><h3 id="综合题"><a class="markdownIt-Anchor" href="#综合题"></a> 综合题</h3><ol><li><p>该不该承接这项合同</p><div class="hide-toggle" style="border: 1px solid  #ebf9ed"><div class="hide-button toggle-title" style="background-color:  #ebf9ed;"><i class="fas fa-caret-right fa-fw"></i><span>题目</span></div>    <div class="hide-content"><p>张先生是大昌空调安装公司的老板，他要与某市政府签订合同，为该市的市政大楼安装空调。该市政府要求这项工程必须在6月份的21天内完成，并同意支付安装费11500元。张先生估计完成这项工程需要83个工，但6月份是该公司最忙的月份，他只能抽出3个有经验的师傅，即只能有63个工（=21×3)用于这项工程，每个工预计要付工资75元，即人工费用共为4725元（=75×63)。幸好，张先生的儿子小张正值学校放假，也可以参加该项工程，干ー些辅助性工作。小张如果在假期到别处打工每天可收入50元。<br />在安装过程中，需要耗费材料。在材料中除了有一个特殊部件需要临时购买外，其他材料可从库存中提取，其原价为4750元，现在的市场价为5035元，预计特殊部件的价格为850元。</p><p>根据以上数据，请你为张先生提出决策建议，是否可以承接这项工程？</p></div></div><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>这个决策的焦点在于：计算该项工程的预期利润时，应不应该扣除机会成本？</p><ol><li><p>如果考虑会计成本，预期利润为1175元（<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>=</mo><mn>11500</mn><mo>−</mo><mn>4725</mn><mo>−</mo><mn>4725</mn><mo>−</mo><mn>850</mn></mrow><annotation encoding="application/x-tex">=11500-4725-4725-850</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">1</span><span class="mord">5</span><span class="mord">0</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">4</span><span class="mord">7</span><span class="mord">2</span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">4</span><span class="mord">7</span><span class="mord">2</span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">8</span><span class="mord">5</span><span class="mord">0</span></span></span></span>），可以承接这项工程。</p></li><li><p>但是，因为经济利润是决策的基础，在计算利润时扣除的应该是机会成本。在本例中，机会成本较会计成本高，表现在两个方面</p><ul><li><p>校长假期在别处打工的劳务收入，至少为1000元（<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>=</mo><mn>50</mn><mo>×</mo><mo stretchy="false">(</mo><mn>83</mn><mo>−</mo><mn>63</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">=50\times(83-63)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">5</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">8</span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">6</span><span class="mord">3</span><span class="mclose">)</span></span></span></span>），而会计成本为0</p></li><li><p>材料市场价与库存原价之间的差额285元（<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>=</mo><mn>5035</mn><mo>−</mo><mn>4700</mn></mrow><annotation encoding="application/x-tex">=5035-4700</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">5</span><span class="mord">0</span><span class="mord">3</span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">4</span><span class="mord">7</span><span class="mord">0</span><span class="mord">0</span></span></span></span>）。</p></li></ul></li><li><p>如果在先前计算的预期利润1175元的基础上扣除至少1285元后，承接这项工程不近不会有预期利润，反而会亏损110元，所以建议张先生不承接这项工程。</p></li></ol></div></div></li><li><p>房地产市场的供求分析</p><div class="hide-toggle" style="border: 1px solid  #ebf9ed"><div class="hide-button toggle-title" style="background-color:  #ebf9ed;"><i class="fas fa-caret-right fa-fw"></i><span>题目 </span></div>    <div class="hide-content"><p>2005年左右，北京低价位房价每平方米2500-3500元，中价位房价每平方米4000元-6500元，高价位房价每平方米8000元-12000元，该房价超过欧美发达国家数倍。与此相对应的是我国人均收水平却是人家的十几分之ー,甚至几十分之ー。根据世界银行在世界各国的统计，住房价格与家庭年收入之比应在3-6倍之间，居民才有购房能力，超过6倍就很难形成买方市场。而在北京，一套70平方米-80平方米的普通商品房，其房价大约要40万元-50万元左右，是普通家庭年收入的十几倍，套较高档的住房价格近百万，是普通居民家庭收入的几十倍。<br />据统计，我国城市人均居住面积不足5平方米的家庭还有很多。一方面是对住房的迫切需求，另一方面是房价居高不下，大量商品房空置。供求双方的尖锐矛盾是房价过高引起的，房价远远超出了普通老百姓的支付能力。</p></div></div><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>运用管理经济学的有关知识来解释这一现象。</span></div>    <div class="hide-content"><p>由商品的需求曲线规律可知：一般情况下，消费者的需求越高，商品的价格也越高；但由于商品房的价格过高，超出了大部分人们的购买水平，能够买的人少，即需求少；而因为做房地产这个行业赚钱多，大部分企业就涌了进来，即商品房的供求很多。供求多，需求烧，商品过剩，而房价居高不下，从而才导致了商品房的大量空置。</p></div></div><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>政府应采取什么措施解决这个问题？</span></div>    <div class="hide-content"><ol><li><p>政府可以对部分住房规定最高价格，最高价格也称限制价格或价格上限，是指为了防止某商品物价上涨而规定低于此商品均衡价格的价格。具体而言，政府可以建造一定数量的经济适用房，并对经济适用房明确规定最高价格，以此来帮助中低收入家庭解决住房困难的问题。</p></li><li><p>另一方面，加大住房购买信贷的发放力度，这也是提高居民支付能力的一项重要措施。它的实施使许多中年人对住房有了支付能力，尤其是白领阶层。他们一次支付不起几十万甚至上百万，但是每月支付几千元是做得到的，有了住房购买信贷，他们可以利用十几年到二十几年的时间来还清房贷。这样就解决了他们的购房难题。</p></li></ol></div></div></li></ol><h2 id="运筹学2004-01"><a class="markdownIt-Anchor" href="#运筹学2004-01"></a> 运筹学(2004-01)</h2><h3 id="选择-填空题-2"><a class="markdownIt-Anchor" href="#选择-填空题-2"></a> 选择、填空题</h3><ol><li><p>短期的科技预测年限范围是<mark>5~10年</mark></p></li><li><p>某高中毕业生选择报考大学的专业时，应采用的决策方法是<mark>计划性决策</mark></p></li><li><p>线性规划的基本特点是模型的数学表达式是<mark>线性函数</mark></p></li><li><p>运输问题是<mark>线性规划问题</mark></p></li><li><p>克鲁斯嘎尔法可以解决<mark>最小枝杈树问题</mark></p></li><li><p>在盈亏分析模型中，固定成本包括<mark>预付成本和计划成本</mark></p></li><li><p>线性规划的图解法适用于<mark>只含有2~3个变量的线性规划问题</mark></p></li><li><p>箭线式网络图中，某项活动最早开始时间等于它的<mark>箭尾节点的最早开始时间</mark></p></li><li><p>运筹学是一门研究如何有效地组织和管理<mark>人机系统</mark>的科学</p></li><li><p>专家小组法适用于<mark>短期</mark>判断预测</p></li><li><p>单纯性法求解线性规划问题时为进行换基迭代，选择基变量转变为非基变量时所依据的原则是保证变量<mark>非负</mark></p></li><li><p>由位势法算的的改进指数与由闭合回路算法算得的改进指数是<mark>相同</mark>的</p></li><li><p>结点时差等于0的节点，叫<mark>关键</mark>节点。</p></li><li><p>当信息作为流量流过网络时，如何设计<mark>流量模型</mark>，使流过网络的流量最大，这被成为网络的流量问题。</p></li><li><p>马尔可夫过程是一种<mark>概论转换</mark>过程</p></li><li><p>盈亏平衡点处企业销售收入为固定成本与<mark>边际</mark>收益率之比</p></li></ol><h3 id="名词解释题"><a class="markdownIt-Anchor" href="#名词解释题"></a> 名词解释题</h3><ol><li><p>定性预测</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>是指利用直观材料，依靠个人经验或主观判断和分析能力，对未来的发展进行预测，又称为直观预测。</p></div></div></li><li><p>不确定条件下决策</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>在这种情况下，存在一个以上的自然状态，而决策者不了解其它状态，甚至不完全了解如何把概论（可能性）分配给自然状态。</p></div></div></li><li><p>订货费用</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>订货费用是当安排某项订货使，每一次都要承担的费用。</p></div></div></li><li><p>可行基解</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>当基解满足非负要求时叫做可行基解</p></div></div></li><li><p>运输问题的表上作业法</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>表上作业法是指首先把销售平衡表和运价表压缩在一张表格里，然后要求一个初始调运方案，再加以判断和调整，直至求得最优方案的方法。</p></div></div></li></ol>]]></content>
    
    <summary type="html">
    
      八月自考考前突击-20200721
    
    </summary>
    
    
      <category term="自学考试" scheme="https://extheor.github.io/categories/%E8%87%AA%E5%AD%A6%E8%80%83%E8%AF%95/"/>
    
      <category term="考前突击" scheme="https://extheor.github.io/categories/%E8%87%AA%E5%AD%A6%E8%80%83%E8%AF%95/%E8%80%83%E5%89%8D%E7%AA%81%E5%87%BB/"/>
    
    
      <category term="考前突击" scheme="https://extheor.github.io/tags/%E8%80%83%E5%89%8D%E7%AA%81%E5%87%BB/"/>
    
  </entry>
  
  <entry>
    <title>八月自考考前突击-20200722</title>
    <link href="https://extheor.github.io/posts/9d967c90/index.html"/>
    <id>https://extheor.github.io/posts/9d967c90/index.html</id>
    <published>2020-07-20T12:37:21.000Z</published>
    <updated>2020-07-31T12:43:30.113Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@v0.1/Hexo/assets/css/APlayer.min.css"><script src="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@v0.1/Hexo/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@v0.1/Hexo/assets/js/Meting.min.js"></script><h2 id="马克思主义基本原理概论2016-10"><a class="markdownIt-Anchor" href="#马克思主义基本原理概论2016-10"></a> 马克思主义基本原理概论(2016-10)</h2><h3 id="选择题"><a class="markdownIt-Anchor" href="#选择题"></a> 选择题</h3><ol><li>唯物辩证法与形而上学根本对立和斗争的焦点在于，是否承认<mark>矛盾是事物发展的动力</mark></li><li>党的十八大报告指出：“倡导富强、民主、文明、和谐，倡导自由、平等、公正、法治，倡导爱国、敬业、诚信、友善，积极培育时间社会主义核心价值观。”其中“爱国、敬业、诚信、友善”是<mark>从个人层面对社会主义核心价值观基本理论的凝练</mark></li><li>在现代生产力系统中，经济管理和预测决策属于<mark>运筹性的综合因素</mark></li><li><mark>风格与习惯</mark>属于社会心理</li><li>产业资本循环中为生产剩余价值准备条件的阶段是<mark>生产阶段</mark></li><li>资本主义民主制的核心和主要标志是<mark>议会制</mark></li><li>在对外经济侵略中，最具新殖民主义特点的做法是<mark>实行“对外援助”</mark></li><li>马克思说，资本主义“不自觉地为一个更高级的生产形势创造物质条件”，它的“历史人物和存在理由”是<mark>生产先进的机器设备</mark></li></ol><h3 id="背诵题"><a class="markdownIt-Anchor" href="#背诵题"></a> 背诵题</h3><ol><li><p>简述马克思主义的科学性与革命性的关系。</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li><p>其科学性是指它既是建立在科学基础之上的，又是关于自然、社会和思维发展普遍规律的科学;</p></li><li><p>其革命性是指它是批判革命的，它把变革旧世界作为自己的任务和目的;</p></li><li><p>它在实践基础上实现了科学性和革命性的统一，科学性是革命性的必要前提和保证，革命性是科学性的必然结论和归宿.</p></li></ol></div></div></li><li><p>简述发挥主观能动性与尊重客观规律的关系。</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>意识的能动性和客观规律是在实践的基础上统一起来的。能动性的实现途径是人们的社会实践。要正确发挥人的主观能动性，必须充分认识二者的辩证统一关系：①尊重客观规律是正确发挥主观能动性的前提;②认识和利用客观规律又必须充分发挥人的主观能动性。</p></div></div></li><li><p>简述认识主体与认识客体的涵义及二者间的关系。</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>认识主体是指认识和实践活动的承担者，是处于一定社会关系中从事实践活动和认识活动的现实的、具体的人。 认识客体是指人的实践活动和认识活动所指向的对象。<br />认识的 主体和客体是一对矛盾的两个方面它们之间存在着既对立又统一的辩证关系。具体说来，它们的关系表现如下：</p><ol><li><p>主体和客体的实践关系</p></li><li><p>主体和客体的认识关系</p></li><li><p>主体和客体的相互作用</p></li></ol></div></div></li><li><p>如何理解生产商品的劳动二重性?</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>商品是通过人的劳动所生产出来的，因而商品的使用价值和价值二因素也是由生产商品的劳动的二重性所决定的。这种劳动的二重性就是具体劳动和抽象劳动。</p><p>具体劳动和抽象劳动是商品生产者的同一劳动过程的不可分割的两个方面，它们在时间上和空间上是统一的，并不是各自独立存在的两种劳动或两次劳动。商品生产者在从事具体劳动的同时，也就支出了抽象劳动。具体劳动是生产商品劳动的自然属性，抽象劳动是生产商品劳动的社会属性。具体劳动反映人与自然的关系，抽象劳动反映社会生产关系。</p></div></div></li><li><p>简述发达市场经济国家调控货币量的主要方法。</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>一是公开市场业务，即由中央银行在货币资本市场上公开出售或收购有价证券，以调节流通中的货币量。</p><p>二是最低准备金率政策，即通过调整商业银行在中央银行的准备金率，来调节流通中的货币量。</p><p>三是再贴现率政策，即通过调整商业银行到中央银行再贴现票据的利率，来调节流通中的货币量。</p></div></div></li><li><p>试述社会形态发展的统一性和多样性的含义及表现.</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li><p>社会形态发展的统一性表现在：一是社会形态发展的纵向统一性，是指各个国家和种族的历史，一般都应从低级到高级依次历经原始社会、奴隶社会、封建社会、资本主义 社会、共产主义社会五种社会形态.二是社会形态发展的横向统一性，是指处于同一社会形态的不同国家和种族的历史发展既有的共同性、普遍性。</p></li><li><p>社会形态发展的多样性主要表现：处于同一社会形态的不同国家和种族的历史具有各自的特点;各国在不同的社会形态中所具有的典型意义不同.人类社会在由较低的社会形态向较高的社会形态转变时， 不同国家和民族所采取的过度形式各有特点;有些国家和民族，由于特殊的历史条件，在由一个社会形态向另一个社会形态转变的过程中，可能超越某一个或某个社会形态不同</p></li></ol></div></div></li><li><p>试述经济全球化的主要内容及后果。</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>当今经济全球化的主要内容</p><ol><li><p>生产的全球化，跨国公司越来越成为世界经济的主导力量;</p></li><li><p>市场的全球化，国际贸易迅速发展，国际贸易成为世界经济的火车头;</p></li><li><p>资金的全球化，国际金融迅速发展，巨额资金在各国之间自由流动;</p></li><li><p>科技开发和应用的全球化;</p></li><li><p>信息传播的全球化;</p></li><li><p>国际直接投资迅速增长，并呈现多元化格局。</p></li></ol><p>经济全球化是一把利剑一方面，它为发展中国家提高提供了难得的发展机遇，有利于吸收外资，弥补国内建设资金不足;有利于引进技术和设备，实现技术发展的跨越;有利于学习先进的管理经验，培养高素质的管理人才;有利于发挥比较优势，开拓国际市场。另一方面，它也给发展中国家带来不利和风险，使发展中国家主权和经济安全受到挑战。经济全球化给发达国家和发展中国家带来的是不均等、不公正的竞争机会。</p></div></div></li><li><p>为什么说社会主义民主是新型的民主?</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>社会主义民主是真正的人民民主，是新型的民主。</p><p>首先，从公民与政权的关系来看，新型民主是工人阶级和广大劳动人民享有广泛的民主权利，其中主要是管理国家和社会的权利;</p><p>其次，在新型民主条件下运用民主方法解决社会矛盾的范围是最为广泛的，而且随着社会主义民主的发展会越来越广泛;</p><p>最后，从国家活动原则来看，坚持民主集中制原则，它要求少数服从多数，个人服从集体，局部服从整体，这是新型民主在国家活动中的真正体现。新型民主是最高类型的民主，也是最后类型的民主</p><p>社会主义国家所以要实行新型民主，除了国家性质因素外，主要是基于两个方面的原因：第一，实行新型民主是社会主义建设的需要;第二，发展新型民主是巩固与发展社会主义政治制度的需要。</p></div></div></li></ol><h2 id="计算机网络原理2019-10"><a class="markdownIt-Anchor" href="#计算机网络原理2019-10"></a> 计算机网络原理(2019-10)</h2><h3 id="选择-填空题"><a class="markdownIt-Anchor" href="#选择-填空题"></a> 选择、填空题</h3><ol><li><p>比较多见于广域网、核心网络的拓扑结构是<mark>网状拓扑结构</mark></p></li><li><p>如果将物理链路看作传播数据的管道，则用来表示一段链路可容纳的数据位数的概念是<mark>时延带宽积</mark></p></li><li><p>网络应用进程可以创建的面向传输层 UDP 接口的套接字是<mark>数据报类型套接字</mark></p><blockquote><ol><li>数据报类型套接字 <code>SOCK_DGRAM</code>（面向 UDP）</li><li>流式套接字 <code>SOCK_STREAM</code>（面向 TCP）</li></ol></blockquote></li><li><p>以下设备的协议栈中有传输层协议的是<mark>主机</mark></p></li><li><p>对于滑动窗口协议，与信道利用率有关的是<mark>发送窗口的大小</mark></p></li><li><p>已知 TCP 报文段的首部长度字段的值为 15，则表示 TCP 报文段的首部和选项字段的最大长度分别为<mark>60 字节和 40 字节</mark></p><blockquote><p>P113，首部长度字节为 4 位二进制数，则最大为二进制 1111 即 60，固定长度为 20，那么选项字段为 40</p></blockquote></li><li><p>路由器的交换结构不包括<mark>基于端口交换</mark></p></li><li><p>最具有代表性的分布式路由选择算法是<mark>距离向量路由选择算法</mark></p></li><li><p>设有长度为 1km，数据传输速率为 10Mbps 的以太网，信号传播速度为 200m/μs，则求得 MAC 帧的最小帧长度为<mark>100bit</mark></p><blockquote><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><msub><mi>L</mi><mrow><mi>m</mi><mi>i</mi><mi>n</mi></mrow></msub><mi>R</mi></mfrac><mo>=</mo><mfrac><mi>D</mi><mi>v</mi></mfrac></mrow><annotation encoding="application/x-tex">\frac {L_{min}} {R} = \frac {D} {v}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.233431em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8884309999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.217331em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">D</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p></blockquote></li><li><p>若采用 HDLC 协议发送的数据为 101111100101111101111100 则接收的实际数据应为<mark>101111101011111111110</mark></p><blockquote><p>在 HDLC 协议中，除了帧边界，若发现有 5 个连续的 1 就在第五个 1 后插入一个 0</p></blockquote></li></ol><h3 id="简答题"><a class="markdownIt-Anchor" href="#简答题"></a> 简答题</h3><ol><li><p>简述为UDP套接字分配端口号的两种方法。</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>一种方法是创建一个UDP套接字时，传输层自动地为该套接字分配一个端口号（通常从1024~65535分配一个端口号）（2分），该端口号当前未被该主机中任何其他UDP套接字使用（1分）；另一种方法是在创建一个UDP套接字后，通过调用bind（）函数为该套接字绑定一个特定的端口号（2分）。</p></div></div></li><li><p>简述传输层实现可靠传输的主要措施。</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li><p>差错检测，即利用差错编码实现数据包传输过程中的比特差错检测（甚至纠正）。</p></li><li><p>确认，即接收方向发送方反馈接收状态，确认是否正确接收数据。</p></li><li><p>重传，即发送方重新发送接收方没有正确接收的数据。</p></li><li><p>序号，即发送方对发送的数据包进行编号，确保数据按序提交给接收方。</p></li><li><p>计时器，在发送方引入计时器，解决数据丢失问题。</p></li></ol></div></div></li><li><p>简述需电路交换和数据报交换的主要差别</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>虚电路网络通常由网络完成顺序控制、差错控制和流量控制等功能（1分），向端系统提供无差错数据传送服务，而端系统则可以很简单（1。5分）；数据报网络通常由网络实现的功能很简单，如只实现基本的路由与转发功能（1分），而顺序控制、差错控制和流量控制等功能则由端系统来完成（1。5分）。</p></div></div></li><li><p>简述数据链路层提供的主要服务</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li><p>组帧，将要传输的数据封装成帧。（1 分）</p></li><li><p>链路接入，协调各结点使用共享的物理传输媒介或独占的通信链路实现帧的成功传输。（1 分）</p></li><li><p>可靠交付，即在相邻结点间经数据链路实现数据报的可靠传输。（1 分）</p></li><li><p>差错控制，解决数据链路层帧在物理媒介上的传播过程中产生的比特翻转的差错。（2 分）</p></li></ol></div></div></li><li><p>简述虚拟局域网（VLAN）的概念及其划分方法。</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>虚拟局域网是一种基于交换机的逻辑分割（或限制）广播域的局域网应用形式。（2分）划分VLAN的主要方法有基于交换机端口划分、基于MAC地址划分和基于上层协议类型或地址划分等方法。（3分）</p></div></div></li><li><p>简述数字签名应满足的要求</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li><p>接收方能够确认或者证实发送方的签名，但不能伪造。（1 分）</p></li><li><p>发送方发出签名的消息给接收方后，就不能再否认他所签发的消息。（1.5 分）</p></li><li><p>接收方对已收到的签名消息不能否认，即有收报认证。（1 分）</p></li><li><p>第三者可以确认收发双发之间的消息传送，但不能伪造这一过程。（1.5 分）</p></li></ol></div></div></li></ol><h2 id="管理经济学模拟卷三"><a class="markdownIt-Anchor" href="#管理经济学模拟卷三"></a> 管理经济学(模拟卷三)</h2><h3 id="选择题-2"><a class="markdownIt-Anchor" href="#选择题-2"></a> 选择题</h3><ol><li><p>某企业原来生产产品A，利润为500元，现在改生产产品B，所花材料费为800元，则生产产品B的机会成本为<mark>500元</mark></p></li><li><p><mark>互补商品价格涨价</mark>会导致需求曲线向左移</p></li><li><p>某商品的需求曲线是一条水平的直线，表明该商品需求价格弹性是<mark>完全弹性</mark></p></li><li><p>等成本曲线平行向外移动表明<mark>成本增加了</mark></p></li><li><p>垄断性竞争市场结构的特征之一是<mark>许多企业生产的产品是有差别的</mark></p></li><li><p>在长期中不存在，只有在短期内存在的成本是<mark>固定成本</mark></p></li><li><p>单一可变投入要素的分析中，当边际产量为零时，企业的<mark>总产量最大</mark></p></li><li><p>需求的变动是指<mark>在每一价格水平上，需求量均发生了变动</mark></p></li></ol><h3 id="文字题"><a class="markdownIt-Anchor" href="#文字题"></a> 文字题</h3><ol><li><p>简述撇脂定价法的含义及其着眼点。</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li><p>含义</p><p>在产品生命周期最初阶段的新产品最初上市时，把产品的价格定得很高，以便在较短的期间内获取最大利润。</p></li><li><p>着眼点</p><ul><li><p>尽快收回投入资金，补偿企业消耗</p></li><li><p>新产品刚刚投放市场，竞争者来不及跟进，企业可以保持一段时间的垄断地位。</p></li><li><p>如果以后有竞争者进入市场，企业可以比较从容的适当降低价格，排挤竞争对手</p></li></ul></li></ol></div></div></li><li><p>简述合理确定中间产品转移价格的重要性。</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li><p>中间产品转移价格水平影响进行交易的两个事业部的产量决策，由此也就影响到整个企业的产量。如果中间产品的转移价格制定的不合理，整个企业就无法按照最佳产量进行生产</p></li><li><p>中间产品转移价格水平影响进行交易的两个事业部的利润水平，如果中间产品的转移价格制定的不合理，不仅会影响到相关事业部的员工积极性，甚至会威胁到事业部或企业的生存与发展</p></li></ol></div></div></li><li><p>简述显性成本和隐性成本的含义。</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li><p>显性成本</p><p>企业在生产要素市场上购买或租用所需要的生产要素的实际支出</p></li><li><p>隐形成本</p><p>在形式上没有支付义务的，企业为使用自己提供的那一部分生产要素而支付的作为报酬的费用</p></li></ol></div></div></li><li><p>简述目标利润定价法和优缺点。</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li><p>优点</p><p>可保证企业既定的目标利润，从而实现既定的目标收益率</p></li><li><p>缺点</p><ul><li><p>只考虑了企业自身利益，没有考虑市场竞争状况和现实的市场需求情况</p></li><li><p>需要预先确定产品销量，然后再确定产品价格，但是其实销售量是由价格所决定的。所以，按照这种方法定价，不一定能实现预测销售量</p></li></ul></li></ol></div></div></li><li><p>简述消费者剩余的含义，并说明理解这一概念应注意的要点。</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li><p>含义</p><p>消费者愿意为某一产品支付的价格与他在购买商品时实际支付的价格之间的差额</p></li><li><p>注意要点</p><ul><li><p>消费者剩余并不是实际收入的增加，只是一种心里感觉</p></li><li><p>生活必需品的消费者剩余大</p></li></ul></li></ol></div></div></li></ol><h3 id="综合题"><a class="markdownIt-Anchor" href="#综合题"></a> 综合题</h3><ol><li><p>信子裙</p><div class="hide-toggle" style="border: 1px solid  #ebf9ed"><div class="hide-button toggle-title" style="background-color:  #ebf9ed;"><i class="fas fa-caret-right fa-fw"></i><span>题目描述</span></div>    <div class="hide-content"><p>20世纪80年代中期，日本电视连续剧《血疑》曾风靡神州大地。女主人公信子和她父亲大岛茂的故事感动了许多人。精明的商家从中发现了商机。上海一家服装厂推出了信子裙，北京家服装厂推出了大岛茂风衣。但结果却并不相同，上海的厂家大获其利，北京的厂家却亏了。</p></div></div><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>驱使消费者购买商品的动机是什么？</span></div>    <div class="hide-content"><p>消费者在消费商品或服务时所感受到的满足被称作商品的效用，它即是消费者购买商品的冬季。</p></div></div><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>为什么两家厂商根据同一部电视剧推出的服装，受欢迎程度却如此不同？</span></div>    <div class="hide-content"><ol><li><p>消费者愿意支付的价格取决于对该商品的评价，即他们感觉到的效用大小。这种效用大小又取决于不同消费者的偏好。</p></li><li><p>首先，信子裙的消费者是少女，这个消费群体的特点是追逐时尚，偏好受时尚影响大而且多变。他们对时尚的追求会体现在消费上。因此，看了《血凝》后他们极为崇尚信子，穿信子裙就是她们表达自己这种偏好的方式。已有许多裙子，再买一条信子裙并不会发生边际效用递减，甚至，她们对时髦的信子裙的评价还高于其他裙子，因此，愿意出价购买，企业就成功了</p></li><li><p>但大岛茂风衣的消费者是中年男子。这个消费群体偏好较为稳定，受时尚影响较小。他们也很佩服大岛这样的父亲，但这种佩服不会表现在模仿大岛茂着装上。他们甚至会认为穿大岛茂风衣会让人觉得傻，不符合中年男子成熟的气质。大岛茂风衣不会给他们带来更多的效用。</p></li></ol></div></div></li><li><p>制药</p><div class="hide-toggle" style="border: 1px solid  #ebf9ed"><div class="hide-button toggle-title" style="background-color:  #ebf9ed;"><i class="fas fa-caret-right fa-fw"></i><span>题目 </span></div>    <div class="hide-content"><p>联合制药公司已经花了5000万元用来开发和试验一种新药。市场营销部门的经理估计，为了使这种产品投入市场，还需要花3000万元广告费，但将来全部销售收入估计只有6000万元即支出将超过收入2000万元（=5000+3000-6000)。为此，他建议应当停止生产和销售这种药品。</p></div></div><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>你认为他们的建议是否正确</span></div>    <div class="hide-content"><ol><li>销售经理的建议不正确，因为不管是否做出生产和销售该商品的决策，开发成本都已经投入，它属于沉没成本。企业在作决策时应考虑的是3000万元的广告费，这才是生产与销售新药的增量成本，用它与6000万元的销售收入比较，6000-3000=3000万，因此企业是应该继续生产和销售这种小品的。</li></ol></div></div><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>如果会计部门现在又提出，如果经营这种产品，它必须分推公司的间接费用3500万元。这新的信息，是否影响你的決策？为什么？</span></div>    <div class="hide-content"><p>若增加间接费用3500万元，经营销售创造的3000万元毛利低于新增的间接费用，经营该项目的亏损将更多，作为该项目负责人将选择放弃。但如站在全公司老板角度考虑，该项目分摊了3500万元间接费用，使公司其他项目间接费用减少，从而增加其他项目的账面利润，也可以考虑继续经营该产品。</p></div></div></li></ol><h2 id="运筹学2018-04"><a class="markdownIt-Anchor" href="#运筹学2018-04"></a> 运筹学(2018-04)</h2><h3 id="选择-填空题-2"><a class="markdownIt-Anchor" href="#选择-填空题-2"></a> 选择、填空题</h3><ol><li><p>判断预测法包含<mark>专家小组法</mark></p></li><li><p>可用于不确定条件下决策的是<mark>现实主义决策标准</mark></p></li><li><p>线性规划模型的标准形式中<mark>约束条件为等式方程组</mark></p></li><li><p>线性规划的一个基变量组对应<mark>一个特解和一个基解</mark></p></li><li><p>运输问题中的修正分配法也成为<mark>位势法</mark></p></li><li><p>图论中的树满足的条件是<mark>不连通且不含圈</mark></p></li><li><p>累计频率数称为<mark>随机数</mark></p></li><li><p>一般来说，3~5年的经济预测为<mark>长期预测</mark></p></li><li><p>线性规划问题若有最优解，则它必定是某个基变量组的<mark>可行基解</mark></p></li><li><p>箭线式网络图中，以结点代表<mark>活动的开始和完成</mark></p></li><li><p>二阶马尔可夫过程假定对某些事件未来周期的选择取决于<mark>前两个周期</mark>的时间的选择情况</p></li><li></li></ol><h3 id="名词解释题"><a class="markdownIt-Anchor" href="#名词解释题"></a> 名词解释题</h3><ol><li><p>定量决策</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>借助某些正规的计量方法而做出的决策</p></div></div></li><li><p>相关检验</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>判定y与x的相关程度或两者之间的线性关系的检验</p></div></div></li><li><p>订货费用</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>当安排某项订货时，每一次都要承担的费用</p></div></div></li><li><p>最小二乘法</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>指寻求误差平方总和最小配合趋势线的方法</p></div></div></li><li><p>边际收益率</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>指产品边际收益值与产品销售价格之比</p></div></div></li></ol>]]></content>
    
    <summary type="html">
    
      八月自考考前突击-20200722
    
    </summary>
    
    
      <category term="自学考试" scheme="https://extheor.github.io/categories/%E8%87%AA%E5%AD%A6%E8%80%83%E8%AF%95/"/>
    
      <category term="考前突击" scheme="https://extheor.github.io/categories/%E8%87%AA%E5%AD%A6%E8%80%83%E8%AF%95/%E8%80%83%E5%89%8D%E7%AA%81%E5%87%BB/"/>
    
    
      <category term="考前突击" scheme="https://extheor.github.io/tags/%E8%80%83%E5%89%8D%E7%AA%81%E5%87%BB/"/>
    
  </entry>
  
  <entry>
    <title>八月自考考前突击-20200724</title>
    <link href="https://extheor.github.io/posts/74f5d9a5/index.html"/>
    <id>https://extheor.github.io/posts/74f5d9a5/index.html</id>
    <published>2020-07-20T12:37:21.000Z</published>
    <updated>2020-07-31T12:43:30.115Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@v0.1/Hexo/assets/css/APlayer.min.css"><script src="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@v0.1/Hexo/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@v0.1/Hexo/assets/js/Meting.min.js"></script><h2 id="马克思主义基本原理概论2017-10"><a class="markdownIt-Anchor" href="#马克思主义基本原理概论2017-10"></a> 马克思主义基本原理概论(2017-10)</h2><h3 id="选择题"><a class="markdownIt-Anchor" href="#选择题"></a> 选择题</h3><ol><li>辩证法和形而上学的区别在于如何回答<mark>世界的存在是怎样的问题</mark></li><li>矛盾是事物发展的动力，这说明事物发展的根本原因是<mark>事物的内部矛盾</mark></li><li>在唯物辩证法的基本范畴中，内容和形式反映了事物的<mark>内在要素和结构方式间的关系</mark></li><li>两种商品相互交换的量的关系或比例就是商品的<mark>交换价值</mark></li><li>相对剩余价值的获得是<mark>全社会劳动生产率普遍提高的结果</mark></li><li>不变资本和可变资本数量构成上的比例是资本的<mark>价值构成</mark></li><li>资本主义国家向某个濒临破产的私人企业注入一定量的国有资本，使之能继续生存下去，此时这个企业的性质属于<mark>资本主义国有资本和私人资本在企业内部的结合</mark></li></ol><h3 id="背诵题"><a class="markdownIt-Anchor" href="#背诵题"></a> 背诵题</h3><ol><li><p>简述马克思主义科学体系的主要组成部分及其内在联系。</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li>马克思主义理论体系的三个主要组成部分是马克思主义哲学、马克思主义政治经济学、科学社会主义。（3分）</li><li>马克思主义的各个组成部分，是一个具有内在逻辑联系的科学体系，其中马克思主义哲学是科学的世界观和方法论，政治经济学是马克思主义的理论基础，处于核心地位的则是科学社会主义理论。这三者之间相互渗透、互相补充，构成统一的马克思主意学说（3分）</li></ol></div></div></li><li><p>简要说明逻辑证明与实践检验的关系。</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li><p>坚持实践是检验真理的唯一标准，并不否认逻辑证在认识和探索真理中的作用。（3分）</p></li><li><p>承认逻辑证明的作用，并不是说逻辑证是检验真理的标准，不能用逻辑证明代替实践标准。（3分）</p></li></ol></div></div></li><li><p>劳动力商品与一般商品在使用价值方面有什么不同?</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li>劳动力商品的使用价值不是一般的使用价值，而是创造价值的源泉（2分）</li><li>对劳动力商品使用价值来说，一方面创造出商品的使用价值。（2分）另一方面创造出商品的价值，而且是比自身价值更大的价值。（2分）</li></ol></div></div></li><li><p>为什么说社会主义发展道路是多样的?</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li>各国在社会主义革命时，其生产力状况和社会发展阶段是不同的（2分），由此决定，不同社会主义国家的发展道路具有不同的特点。</li><li>各国的历史传统、文化习俗及具体国情各不相同。（2 分）</li><li>随着时代的前进和实践的发展，各国都在探索适合本国国情的发展道路。</li></ol></div></div></li><li><p>如何理解社会主义是走向共产主义的必由之路?</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li>依据共产主义社会发展两阶段原理，人类社会的发展，只能从资本主义社会首先过渡到社会主义社会，而不能超越社会主义这个历史阶段。社会主义社会是共产主义社会的低级阶段，是走向共产主义高级阶段的必经阶段。（3分）</li><li>实现共产主义所必须具备的基本条件，只有在社会主义历史阶段经过长期发展才能创造出来。不经过社会主义社会的长期发展，不具备向共产主义过渡的条件，就不可能实现共产主义。（3 分）</li></ol></div></div></li><li><p>试述意识的能动性及其主要表现。在实际工作中如何正确发挥人的主观能动性?</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li><p>意识的能动性（主观能动性），是指意识能动地反映世界和通过实践改造世界的能力和作用。（2 分）</p></li><li><p>意识的能动性具体表现在四个方面：意识活动具有目的性和计划性；意识活动具有主动性、创造性；意识对于人的生理活动具有一定影响作用；意识能通过指导实践改造客观物质世界。（4 分）</p></li><li><p>尊重客观规律是正确发挥主观能动性的前提。只有正确认识了客观规律，并按规律办事，才能有效地改造世界，实现人们预期的目的。（2 分）</p></li><li><p>在社会主义现代化建设和各项工作中，必须把发挥主观能动性和尊重客观规律结合起来，把高度的实践热情与科学的求是态度结合起来，发对片面强调发挥主观能动性，无视客观规律的盲目蛮干。（2 分）</p></li></ol></div></div></li><li><p>试述社会历史发展的决定性与选择性的关系。</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li>社会历史发展的决定性是指历史决定论，社会历史发展的选择性是指主体选择的作用。承认历史决定论与承认主体选择的作用是一致的。人们对社会历史发展规律的揭示，正是为探寻作为历史主体的人的选择活动开辟广阔的天地，从而主体能以日益合乎客观规律的活动。更加自觉地创造自己的历史。（4分）</li><li>首先，在历史决定论看来，规律在显示生活中是非直接的，知识作为一种趋势，一种平均数而存在。（2 分）</li><li>其次，在历史决定论看来，社会规律给人的活动所提供的并不是一种唯一的现实可能性，而往往是提供一个由多种现实可能组成的可能性空间，何种可能性成为现实，取决于人的自觉活动和主体选择。（2 分）</li><li>再次，每一种可能性的实现又有多种多样的形式。人们对具体模式和途径的选择，可以表现出巨大的能动性。（2 分）</li></ol></div></div></li><li><p>试述经济全球化的含义、原因和主要内容。</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li>经济全球化是指在生产不断发展、科技加速进步、社会分工和国际分工不断深化、生产的社会化和国际化程度不断提高的情况下，世界各国、各地区的经济活动越来越超出一国或地区范围而相互联系、相互依赖的过程。（3 分）</li><li>战后以来国际分工不断深化，生产国际化的程度不断提高，资本国际化也在不断发展，导致经济全球化的到来。（3 分）</li><li>经济全球化的内容主要有三方面：一是生产全球化，生产领域中国际协作加强，各国在生产上结合日益紧密。二是贸易全球化，国际商品交流日益扩大。三是资本全球化，随着资本规模的扩大，资本全球化程度日益提高。（4 分）</li></ol></div></div></li></ol><h2 id="计算机网络原理模拟二"><a class="markdownIt-Anchor" href="#计算机网络原理模拟二"></a> 计算机网络原理(模拟二)</h2><h3 id="选择-填空题"><a class="markdownIt-Anchor" href="#选择-填空题"></a> 选择、填空题</h3><ol><li>多见于个域网中的拓扑结构是<mark>星形拓扑结构</mark></li><li>在迭代查询中，若在顶级域名服务中解析出了被查询的ip地址，则会把解析结果发送给<mark>本地域名服务器</mark>。</li><li>在虚电路分组交换中，在传输数据前就提前建立，并能长期使用的虚电路是<mark>永久型</mark></li><li>IEEE802.11帧的类型中不包括<mark>无编号帧</mark></li><li>描述网络传输数据快慢的计算机网络性能是<mark>速率</mark></li><li>最典型、最基本的网络应用是<mark>C/S</mark>结构网络应用</li></ol><h3 id="简答题"><a class="markdownIt-Anchor" href="#简答题"></a> 简答题</h3><ol><li><p>简述IDP传输协议的优点。</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li>应用进程更容易控制发送什么数据以及何时发送，实时性高</li><li>无需建立链接，传输数据前不必建立连接，节省时间</li><li>无连接状态，因不必建立链接，所以不必维护该连接链路，故开销小。</li><li>首部开销小，相比首部开销至少有20字节的tcp报文段，UDP仅有8字节。</li></ol></div></div></li><li><p>简述虚电路分组交换的两种类型。</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li>永久型虚电路：是一种提前建立、长期使用的虚电路，虚电路的建立时间开销基本可以忽略。</li><li>交换型虚电路：是根据通信需要而临时建立的虚电路，通信结束后立即拆除，虚电路的建立和拆除时间开销有时相对影响较大。</li></ol></div></div></li><li><p>简述虚电路交换与数据报交换的主要差别</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>虚电路交换与数据报交换的主要差别表现为：是将顺序控制、差错控制和流量控制等功能交由网络来完成，还是由端系统来完成。</p><ol><li><p>虚电路网络通常由网络完成这些功能，向端系统提供无差错数据传送服务，而端系统则很简单；</p></li><li><p>数据报网络实现的功能很简单，如基本的路由转发，顺序控制、差错控制和流量控制等功能则有端系统来完成。</p></li></ol></div></div></li><li><p>简述路由器的组成部分</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li>输入端口</li><li>交换结构</li><li>输出端口</li><li>路由处理器</li></ol></div></div></li><li><p>简述拥塞控制的概念和发生拥塞的主要原因</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>拥塞控制就是端系统或网络节点，通过采取某种措施来避免拥塞的发生，或者对已发生的拥塞做出反应，以便尽快消除拥塞。发生拥塞的原因：</p><ol><li>缓冲区容量有限</li><li>传输线路的宽带有限</li><li>网络节点的处理能力有限</li><li>网络中某些部分发生了故障</li></ol></div></div></li><li><p>简述数据链路层提供的服务</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li><p>组帧</p></li><li><p>链路接入</p></li><li><p>可靠交付</p></li><li><p>差错控制</p></li></ol></div></div></li></ol><h3 id="计算题"><a class="markdownIt-Anchor" href="#计算题"></a> 计算题</h3><div class="tabs" id="tab1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#tab1-1">题目</button></li><li class="tab"><button type="button" data-href="#tab1-2">答案</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="tab1-1"><p>若主机A、B、C在同一条传输链路上，该链路的带宽为1000Hz，传擂速率为500m/s，主机A距主机C有1000m，主机B距主机C有1500m，现主机A、B同时向主机C传输一数据分组，主机A传输的数据分组为5000bit，主机B传输的数据分组为3000bit，问：当主机B传输的数据分组到达主机A时，主机A是否传输完毕自己的数据分组？若没有还剩多少bit？</p><button type="button" class="tab-to-top" onclick="scrollToDest($(this).parents('.tabs'),65)"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="tab1-2"><p>主机A传输完数据分组所用时间为：5000÷1000=5s，</p><p>主机B传输完数据分组所用时间为：3000÷1000=3s，</p><p>主机B传输数据分组到达主机A时共用时：(1500-1000)÷500+3=4s,所以当主机B传输的数据分组到达主机A时，主机A还未传输完自己的数据分组；还剩下：5000-4×1000=1000bit。</p><button type="button" class="tab-to-top" onclick="scrollToDest($(this).parents('.tabs'),65)"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="管理经济学模拟卷一"><a class="markdownIt-Anchor" href="#管理经济学模拟卷一"></a> 管理经济学(模拟卷一)</h2><h3 id="选择题-2"><a class="markdownIt-Anchor" href="#选择题-2"></a> 选择题</h3><ol><li>等产量曲线说明了<mark>为生产一个给定的产出量而尽可能的各种投入要素的组合</mark>。</li><li>一种商品价格的大幅度减少，导致另一种产品销售量的提高，这两种产品属于<mark>互补品</mark></li></ol><h3 id="文字题"><a class="markdownIt-Anchor" href="#文字题"></a> 文字题</h3><ol><li><p>何为供给？影响供给量的主要因素有哪些？</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li>供给是指生产者在一定时间内在各种可能得价格水平下愿意提供且有能力提供得某种商品数量</li><li>影响供给量的主要因素<ul><li>商品的价格</li><li>生产成本</li><li>替代品的价格</li><li>生产者对价格的期望</li></ul></li></ol></div></div></li><li><p>完全竞争的市场结构必须具备哪些条件？</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li>市场上有大量买者和卖者</li><li>市场上所出售的商品和劳务都是同质的，即不存在产品差别</li><li>市场上的各种生产资源可以充分自由地流动，不受任何因素的阻碍</li><li>市场信息是畅通的</li></ol></div></div></li><li><p>比较机会成本与会计成本这两个概念的异同。</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><ol><li>机会成本是指，企业在生产活动中按市场价格支付的一切生产要素的费用，它会出现在会计账面上。企业在进行经营决策时，仅考虑会计成本是不够的，而应该较为广泛地考虑资源的有效配置问题，因而要考虑每项资源的机会成本。</li><li>生产一单位的某种商品的机会成本是指，生产者所放弃的使用相同生产要素在其他生产用途中所能得到的最高收入。机会成本通常不出现在账面上，但它是经营管理人员做决策时必须明确考虑的。通过机会成本分析，能使各种资源得到最有效的利用，做到资源的最优配置。</li></ol></div></div></li><li><p>新产品定价策略有几种，各是什么？</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>在新产品的定价中，有两种对立的定价策略可供选择：一种叫撇脂定价策略；另一种叫渗透定价策略。</p><ol><li>撇脂定价是指在产品生命周期最初阶段的新产品最初上市时，把产品的价格定得很高，以便在较短时间内获取最大的利润，就好像从奶油中撇取奶油一样。</li><li>渗透定价法是在新产品刚上市时，把价格定得很低，使产品很快被市场接收，迅速渗透到市场，占据较大的市场份额，使其他企业难以进入</li></ol></div></div></li><li><p>差别定价存在哪些条件？</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>要成功地实现价格歧视，必须满足以下条件：</p><ol><li>企业必须对价格有一定的控制力</li><li>企业必须能够区分不同消费者地支付意愿</li><li>企业应该能够阻止套利地情况出现</li></ol></div></div></li></ol><h3 id="综合题"><a class="markdownIt-Anchor" href="#综合题"></a> 综合题</h3><div class="tabs" id="tab1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#tab1-1">题目</button></li><li class="tab"><button type="button" data-href="#tab1-2">答案</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="tab1-1"><p>林红看完晚场的电影已是凌晨一点，因为肚子饿了，她总算找到一家还在营业的小餐馆。林红边吃着饭边打量着整个餐馆，小餐馆内只有位客人，异常冷清，不禁在内心发出疑问深夜屈指可数的几个顾客的光临，肯定不可能弥补餐馆的经营成本，餐馆为何不早点打烊？根据上述案例分析餐馆是否要24小时营业？</p><button type="button" class="tab-to-top" onclick="scrollToDest($(this).parents('.tabs'),65)"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="tab1-2"><p>在作出该决策的时候，老板肯定要将其所有的经营成本划分出固定成本与可变成本。餐馆的许多成本ーー店面租金、厨房设备、桌子、盘子、餐具等花费都是固定成本，在深夜停止经营并不能減少这些成本，但老板决定是否在深夜继续经营，即是否要24小时营业只与可变成本一一增加的食物支出和深夜工作的服务员以及厨师的工资或加班费一一相关，当深夜从顾客那得到的总收入大于以上可变成本时，老板就会決定在深夜继续维持营业，即保持24小时营业，否则老板就会选择在深夜停止营业。</p><button type="button" class="tab-to-top" onclick="scrollToDest($(this).parents('.tabs'),65)"><i class="fas fa-arrow-up"></i></button></div></div></div><div class="tabs" id="tab1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#tab1-1">题目</button></li><li class="tab"><button type="button" data-href="#tab1-2">答案</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="tab1-1"><p>为什么肯德基在亚洲比在美国更受欢迎？<br />很多人都对街头随处可见的画有白胡子老头的招牌不陌生，那是肯德基快餐店的标志，近年来肯德基在亚洲各国的业务量都在不断增长在中国和韩国肯德基已经成为快餐界的老大。2000年肯德基在中国国内的营业额大约是20亿元人民币，在最繁忙的天安门广场分店，701个座位每年会接待250万人次。然而再看看肯德基在美国的情况，相较于其他快餐业的竟争者，肯德基的市场份额在萎缩，营业额也不断下降，1991年它在美国的营业额甚至下跌到了5%。</p><p>为什么肯德基在亚洲和美国的业绩回报会出现如此大的差别呢？试通过亚洲人和美国人不同的佽食偏好进行分析。</p><button type="button" class="tab-to-top" onclick="scrollToDest($(this).parents('.tabs'),65)"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="tab1-2"><p><img src= "https://cdn.jsdelivr.net/gh/sviptzk/StaticFile_HEXO@v3.3.1/butterfly/img/loading9.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/blogimg/HexoStaticFile2@latest/2020/07/24/86cd15c5ed12a64520f60e37a40864ec.png" alt="image-20200724163831110" /></p><ol><li><p>大家都知道，肯德基的特点在于它提供一系列的炸鸡类食品：原味鸡块、上校鸡块、香辣鸡翅等等。这类炸鸡很符合亚洲人的胃口。亚洲人本来就有吃鸡的传统，没有哪个民族或宗教是反对吃鸡肉的（当然有的宗教反对吃所有动物的肉）。因而相对于其他的快餐类食品，譬如汉堡类、披萨类，肯德基就以其符合亚洲人的偏好而大行其道。如上图（a）所示是亚洲人的偏好。在图中，炸鸡对汉堡、披萨的边际替代率特别大。</p></li><li><p>然而在美国，由于富裕的美国人越来越注重健康，他们担心炸鸡类食品会导致心脏病，因而对肯德基的需求不断降低。如上图（b）所示，在美国，人们更偏好汉堡、披萨类食品。</p></li></ol><button type="button" class="tab-to-top" onclick="scrollToDest($(this).parents('.tabs'),65)"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="运筹学2019-04"><a class="markdownIt-Anchor" href="#运筹学2019-04"></a> 运筹学(2019-04)</h2><h3 id="选择-填空题-2"><a class="markdownIt-Anchor" href="#选择-填空题-2"></a> 选择、填空题</h3><ol><li>回归方程式<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi><mo>=</mo><mi>a</mi><mo>+</mo><mi>b</mi><mi>x</mi></mrow><annotation encoding="application/x-tex">y=a+bx</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span><span class="mord mathdefault">x</span></span></span></span>中的系数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mo>=</mo><mfrac><mrow><mo>∑</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><mi>b</mi><mo>∑</mo><msub><mi>x</mi><mi>i</mi></msub></mrow><mi>n</mi></mfrac></mrow><annotation encoding="application/x-tex">a=\frac{ \sum y_i-b \sum x_i} {n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.3550069999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0100069999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485007em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop op-symbol small-op mtight" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="mspace mtight" style="margin-right:0.19516666666666668em;"></span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mathdefault mtight">b</span><span class="mspace mtight" style="margin-right:0.19516666666666668em;"></span><span class="mop op-symbol small-op mtight" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="mspace mtight" style="margin-right:0.19516666666666668em;"></span><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></li><li>不确定条件下的决策方法中，包括<mark>最大最大决策标准</mark></li><li>线性规划的一个可行解必定是<mark>特解</mark></li><li>用阶石法在选择调整路线中挑选是<mark>符号格的最小</mark>运量为调整运量</li><li>若用阶石法求解运输问题得到最有运输方案，则有各个空格的改进指数<mark>都大于或等于0</mark></li><li>判断预测法一般包括<mark>特尔裴法</mark>和<mark>专家小组法</mark></li><li>决策树中，<mark>方块</mark>结点是决策结点</li><li><mark>蒙特卡洛</mark>是一个模拟技术，它用一系列的随机数创造分布函数</li><li>对于管理领域，运筹学也是对管理决策工作进行决策的<mark>计量</mark>方法</li><li>图中用<mark>点</mark>表示所要研究的对象</li><li>均匀随机数是均匀分布随机变量的<mark>抽样序列数</mark></li></ol><h3 id="名词解释题"><a class="markdownIt-Anchor" href="#名词解释题"></a> 名词解释题</h3><ol><li><p>定性决策</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>基本上根据决策人员的主观经验或感受到的感觉或知识而制定的决策</p></div></div></li><li><p>保管费用</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>主要是企业自己拥有存货或保管存货所要承担的费用</p></div></div></li><li><p>关键线路</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>在所有各条线路的路长中，路长最长的线路</p></div></div></li><li><p>马尔科夫分析</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>通过分析几种变量现时运动的情况来预计这些量未来运动情况的一种方法。</p></div></div></li><li><p>随机变量</p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>答案</span></div>    <div class="hide-content"><p>随机变量是具有各种不同数值的一个变量，这些不同数值是在一次随机实验中，作为各种结果之一而出现的。</p></div></div></li></ol>]]></content>
    
    <summary type="html">
    
      八月自考考前突击-20200724
    
    </summary>
    
    
      <category term="自学考试" scheme="https://extheor.github.io/categories/%E8%87%AA%E5%AD%A6%E8%80%83%E8%AF%95/"/>
    
      <category term="考前突击" scheme="https://extheor.github.io/categories/%E8%87%AA%E5%AD%A6%E8%80%83%E8%AF%95/%E8%80%83%E5%89%8D%E7%AA%81%E5%87%BB/"/>
    
    
      <category term="考前突击" scheme="https://extheor.github.io/tags/%E8%80%83%E5%89%8D%E7%AA%81%E5%87%BB/"/>
    
  </entry>
  
</feed>
